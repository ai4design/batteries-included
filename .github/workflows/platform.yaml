name: Platform

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  lint:
    name: Lint Platform Build/Test (OTP ${{matrix.otp}} | Elixir ${{matrix.elixir}})

    strategy:
      matrix:
        include:
          - elixir: 1.13.3
            otp: 24.2.2
            node: 16.4.0
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./platform_umbrella
        
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up Elixir
        uses: erlef/setup-elixir@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Set up Node.js
        uses: actions/setup-node@v3.0.0
        with:
          node-version: ${{ matrix.node }}

      - name: Get deps cache
        uses: actions/cache@v2
        with:
          path: deps/
          key: deps-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('**/mix.lock') }}

      - name: Install test dependencies
        run: mix deps.get --only test

      - name: Install dependencies non test
        run: mix deps.get

      - name: Compile deps
        run: mix deps.compile --force --skip-umbrella-children

      - name: Check unused dependencies
        run: mix deps.unlock --check-unused

      - name: Prettier on everything
        run: npx prettier --check . --color

      - name: Credo
        run: mix credo --strict
        env:
          MIX_ENV: test

      - name: Format Check
        run: mix format --check-formatted
        env:
          MIX_ENV: test

  platform:
    name: Platform Build/Test (OTP ${{matrix.otp}} | Elixir ${{matrix.elixir}})

    strategy:
      matrix:
        include:
          - elixir: 1.13.3
            otp: 24.2.2
            node: 16.4.0

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./platform_umbrella
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: batterydbuser
          POSTGRES_PASSWORD: "batterypasswd"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432/tcp
    env:
      POSTGRES_HOST: localhost
      POSTGRES_USER: batterydbuser
      POSTGRES_PASSWORD: "batterypasswd"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up Elixir
        uses: erlef/setup-elixir@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Set up Node.js
        uses: actions/setup-node@v3.0.0
        with:
          node-version: ${{ matrix.node }}

      - name: Install test dependencies
        run: mix deps.get --only test

      - name: Install dependencies non test
        run: mix deps.get

      - name: Setup DB
        run: mix ecto.reset
        env:
          MIX_ENV: test
          POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}

      - name: Clean
        run: mix clean

      - name: Force clean
        run: rm -rf _build

      - name: Compile
        run: mix compile --force --warnings-as-errors

      - name: Run tests
        run: mix test
        env:
          POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}

  npm_test:
    name: NPM test PATH [ ${{ matrix.asset_path }} ]

    strategy:
      matrix:
        include:
          - elixir: 1.13.3
            otp: 24.2.2
            node: 16.4.0
            asset_path: apps/control_server_web/assets

          - elixir: 1.13.3
            otp: 24.2.2
            node: 16.4.0
            asset_path: apps/home_base_web/assets

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./platform_umbrella
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up Elixir
        uses: erlef/setup-elixir@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Set up Node.js
        uses: actions/setup-node@v3.0.0
        with:
          node-version: ${{ matrix.node }}

      - name: Install dependencies non test
        run: mix deps.get

      - name: npm install
        run: |
          pushd ${{ matrix.asset_path }}
          npm install
          popd

      - name: npx eslint
        run: |
          pushd ${{ matrix.asset_path }}
          npx eslint --debug --exit-on-fatal-error js/
          popd

      - name: npm run deploy
        run: |
          pushd ${{ matrix.asset_path }}
          npm run deploy
          popd