name: Integration Tests

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  integration_test:
    name: Integration Test

    strategy:
      matrix:
        include:
          - elixir: 1.13.4
            otp: 25.0
            node: 16.15.0
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./platform_umbrella
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: batterydbuser
          POSTGRES_PASSWORD: "batterypasswd"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432/tcp
    env:
      POSTGRES_HOST: localhost
      POSTGRES_USER: batterydbuser
      POSTGRES_PASSWORD: "batterypasswd"

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up Elixir
        uses: erlef/setup-elixir@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Set up Node.js
        uses: actions/setup-node@v3.2.0
        with:
          node-version: ${{ matrix.node }}

      - uses: AbsaOSS/k3d-action@v2
        name: Setup K3d cluster
        with:
          k3d-version: v5.4.1
          cluster-name: "test-cluster-1"
          args: >-
            --servers 3
            --wait
            --k3s-arg '--disable=traefik@server:*'

      - name: Install test dependencies
        run: mix deps.get --only test

      - name: Install dependencies non test
        run: mix deps.get

      - name: Compile
        run: mix compile --force --warnings-as-errors

      - name: Compile Integration
        run: mix compile --warnings-as-errors
        env:
          MIX_ENV: integration

      - name: Prepare assets
        run: |
          pushd apps/control_server_web/assets
          npm ci
          popd
          pushd apps/control_server_web
          mix assets.deploy
          popd
          pushd apps/home_base_web/assets
          npm ci
          popd
          pushd apps/home_base_web
          mix assets.deploy
          popd

      - name: Ecto reset
        run: mix ecto.reset
        env:
          MIX_ENV: integration
          POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}

      - name: Run tests
        run: mix cmd --app control_server_web mix test
        env:
          POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
          MIX_ENV: integration

      - name: Archive screenshot artifacts
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: screenshots
          path: |
            apps/control_server_web/screenshots
