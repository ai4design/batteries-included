{
  "initial_resources": {
    "/istio/crd/envoyfilters_networking_istio_io": {
      "apiVersion": "apiextensions.k8s.io/v1",
      "kind": "CustomResourceDefinition",
      "metadata": {
        "annotations": {
          "battery/hash": "GRZHLAYVD43CFGCL6O4X4AGARLUTK7OXA5V5DYUJYEB7EYNLVK3Q===="
        },
        "labels": {
          "app": "istio-pilot",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istio-base",
          "battery/app": "istio-base",
          "battery/managed": "true",
          "battery/managed.direct": "true"
        },
        "name": "envoyfilters.networking.istio.io"
      },
      "spec": {
        "group": "networking.istio.io",
        "names": {
          "categories": ["istio-io", "networking-istio-io"],
          "kind": "EnvoyFilter",
          "listKind": "EnvoyFilterList",
          "plural": "envoyfilters",
          "singular": "envoyfilter"
        },
        "scope": "Namespaced",
        "versions": [
          {
            "name": "v1alpha3",
            "schema": {
              "openAPIV3Schema": {
                "properties": {
                  "spec": {
                    "description": "Customizing Envoy configuration generated by Istio. See more details at: https://istio.io/docs/reference/config/networking/envoy-filter.html",
                    "properties": {
                      "configPatches": {
                        "description": "One or more patches with match conditions.",
                        "items": {
                          "properties": {
                            "applyTo": {
                              "enum": [
                                "INVALID",
                                "LISTENER",
                                "FILTER_CHAIN",
                                "NETWORK_FILTER",
                                "HTTP_FILTER",
                                "ROUTE_CONFIGURATION",
                                "VIRTUAL_HOST",
                                "HTTP_ROUTE",
                                "CLUSTER",
                                "EXTENSION_CONFIG",
                                "BOOTSTRAP"
                              ],
                              "type": "string"
                            },
                            "match": {
                              "description": "Match on listener/route configuration/cluster.",
                              "oneOf": [
                                {
                                  "not": {
                                    "anyOf": [
                                      {
                                        "required": ["listener"]
                                      },
                                      {
                                        "required": ["routeConfiguration"]
                                      },
                                      {
                                        "required": ["cluster"]
                                      }
                                    ]
                                  }
                                },
                                {
                                  "required": ["listener"]
                                },
                                {
                                  "required": ["routeConfiguration"]
                                },
                                {
                                  "required": ["cluster"]
                                }
                              ],
                              "properties": {
                                "cluster": {
                                  "description": "Match on envoy cluster attributes.",
                                  "properties": {
                                    "name": {
                                      "description": "The exact name of the cluster to match.",
                                      "type": "string"
                                    },
                                    "portNumber": {
                                      "description": "The service port for which this cluster was generated.",
                                      "type": "integer"
                                    },
                                    "service": {
                                      "description": "The fully qualified service name for this cluster.",
                                      "type": "string"
                                    },
                                    "subset": {
                                      "description": "The subset associated with the service.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "context": {
                                  "description": "The specific config generation context to match on.",
                                  "enum": [
                                    "ANY",
                                    "SIDECAR_INBOUND",
                                    "SIDECAR_OUTBOUND",
                                    "GATEWAY"
                                  ],
                                  "type": "string"
                                },
                                "listener": {
                                  "description": "Match on envoy listener attributes.",
                                  "properties": {
                                    "filterChain": {
                                      "description": "Match a specific filter chain in a listener.",
                                      "properties": {
                                        "applicationProtocols": {
                                          "description": "Applies only to sidecars.",
                                          "type": "string"
                                        },
                                        "destinationPort": {
                                          "description": "The destination_port value used by a filter chain's match condition.",
                                          "type": "integer"
                                        },
                                        "filter": {
                                          "description": "The name of a specific filter to apply the patch to.",
                                          "properties": {
                                            "name": {
                                              "description": "The filter name to match on.",
                                              "type": "string"
                                            },
                                            "subFilter": {
                                              "properties": {
                                                "name": {
                                                  "description": "The filter name to match on.",
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "name": {
                                          "description": "The name assigned to the filter chain.",
                                          "type": "string"
                                        },
                                        "sni": {
                                          "description": "The SNI value used by a filter chain's match condition.",
                                          "type": "string"
                                        },
                                        "transportProtocol": {
                                          "description": "Applies only to `SIDECAR_INBOUND` context.",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "name": {
                                      "description": "Match a specific listener by its name.",
                                      "type": "string"
                                    },
                                    "portName": {
                                      "type": "string"
                                    },
                                    "portNumber": {
                                      "type": "integer"
                                    }
                                  },
                                  "type": "object"
                                },
                                "proxy": {
                                  "description": "Match on properties associated with a proxy.",
                                  "properties": {
                                    "metadata": {
                                      "additionalProperties": {
                                        "type": "string"
                                      },
                                      "type": "object"
                                    },
                                    "proxyVersion": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "routeConfiguration": {
                                  "description": "Match on envoy HTTP route configuration attributes.",
                                  "properties": {
                                    "gateway": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Route configuration name to match on.",
                                      "type": "string"
                                    },
                                    "portName": {
                                      "description": "Applicable only for GATEWAY context.",
                                      "type": "string"
                                    },
                                    "portNumber": {
                                      "type": "integer"
                                    },
                                    "vhost": {
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "route": {
                                          "description": "Match a specific route within the virtual host.",
                                          "properties": {
                                            "action": {
                                              "description": "Match a route with specific action type.",
                                              "enum": [
                                                "ANY",
                                                "ROUTE",
                                                "REDIRECT",
                                                "DIRECT_RESPONSE"
                                              ],
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "patch": {
                              "description": "The patch to apply along with the operation.",
                              "properties": {
                                "filterClass": {
                                  "description": "Determines the filter insertion order.",
                                  "enum": [
                                    "UNSPECIFIED",
                                    "AUTHN",
                                    "AUTHZ",
                                    "STATS"
                                  ],
                                  "type": "string"
                                },
                                "operation": {
                                  "description": "Determines how the patch should be applied.",
                                  "enum": [
                                    "INVALID",
                                    "MERGE",
                                    "ADD",
                                    "REMOVE",
                                    "INSERT_BEFORE",
                                    "INSERT_AFTER",
                                    "INSERT_FIRST",
                                    "REPLACE"
                                  ],
                                  "type": "string"
                                },
                                "value": {
                                  "description": "The JSON config of the object being patched.",
                                  "type": "object",
                                  "x-kubernetes-preserve-unknown-fields": true
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "priority": {
                        "description": "Priority defines the order in which patch sets are applied within a context.",
                        "format": "int32",
                        "type": "integer"
                      },
                      "workloadSelector": {
                        "properties": {
                          "labels": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "status": {
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                  }
                },
                "type": "object"
              }
            },
            "served": true,
            "storage": true,
            "subresources": {
              "status": {}
            }
          }
        ]
      }
    },
    "/istio/crd/requestauthentications_security_istio_io": {
      "apiVersion": "apiextensions.k8s.io/v1",
      "kind": "CustomResourceDefinition",
      "metadata": {
        "annotations": {
          "battery/hash": "7MMYBCMV4TUEOUNPR3MRU67KDUZXETSEIQAIKBGXE5DK5QVXMHTA===="
        },
        "labels": {
          "app": "istio-pilot",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istio-base",
          "battery/app": "istio-base",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "istio": "security"
        },
        "name": "requestauthentications.security.istio.io"
      },
      "spec": {
        "group": "security.istio.io",
        "names": {
          "categories": ["istio-io", "security-istio-io"],
          "kind": "RequestAuthentication",
          "listKind": "RequestAuthenticationList",
          "plural": "requestauthentications",
          "shortNames": ["ra"],
          "singular": "requestauthentication"
        },
        "scope": "Namespaced",
        "versions": [
          {
            "name": "v1beta1",
            "schema": {
              "openAPIV3Schema": {
                "properties": {
                  "spec": {
                    "description": "RequestAuthentication defines what request authentication methods are supported by a workload.",
                    "properties": {
                      "jwtRules": {
                        "description": "Define the list of JWTs that can be validated at the selected workloads' proxy.",
                        "items": {
                          "properties": {
                            "audiences": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "forwardOriginalToken": {
                              "description": "If set to true, the original token will be kept for the upstream request.",
                              "type": "boolean"
                            },
                            "fromHeaders": {
                              "description": "List of header locations from which JWT is expected.",
                              "items": {
                                "properties": {
                                  "name": {
                                    "description": "The HTTP header name.",
                                    "type": "string"
                                  },
                                  "prefix": {
                                    "description": "The prefix that should be stripped before decoding the token.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "fromParams": {
                              "description": "List of query parameters from which JWT is expected.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "issuer": {
                              "description": "Identifies the issuer that issued the JWT.",
                              "type": "string"
                            },
                            "jwks": {
                              "description": "JSON Web Key Set of public keys to validate signature of the JWT.",
                              "type": "string"
                            },
                            "jwksUri": {
                              "type": "string"
                            },
                            "jwks_uri": {
                              "type": "string"
                            },
                            "outputPayloadToHeader": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "selector": {
                        "description": "Optional.",
                        "properties": {
                          "matchLabels": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "status": {
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                  }
                },
                "type": "object"
              }
            },
            "served": true,
            "storage": true,
            "subresources": {
              "status": {}
            }
          }
        ]
      }
    },
    "/postgres/crd/postgresteams_acid_zalan_do": {
      "apiVersion": "apiextensions.k8s.io/v1",
      "kind": "CustomResourceDefinition",
      "metadata": {
        "annotations": {
          "battery/hash": "54QL6V7REDAJ24EBWRCNQMVZ7VZALLIX47UEJLAVJWGHNMNG5TTA===="
        },
        "labels": {
          "app": "postgres-operator",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "postgres-operator",
          "battery/app": "postgres-operator",
          "battery/managed": "true",
          "battery/managed.direct": "true"
        },
        "name": "postgresteams.acid.zalan.do"
      },
      "spec": {
        "group": "acid.zalan.do",
        "names": {
          "categories": ["all"],
          "kind": "PostgresTeam",
          "listKind": "PostgresTeamList",
          "plural": "postgresteams",
          "shortNames": ["pgteam"],
          "singular": "postgresteam"
        },
        "scope": "Namespaced",
        "versions": [
          {
            "name": "v1",
            "schema": {
              "openAPIV3Schema": {
                "properties": {
                  "apiVersion": {
                    "enum": ["acid.zalan.do/v1"],
                    "type": "string"
                  },
                  "kind": {
                    "enum": ["PostgresTeam"],
                    "type": "string"
                  },
                  "spec": {
                    "properties": {
                      "additionalMembers": {
                        "additionalProperties": {
                          "description": "List of users who will also be added to the Postgres cluster",
                          "items": {
                            "type": "string"
                          },
                          "nullable": true,
                          "type": "array"
                        },
                        "description": "Map for teamId and associated additional users",
                        "type": "object"
                      },
                      "additionalSuperuserTeams": {
                        "additionalProperties": {
                          "description": "List of teams to become Postgres superusers",
                          "items": {
                            "type": "string"
                          },
                          "nullable": true,
                          "type": "array"
                        },
                        "description": "Map for teamId and associated additional superuser teams",
                        "type": "object"
                      },
                      "additionalTeams": {
                        "additionalProperties": {
                          "description": "List of teams whose members will also be added to the Postgres cluster",
                          "items": {
                            "type": "string"
                          },
                          "nullable": true,
                          "type": "array"
                        },
                        "description": "Map for teamId and associated additional teams",
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "required": ["kind", "apiVersion", "spec"],
                "type": "object"
              }
            },
            "served": true,
            "storage": true,
            "subresources": {
              "status": {}
            }
          }
        ]
      }
    },
    "/istio/role/istiod_battery_istio": {
      "apiVersion": "rbac.authorization.k8s.io/v1",
      "kind": "Role",
      "metadata": {
        "annotations": {
          "battery/hash": "VSJFR2HJB4AJYJ7CUV2I26H35FI5QVHAFWXZDPIH7DE2FRUDMHAA===="
        },
        "labels": {
          "app": "istio-base",
          "app.kubernetes.io/component": "istiod",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istio-base",
          "battery/app": "istio-base",
          "battery/component": "istiod",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "component": "istiod"
        },
        "name": "istiod-battery-istio",
        "namespace": "battery-istio"
      },
      "rules": [
        {
          "apiGroups": ["networking.istio.io"],
          "resources": ["gateways"],
          "verbs": ["create"]
        },
        {
          "apiGroups": [""],
          "resources": ["secrets"],
          "verbs": ["create", "get", "watch", "list", "update", "delete"]
        }
      ]
    },
    "/istio_gateway/service_account/istio_ingressgateway": {
      "apiVersion": "v1",
      "kind": "ServiceAccount",
      "metadata": {
        "annotations": {
          "battery/hash": "SDIUR737APCFUVTPGOB5XBOKTYJOXPVSAQ3MT5YBCZVMPC6KOKRA===="
        },
        "labels": {
          "app": "istio-ingressgateway",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istio-ingressgateway",
          "battery/app": "istio-ingressgateway",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "istio": "ingressgateway"
        },
        "name": "istio-ingressgateway",
        "namespace": "battery-istio"
      }
    },
    "/istio/istio_envoy_filter/stats_filter_1_15": {
      "apiVersion": "networking.istio.io/v1alpha3",
      "kind": "EnvoyFilter",
      "metadata": {
        "annotations": {
          "battery/hash": "EH3QRB5YUJRK6PRMZSUJNKJSYFHVEYZV3IOHWN7BI4OFHGVKKDVA===="
        },
        "labels": {
          "app": "istiod",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istiod",
          "battery/app": "istiod",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "istio.io/rev": "default"
        },
        "name": "stats-filter-1.15",
        "namespace": "battery-istio"
      },
      "spec": {
        "configPatches": [
          {
            "applyTo": "HTTP_FILTER",
            "match": {
              "context": "SIDECAR_OUTBOUND",
              "listener": {
                "filterChain": {
                  "filter": {
                    "name": "envoy.filters.network.http_connection_manager",
                    "subFilter": {
                      "name": "envoy.filters.http.router"
                    }
                  }
                }
              },
              "proxy": {
                "proxyVersion": "^1\\.15.*"
              }
            },
            "patch": {
              "operation": "INSERT_BEFORE",
              "value": {
                "name": "istio.stats",
                "typed_config": {
                  "@type": "type.googleapis.com/udpa.type.v1.TypedStruct",
                  "type_url": "type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm",
                  "value": {
                    "config": {
                      "configuration": {
                        "@type": "type.googleapis.com/google.protobuf.StringValue",
                        "value": "{\n  \"debug\": \"false\",\n  \"stat_prefix\": \"istio\"\n}\n"
                      },
                      "root_id": "stats_outbound",
                      "vm_config": {
                        "code": {
                          "local": {
                            "inline_string": "envoy.wasm.stats"
                          }
                        },
                        "runtime": "envoy.wasm.runtime.null",
                        "vm_id": "stats_outbound"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "applyTo": "HTTP_FILTER",
            "match": {
              "context": "SIDECAR_INBOUND",
              "listener": {
                "filterChain": {
                  "filter": {
                    "name": "envoy.filters.network.http_connection_manager",
                    "subFilter": {
                      "name": "envoy.filters.http.router"
                    }
                  }
                }
              },
              "proxy": {
                "proxyVersion": "^1\\.15.*"
              }
            },
            "patch": {
              "operation": "INSERT_BEFORE",
              "value": {
                "name": "istio.stats",
                "typed_config": {
                  "@type": "type.googleapis.com/udpa.type.v1.TypedStruct",
                  "type_url": "type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm",
                  "value": {
                    "config": {
                      "configuration": {
                        "@type": "type.googleapis.com/google.protobuf.StringValue",
                        "value": "{\n  \"debug\": \"false\",\n  \"stat_prefix\": \"istio\",\n  \"disable_host_header_fallback\": true\n}\n"
                      },
                      "root_id": "stats_inbound",
                      "vm_config": {
                        "code": {
                          "local": {
                            "inline_string": "envoy.wasm.stats"
                          }
                        },
                        "runtime": "envoy.wasm.runtime.null",
                        "vm_id": "stats_inbound"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "applyTo": "HTTP_FILTER",
            "match": {
              "context": "GATEWAY",
              "listener": {
                "filterChain": {
                  "filter": {
                    "name": "envoy.filters.network.http_connection_manager",
                    "subFilter": {
                      "name": "envoy.filters.http.router"
                    }
                  }
                }
              },
              "proxy": {
                "proxyVersion": "^1\\.15.*"
              }
            },
            "patch": {
              "operation": "INSERT_BEFORE",
              "value": {
                "name": "istio.stats",
                "typed_config": {
                  "@type": "type.googleapis.com/udpa.type.v1.TypedStruct",
                  "type_url": "type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm",
                  "value": {
                    "config": {
                      "configuration": {
                        "@type": "type.googleapis.com/google.protobuf.StringValue",
                        "value": "{\n  \"debug\": \"false\",\n  \"stat_prefix\": \"istio\",\n  \"disable_host_header_fallback\": true\n}\n"
                      },
                      "root_id": "stats_outbound",
                      "vm_config": {
                        "code": {
                          "local": {
                            "inline_string": "envoy.wasm.stats"
                          }
                        },
                        "runtime": "envoy.wasm.runtime.null",
                        "vm_id": "stats_outbound"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "priority": -1
      }
    },
    "/postgres/secret/postgres_operator_infrauser_config": {
      "apiVersion": "v1",
      "data": {
        "batterydbuser": "bm90LXJlYWw="
      },
      "kind": "Secret",
      "metadata": {
        "annotations": {
          "battery/hash": "Q4MOQE4RPF3KJIXZ6VWYDVLS2ECYD5FRQ6QCYYQU2O7Z45FGRRDQ===="
        },
        "labels": {
          "app": "postgres-operator",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "postgres-operator",
          "battery/app": "postgres-operator",
          "battery/managed": "true",
          "battery/managed.direct": "true"
        },
        "name": "postgres-operator-infrauser-config",
        "namespace": "battery-core"
      },
      "type": "Opaque"
    },
    "/postgres/postgresql/pg_control": {
      "apiVersion": "acid.zalan.do/v1",
      "kind": "postgresql",
      "metadata": {
        "annotations": {
          "battery/hash": "EGXOONCDFSB3GLBYU4O5XSNVHJCQFCYPPYIEA5VMMCWVT7LNEK3A===="
        },
        "labels": {
          "app": "postgres",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "postgres",
          "battery/app": "postgres",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "sidecar.istio.io/inject": "false"
        },
        "name": "pg-control",
        "namespace": "battery-base"
      },
      "spec": {
        "databases": {
          "control": "controlserver"
        },
        "numberOfInstances": 1,
        "postgresql": {
          "parameters": {
            "log_destination": "stderr",
            "logging_collector": "false",
            "password_encryption": "scram-sha-256"
          },
          "version": "14"
        },
        "teamId": "pg",
        "users": {
          "controlserver": ["createdb", "login"]
        },
        "volume": {
          "size": "500M"
        }
      }
    },
    "/istio/cluster_role/istiod_clusterrole_battery_istio": {
      "apiVersion": "rbac.authorization.k8s.io/v1",
      "kind": "ClusterRole",
      "metadata": {
        "annotations": {
          "battery/hash": "2RDT3SRT72V7TJOHJWVHM3FPBHCEYMF66QZXCGSOL6GI6WVGJIFQ===="
        },
        "labels": {
          "app": "istiod",
          "app.kubernetes.io/component": "istiod",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istiod",
          "battery/app": "istiod",
          "battery/component": "istiod",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "component": "istiod"
        },
        "name": "istiod-clusterrole-battery-istio"
      },
      "rules": [
        {
          "apiGroups": ["admissionregistration.k8s.io"],
          "resources": ["mutatingwebhookconfigurations"],
          "verbs": ["get", "list", "watch", "update", "patch"]
        },
        {
          "apiGroups": ["admissionregistration.k8s.io"],
          "resources": ["validatingwebhookconfigurations"],
          "verbs": ["get", "list", "watch", "update"]
        },
        {
          "apiGroups": [
            "config.istio.io",
            "security.istio.io",
            "networking.istio.io",
            "authentication.istio.io",
            "rbac.istio.io",
            "telemetry.istio.io",
            "extensions.istio.io"
          ],
          "resources": ["*"],
          "verbs": ["get", "watch", "list"]
        },
        {
          "apiGroups": ["networking.istio.io"],
          "resources": ["workloadentries"],
          "verbs": [
            "get",
            "watch",
            "list",
            "update",
            "patch",
            "create",
            "delete"
          ]
        },
        {
          "apiGroups": ["networking.istio.io"],
          "resources": ["workloadentries/status"],
          "verbs": [
            "get",
            "watch",
            "list",
            "update",
            "patch",
            "create",
            "delete"
          ]
        },
        {
          "apiGroups": ["apiextensions.k8s.io"],
          "resources": ["customresourcedefinitions"],
          "verbs": ["get", "list", "watch"]
        },
        {
          "apiGroups": [""],
          "resources": ["pods", "nodes", "services", "namespaces", "endpoints"],
          "verbs": ["get", "list", "watch"]
        },
        {
          "apiGroups": ["discovery.k8s.io"],
          "resources": ["endpointslices"],
          "verbs": ["get", "list", "watch"]
        },
        {
          "apiGroups": ["networking.k8s.io"],
          "resources": ["ingresses", "ingressclasses"],
          "verbs": ["get", "list", "watch"]
        },
        {
          "apiGroups": ["networking.k8s.io"],
          "resources": ["ingresses/status"],
          "verbs": ["*"]
        },
        {
          "apiGroups": [""],
          "resources": ["configmaps"],
          "verbs": ["create", "get", "list", "watch", "update"]
        },
        {
          "apiGroups": ["certificates.k8s.io"],
          "resources": [
            "certificatesigningrequests",
            "certificatesigningrequests/approval",
            "certificatesigningrequests/status"
          ],
          "verbs": ["update", "create", "get", "delete", "watch"]
        },
        {
          "apiGroups": ["certificates.k8s.io"],
          "resourceNames": ["kubernetes.io/legacy-unknown"],
          "resources": ["signers"],
          "verbs": ["approve"]
        },
        {
          "apiGroups": ["authentication.k8s.io"],
          "resources": ["tokenreviews"],
          "verbs": ["create"]
        },
        {
          "apiGroups": ["authorization.k8s.io"],
          "resources": ["subjectaccessreviews"],
          "verbs": ["create"]
        },
        {
          "apiGroups": ["networking.x-k8s.io", "gateway.networking.k8s.io"],
          "resources": ["*"],
          "verbs": ["get", "watch", "list"]
        },
        {
          "apiGroups": ["networking.x-k8s.io", "gateway.networking.k8s.io"],
          "resources": ["*"],
          "verbs": ["update", "patch"]
        },
        {
          "apiGroups": ["gateway.networking.k8s.io"],
          "resources": ["gatewayclasses"],
          "verbs": ["create", "update", "patch", "delete"]
        },
        {
          "apiGroups": [""],
          "resources": ["secrets"],
          "verbs": ["get", "watch", "list"]
        },
        {
          "apiGroups": ["multicluster.x-k8s.io"],
          "resources": ["serviceexports"],
          "verbs": ["get", "watch", "list", "create", "delete"]
        },
        {
          "apiGroups": ["multicluster.x-k8s.io"],
          "resources": ["serviceimports"],
          "verbs": ["get", "watch", "list"]
        }
      ]
    },
    "/istio_gateway/istio_gateway/ingressgateway": {
      "apiVersion": "networking.istio.io/v1beta1",
      "kind": "Gateway",
      "metadata": {
        "annotations": {
          "battery/hash": "E4H6EMGAL3P7C4NV3OVV5YLA3VSAHQ7YQFL67SLYAQHATW5RNRAA===="
        },
        "labels": {
          "app": "istio-ingressgateway",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istio-ingressgateway",
          "battery/app": "istio-ingressgateway",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "istio": "ingressgateway"
        },
        "name": "ingressgateway",
        "namespace": "battery-istio"
      },
      "spec": {
        "selector": {
          "istio": "ingressgateway"
        },
        "servers": [
          {
            "hosts": ["*"],
            "port": {
              "name": "http2",
              "number": 80,
              "protocol": "HTTP"
            }
          },
          {
            "hosts": ["*"],
            "port": {
              "name": "ssh",
              "number": 22,
              "protocol": "TCP"
            }
          }
        ]
      }
    },
    "/istio_gateway/deployment/istio_ingressgateway": {
      "apiVersion": "apps/v1",
      "kind": "Deployment",
      "metadata": {
        "annotations": {
          "battery/hash": "JCGFIN4SXPPWLHAMQZ2KG6SCYKSSXBMZZE2DQZM7V3NBHKCHF7PQ===="
        },
        "labels": {
          "app": "istio-ingressgateway",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istio-ingressgateway",
          "battery/app": "istio-ingressgateway",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "istio": "ingressgateway",
          "istio-injection": "enabled"
        },
        "name": "istio-ingressgateway",
        "namespace": "battery-istio"
      },
      "spec": {
        "selector": {
          "matchLabels": {
            "battery/app": "istio-ingressgateway",
            "istio": "ingressgateway"
          }
        },
        "template": {
          "metadata": {
            "annotations": {
              "inject.istio.io/templates": "gateway",
              "prometheus.io/path": "/stats/prometheus",
              "prometheus.io/port": "15020",
              "prometheus.io/scrape": "true",
              "sidecar.istio.io/inject": "true"
            },
            "labels": {
              "app": "istio-ingressgateway",
              "app.kubernetes.io/managed-by": "batteries-included",
              "app.kubernetes.io/name": "istio-ingressgateway",
              "battery/app": "istio-ingressgateway",
              "battery/managed": "true",
              "battery/managed.indirect": "true",
              "istio": "ingressgateway",
              "istio-injection": "enabled",
              "sidecar.istio.io/inject": "true"
            }
          },
          "spec": {
            "containers": [
              {
                "image": "auto",
                "name": "istio-proxy",
                "ports": [
                  {
                    "containerPort": 15090,
                    "name": "http-envoy-prom",
                    "protocol": "TCP"
                  }
                ],
                "resources": {
                  "limits": {
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "100m",
                    "memory": "128Mi"
                  }
                },
                "securityContext": {
                  "allowPrivilegeEscalation": true,
                  "capabilities": {
                    "add": ["NET_BIND_SERVICE"],
                    "drop": ["ALL"]
                  },
                  "readOnlyRootFilesystem": true,
                  "runAsGroup": 1337,
                  "runAsNonRoot": false,
                  "runAsUser": 0
                }
              }
            ],
            "serviceAccountName": "istio-ingressgateway"
          }
        }
      }
    },
    "/istio/role/istiod": {
      "apiVersion": "rbac.authorization.k8s.io/v1",
      "kind": "Role",
      "metadata": {
        "annotations": {
          "battery/hash": "56IKHWDO2LPNLZ6MGKCBNFQAHDL52Z2F5MIZ4LJJFLIHNT47K3AQ===="
        },
        "labels": {
          "app": "istiod",
          "app.kubernetes.io/component": "istiod",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istiod",
          "battery/app": "istiod",
          "battery/component": "istiod",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "component": "istiod"
        },
        "name": "istiod",
        "namespace": "battery-istio"
      },
      "rules": [
        {
          "apiGroups": ["networking.istio.io"],
          "resources": ["gateways"],
          "verbs": ["create"]
        },
        {
          "apiGroups": [""],
          "resources": ["secrets"],
          "verbs": ["create", "get", "watch", "list", "update", "delete"]
        }
      ]
    },
    "/istio/istio_envoy_filter/tcp_stats_filter_1_14": {
      "apiVersion": "networking.istio.io/v1alpha3",
      "kind": "EnvoyFilter",
      "metadata": {
        "annotations": {
          "battery/hash": "OS4SMRUYMIANPHYKYBCG4JHNOULH2NIIUP2ZTSNN35CAUGUTFH7Q===="
        },
        "labels": {
          "app": "istiod",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istiod",
          "battery/app": "istiod",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "istio.io/rev": "default"
        },
        "name": "tcp-stats-filter-1.14",
        "namespace": "battery-istio"
      },
      "spec": {
        "configPatches": [
          {
            "applyTo": "NETWORK_FILTER",
            "match": {
              "context": "SIDECAR_INBOUND",
              "listener": {
                "filterChain": {
                  "filter": {
                    "name": "envoy.filters.network.tcp_proxy"
                  }
                }
              },
              "proxy": {
                "proxyVersion": "^1\\.14.*"
              }
            },
            "patch": {
              "operation": "INSERT_BEFORE",
              "value": {
                "name": "istio.stats",
                "typed_config": {
                  "@type": "type.googleapis.com/udpa.type.v1.TypedStruct",
                  "type_url": "type.googleapis.com/envoy.extensions.filters.network.wasm.v3.Wasm",
                  "value": {
                    "config": {
                      "configuration": {
                        "@type": "type.googleapis.com/google.protobuf.StringValue",
                        "value": "{\n  \"debug\": \"false\",\n  \"stat_prefix\": \"istio\"\n}\n"
                      },
                      "root_id": "stats_inbound",
                      "vm_config": {
                        "code": {
                          "local": {
                            "inline_string": "envoy.wasm.stats"
                          }
                        },
                        "runtime": "envoy.wasm.runtime.null",
                        "vm_id": "tcp_stats_inbound"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "applyTo": "NETWORK_FILTER",
            "match": {
              "context": "SIDECAR_OUTBOUND",
              "listener": {
                "filterChain": {
                  "filter": {
                    "name": "envoy.filters.network.tcp_proxy"
                  }
                }
              },
              "proxy": {
                "proxyVersion": "^1\\.14.*"
              }
            },
            "patch": {
              "operation": "INSERT_BEFORE",
              "value": {
                "name": "istio.stats",
                "typed_config": {
                  "@type": "type.googleapis.com/udpa.type.v1.TypedStruct",
                  "type_url": "type.googleapis.com/envoy.extensions.filters.network.wasm.v3.Wasm",
                  "value": {
                    "config": {
                      "configuration": {
                        "@type": "type.googleapis.com/google.protobuf.StringValue",
                        "value": "{\n  \"debug\": \"false\",\n  \"stat_prefix\": \"istio\"\n}\n"
                      },
                      "root_id": "stats_outbound",
                      "vm_config": {
                        "code": {
                          "local": {
                            "inline_string": "envoy.wasm.stats"
                          }
                        },
                        "runtime": "envoy.wasm.runtime.null",
                        "vm_id": "tcp_stats_outbound"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "applyTo": "NETWORK_FILTER",
            "match": {
              "context": "GATEWAY",
              "listener": {
                "filterChain": {
                  "filter": {
                    "name": "envoy.filters.network.tcp_proxy"
                  }
                }
              },
              "proxy": {
                "proxyVersion": "^1\\.14.*"
              }
            },
            "patch": {
              "operation": "INSERT_BEFORE",
              "value": {
                "name": "istio.stats",
                "typed_config": {
                  "@type": "type.googleapis.com/udpa.type.v1.TypedStruct",
                  "type_url": "type.googleapis.com/envoy.extensions.filters.network.wasm.v3.Wasm",
                  "value": {
                    "config": {
                      "configuration": {
                        "@type": "type.googleapis.com/google.protobuf.StringValue",
                        "value": "{\n  \"debug\": \"false\",\n  \"stat_prefix\": \"istio\"\n}\n"
                      },
                      "root_id": "stats_outbound",
                      "vm_config": {
                        "code": {
                          "local": {
                            "inline_string": "envoy.wasm.stats"
                          }
                        },
                        "runtime": "envoy.wasm.runtime.null",
                        "vm_id": "tcp_stats_outbound"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "priority": -1
      }
    },
    "/istio/config_map/istio_sidecar_injector": {
      "apiVersion": "v1",
      "data": {
        "config": "# defaultTemplates defines the default template to use for pods that do not explicitly specify a template\ndefaultTemplates: [sidecar]\npolicy: enabled\nalwaysInjectSelector:\n  []\nneverInjectSelector:\n  []\ninjectedAnnotations:\ntemplate: \"{{ Template_Version_And_Istio_Version_Mismatched_Check_Installation }}\"\ntemplates:\n  sidecar: |\n    {{- define \"resources\"  }}\n      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}\n        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}\n          requests:\n            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}\n            cpu: \"{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}\"\n            {{ end }}\n            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}\n            memory: \"{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}\"\n            {{ end }}\n        {{- end }}\n        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}\n          limits:\n            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}\n            cpu: \"{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}\"\n            {{ end }}\n            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}\n            memory: \"{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}\"\n            {{ end }}\n        {{- end }}\n      {{- else }}\n        {{- if .Values.global.proxy.resources }}\n          {{ toYaml .Values.global.proxy.resources | indent 6 }}\n        {{- end }}\n      {{- end }}\n    {{- end }}\n    {{- $containers := list }}\n    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name \"istio-proxy\") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}\n    metadata:\n      labels:\n        security.istio.io/tlsMode: {{ index .ObjectMeta.Labels `security.istio.io/tlsMode` | default \"istio\"  | quote }}\n        {{- if eq (index .ProxyConfig.ProxyMetadata \"ISTIO_META_ENABLE_HBONE\") \"true\" }}\n        networking.istio.io/tunnel: {{ index .ObjectMeta.Labels `networking.istio.io/tunnel` | default \"http\"  | quote }}\n        {{- end }}\n        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}\n        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default \"latest\"  | quote }}\n      annotations: {\n        {{- if ge (len $containers) 1 }}\n        {{- if not (isset .ObjectMeta.Annotations `kubectl.kubernetes.io/default-logs-container`) }}\n        kubectl.kubernetes.io/default-logs-container: \"{{ index $containers 0 }}\",\n        {{- end }}\n        {{- if not (isset .ObjectMeta.Annotations `kubectl.kubernetes.io/default-container`) }}\n        kubectl.kubernetes.io/default-container: \"{{ index $containers 0 }}\",\n        {{- end }}\n        {{- end }}\n    {{- if .Values.istio_cni.enabled }}\n        {{- if not .Values.istio_cni.chained }}\n        k8s.v1.cni.cncf.io/networks: '{{ appendMultusNetwork (index .ObjectMeta.Annotations `k8s.v1.cni.cncf.io/networks`) `istio-cni` }}',\n        {{- end }}\n        sidecar.istio.io/interceptionMode: \"{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}\",\n        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}traffic.sidecar.istio.io/includeOutboundIPRanges: \"{{.}}\",{{ end }}\n        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}traffic.sidecar.istio.io/excludeOutboundIPRanges: \"{{.}}\",{{ end }}\n        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}traffic.sidecar.istio.io/includeInboundPorts: \"{{.}}\",{{ end }}\n        traffic.sidecar.istio.io/excludeInboundPorts: \"{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}\",\n        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts \"\") \"\") }}\n        traffic.sidecar.istio.io/includeOutboundPorts: \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}\",\n        {{- end }}\n        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne .Values.global.proxy.excludeOutboundPorts \"\") }}\n        traffic.sidecar.istio.io/excludeOutboundPorts: \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}\",\n        {{- end }}\n        {{ with index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}traffic.sidecar.istio.io/kubevirtInterfaces: \"{{.}}\",{{ end }}\n        {{ with index .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeInterfaces` }}traffic.sidecar.istio.io/excludeInterfaces: \"{{.}}\",{{ end }}\n    {{- end }}\n      }\n    spec:\n      {{- $holdProxy := or .ProxyConfig.HoldApplicationUntilProxyStarts.GetValue .Values.global.proxy.holdApplicationUntilProxyStarts }}\n      initContainers:\n      {{ if ne (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `NONE` }}\n      {{ if .Values.istio_cni.enabled -}}\n      - name: istio-validation\n      {{ else -}}\n      - name: istio-init\n      {{ end -}}\n      {{- if contains \"/\" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}\n        image: \"{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}\"\n      {{- else }}\n        image: \"{{ .ProxyImage }}\"\n      {{- end }}\n        args:\n        - istio-iptables\n        - \"-p\"\n        - {{ .MeshConfig.ProxyListenPort | default \"15001\" | quote }}\n        - \"-z\"\n        - \"15006\"\n        - \"-u\"\n        - \"1337\"\n        - \"-m\"\n        - \"{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}\"\n        - \"-i\"\n        - \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}\"\n        - \"-x\"\n        - \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}\"\n        - \"-b\"\n        - \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}\"\n        - \"-d\"\n      {{- if excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}\n        - \"15090,15021,{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}\"\n      {{- else }}\n        - \"15090,15021\"\n      {{- end }}\n        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts \"\") \"\") -}}\n        - \"-q\"\n        - \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}\"\n        {{ end -}}\n        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.excludeOutboundPorts \"\") \"\") -}}\n        - \"-o\"\n        - \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}\"\n        {{ end -}}\n        {{ if (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces`) -}}\n        - \"-k\"\n        - \"{{ index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}\"\n        {{ end -}}\n         {{ if (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeInterfaces`) -}}\n        - \"-c\"\n        - \"{{ index .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeInterfaces` }}\"\n        {{ end -}}\n        - \"--log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}\"\n        {{ if .Values.global.logAsJson -}}\n        - \"--log_as_json\"\n        {{ end -}}\n        {{ if .Values.istio_cni.enabled -}}\n        - \"--run-validation\"\n        - \"--skip-rule-apply\"\n        {{ end -}}\n        {{with .Values.global.imagePullPolicy }}imagePullPolicy: \"{{.}}\"{{end}}\n      {{- if .ProxyConfig.ProxyMetadata }}\n        env:\n        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}\n        - name: {{ $key }}\n          value: \"{{ $value }}\"\n        {{- end }}\n      {{- end }}\n        resources:\n      {{ template \"resources\" . }}\n        securityContext:\n          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}\n          privileged: {{ .Values.global.proxy.privileged }}\n          capabilities:\n        {{- if not .Values.istio_cni.enabled }}\n            add:\n            - NET_ADMIN\n            - NET_RAW\n        {{- end }}\n            drop:\n            - ALL\n        {{- if not .Values.istio_cni.enabled }}\n          readOnlyRootFilesystem: false\n          runAsGroup: 0\n          runAsNonRoot: false\n          runAsUser: 0\n        {{- else }}\n          readOnlyRootFilesystem: true\n          runAsGroup: 1337\n          runAsUser: 1337\n          runAsNonRoot: true\n        {{- end }}\n        restartPolicy: Always\n      {{ end -}}\n      {{- if eq (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) \"true\" }}\n      - name: enable-core-dump\n        args:\n        - -c\n        - sysctl -w kernel.core_pattern=/var/lib/istio/data/core.proxy && ulimit -c unlimited\n        command:\n          - /bin/sh\n      {{- if contains \"/\" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}\n        image: \"{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}\"\n      {{- else }}\n        image: \"{{ .ProxyImage }}\"\n      {{- end }}\n        {{with .Values.global.imagePullPolicy }}imagePullPolicy: \"{{.}}\"{{end}}\n        resources:\n      {{ template \"resources\" . }}\n        securityContext:\n          allowPrivilegeEscalation: true\n          capabilities:\n            add:\n            - SYS_ADMIN\n            drop:\n            - ALL\n          privileged: true\n          readOnlyRootFilesystem: false\n          runAsGroup: 0\n          runAsNonRoot: false\n          runAsUser: 0\n      {{ end }}\n      containers:\n      - name: istio-proxy\n      {{- if contains \"/\" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}\n        image: \"{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}\"\n      {{- else }}\n        image: \"{{ .ProxyImage }}\"\n      {{- end }}\n        ports:\n        - containerPort: 15090\n          protocol: TCP\n          name: http-envoy-prom\n        args:\n        - proxy\n        - sidecar\n        - --domain\n        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}\n        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}\n        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}\n        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}\n      {{- if .Values.global.sts.servicePort }}\n        - --stsPort={{ .Values.global.sts.servicePort }}\n      {{- end }}\n      {{- if .Values.global.logAsJson }}\n        - --log_as_json\n      {{- end }}\n      {{- if gt .EstimatedConcurrency 0 }}\n        - --concurrency\n        - \"{{ .EstimatedConcurrency }}\"\n      {{- end -}}\n      {{- if .Values.global.proxy.lifecycle }}\n        lifecycle:\n          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}\n      {{- else if $holdProxy }}\n        lifecycle:\n          postStart:\n            exec:\n              command:\n              - pilot-agent\n              - wait\n      {{- end }}\n        env:\n        {{- if eq (env \"PILOT_ENABLE_INBOUND_PASSTHROUGH\" \"true\") \"false\" }}\n        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION\n          value: \"true\"\n        {{- end }}\n        - name: JWT_POLICY\n          value: {{ .Values.global.jwtPolicy }}\n        - name: PILOT_CERT_PROVIDER\n          value: {{ .Values.global.pilotCertProvider }}\n        - name: CA_ADDR\n        {{- if .Values.global.caAddress }}\n          value: {{ .Values.global.caAddress }}\n        {{- else }}\n          value: istiod{{- if not (eq .Values.revision \"\") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012\n        {{- end }}\n        - name: POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: POD_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: INSTANCE_IP\n          valueFrom:\n            fieldRef:\n              fieldPath: status.podIP\n        - name: SERVICE_ACCOUNT\n          valueFrom:\n            fieldRef:\n              fieldPath: spec.serviceAccountName\n        - name: HOST_IP\n          valueFrom:\n            fieldRef:\n              fieldPath: status.hostIP\n        - name: PROXY_CONFIG\n          value: |\n                 {{ protoToJSON .ProxyConfig }}\n        - name: ISTIO_META_POD_PORTS\n          value: |-\n            [\n            {{- $first := true }}\n            {{- range $index1, $c := .Spec.Containers }}\n              {{- range $index2, $p := $c.Ports }}\n                {{- if (structToJSON $p) }}\n                {{if not $first}},{{end}}{{ structToJSON $p }}\n                {{- $first = false }}\n                {{- end }}\n              {{- end}}\n            {{- end}}\n            ]\n        - name: ISTIO_META_APP_CONTAINERS\n          value: \"{{ $containers | join \",\" }}\"\n        - name: ISTIO_META_CLUSTER_ID\n          value: \"{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}\"\n        - name: ISTIO_META_INTERCEPTION_MODE\n          value: \"{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}\"\n        {{- if .Values.global.network }}\n        - name: ISTIO_META_NETWORK\n          value: \"{{ .Values.global.network }}\"\n        {{- end }}\n        {{- if .DeploymentMeta.Name }}\n        - name: ISTIO_META_WORKLOAD_NAME\n          value: \"{{ .DeploymentMeta.Name }}\"\n        {{ end }}\n        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}\n        - name: ISTIO_META_OWNER\n          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}\n        {{- end}}\n        {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}\n        - name: ISTIO_BOOTSTRAP_OVERRIDE\n          value: \"/etc/istio/custom-bootstrap/custom_bootstrap.json\"\n        {{- end }}\n        {{- if .Values.global.meshID }}\n        - name: ISTIO_META_MESH_ID\n          value: \"{{ .Values.global.meshID }}\"\n        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}\n        - name: ISTIO_META_MESH_ID\n          value: \"{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}\"\n        {{- end }}\n        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}\n        - name: TRUST_DOMAIN\n          value: \"{{ . }}\"\n        {{- end }}\n        {{- if and (eq .Values.global.proxy.tracer \"datadog\") (isset .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}\n        {{- range $key, $value := fromJSON (index .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}\n        - name: {{ $key }}\n          value: \"{{ $value }}\"\n        {{- end }}\n        {{- end }}\n        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}\n        - name: {{ $key }}\n          value: \"{{ $value }}\"\n        {{- end }}\n        {{with .Values.global.imagePullPolicy }}imagePullPolicy: \"{{.}}\"{{end}}\n        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}\n        readinessProbe:\n          httpGet:\n            path: /healthz/ready\n            port: 15021\n          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}\n          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}\n          timeoutSeconds: 3\n          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}\n        {{ end -}}\n        securityContext:\n          {{- if eq (index .ProxyConfig.ProxyMetadata \"IPTABLES_TRACE_LOGGING\") \"true\" }}\n          allowPrivilegeEscalation: true\n          capabilities:\n            add:\n            - NET_ADMIN\n            drop:\n            - ALL\n          privileged: true\n          readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) \"true\" }}\n          runAsGroup: 1337\n          fsGroup: 1337\n          runAsNonRoot: false\n          runAsUser: 0\n          {{- else }}\n          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}\n          capabilities:\n            {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}\n            add:\n            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY` -}}\n            - NET_ADMIN\n            {{- end }}\n            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true` -}}\n            - NET_BIND_SERVICE\n            {{- end }}\n            {{- end }}\n            drop:\n            - ALL\n          privileged: {{ .Values.global.proxy.privileged }}\n          readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) \"true\" }}\n          runAsGroup: 1337\n          fsGroup: 1337\n          {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}\n          runAsNonRoot: false\n          runAsUser: 0\n          {{- else -}}\n          runAsNonRoot: true\n          runAsUser: 1337\n          {{- end }}\n          {{- end }}\n        resources:\n      {{ template \"resources\" . }}\n        volumeMounts:\n        - name: workload-socket\n          mountPath: /var/run/secrets/workload-spiffe-uds\n        - name: credential-socket\n          mountPath: /var/run/secrets/credential-uds\n        {{- if eq .Values.global.caName \"GkeWorkloadCertificate\" }}\n        - name: gke-workload-certificate\n          mountPath: /var/run/secrets/workload-spiffe-credentials\n          readOnly: true\n        {{- else }}\n        - name: workload-certs\n          mountPath: /var/run/secrets/workload-spiffe-credentials\n        {{- end }}\n        {{- if eq .Values.global.pilotCertProvider \"istiod\" }}\n        - mountPath: /var/run/secrets/istio\n          name: istiod-ca-cert\n        {{- end }}\n        {{- if eq .Values.global.pilotCertProvider \"kubernetes\" }}\n        - mountPath: /var/run/secrets/istio/kubernetes\n          name: kube-ca-cert\n        {{- end }}\n        - mountPath: /var/lib/istio/data\n          name: istio-data\n        {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}\n        - mountPath: /etc/istio/custom-bootstrap\n          name: custom-bootstrap-volume\n        {{- end }}\n        # SDS channel between istioagent and Envoy\n        - mountPath: /etc/istio/proxy\n          name: istio-envoy\n        {{- if eq .Values.global.jwtPolicy \"third-party-jwt\" }}\n        - mountPath: /var/run/secrets/tokens\n          name: istio-token\n        {{- end }}\n        {{- if .Values.global.mountMtlsCerts }}\n        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.\n        - mountPath: /etc/certs/\n          name: istio-certs\n          readOnly: true\n        {{- end }}\n        - name: istio-podinfo\n          mountPath: /etc/istio/pod\n         {{- if and (eq .Values.global.proxy.tracer \"lightstep\") .ProxyConfig.GetTracing.GetTlsSettings }}\n        - mountPath: {{ directory .ProxyConfig.GetTracing.GetTlsSettings.GetCaCertificates }}\n          name: lightstep-certs\n          readOnly: true\n        {{- end }}\n          {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}\n          {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}\n        - name: \"{{  $index }}\"\n          {{ toYaml $value | indent 6 }}\n          {{ end }}\n          {{- end }}\n      volumes:\n      - emptyDir:\n        name: workload-socket\n      - emptyDir:\n        name: credential-socket\n      {{- if eq .Values.global.caName \"GkeWorkloadCertificate\" }}\n      - name: gke-workload-certificate\n        csi:\n          driver: workloadcertificates.security.cloud.google.com\n      {{- else }}\n      - emptyDir:\n        name: workload-certs\n      {{- end }}\n      {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}\n      - name: custom-bootstrap-volume\n        configMap:\n          name: {{ annotation .ObjectMeta `sidecar.istio.io/bootstrapOverride` \"\" }}\n      {{- end }}\n      # SDS channel between istioagent and Envoy\n      - emptyDir:\n          medium: Memory\n        name: istio-envoy\n      - name: istio-data\n        emptyDir: {}\n      - name: istio-podinfo\n        downwardAPI:\n          items:\n            - path: \"labels\"\n              fieldRef:\n                fieldPath: metadata.labels\n            - path: \"annotations\"\n              fieldRef:\n                fieldPath: metadata.annotations\n      {{- if eq .Values.global.jwtPolicy \"third-party-jwt\" }}\n      - name: istio-token\n        projected:\n          sources:\n          - serviceAccountToken:\n              path: istio-token\n              expirationSeconds: 43200\n              audience: {{ .Values.global.sds.token.aud }}\n      {{- end }}\n      {{- if eq .Values.global.pilotCertProvider \"istiod\" }}\n      - name: istiod-ca-cert\n        configMap:\n          name: istio-ca-root-cert\n      {{- end }}\n      {{- if eq .Values.global.pilotCertProvider \"kubernetes\" }}\n      - name: kube-ca-cert\n        configMap:\n          name: kube-root-ca.crt\n      {{- end }}\n      {{- if .Values.global.mountMtlsCerts }}\n      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.\n      - name: istio-certs\n        secret:\n          optional: true\n          {{ if eq .Spec.ServiceAccountName \"\" }}\n          secretName: istio.default\n          {{ else -}}\n          secretName: {{  printf \"istio.%s\" .Spec.ServiceAccountName }}\n          {{  end -}}\n      {{- end }}\n        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}\n        {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}\n      - name: \"{{ $index }}\"\n        {{ toYaml $value | indent 4 }}\n        {{ end }}\n        {{ end }}\n      {{- if and (eq .Values.global.proxy.tracer \"lightstep\") .ProxyConfig.GetTracing.GetTlsSettings }}\n      - name: lightstep-certs\n        secret:\n          optional: true\n          secretName: lightstep.cacert\n      {{- end }}\n      {{- if .Values.global.imagePullSecrets }}\n      imagePullSecrets:\n        {{- range .Values.global.imagePullSecrets }}\n        - name: {{ . }}\n        {{- end }}\n      {{- end }}\n      {{- if eq (env \"ENABLE_LEGACY_FSGROUP_INJECTION\" \"false\") \"true\" }}\n      securityContext:\n        fsGroup: 1337\n      {{- end }}\n  gateway: |\n    {{- $containers := list }}\n    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name \"istio-proxy\") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}\n    metadata:\n      labels:\n        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}\n        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default \"latest\"  | quote }}\n        istio.io/rev: {{ .Revision | default \"default\" | quote }}\n      annotations: {\n        {{- if eq (len $containers) 1 }}\n        kubectl.kubernetes.io/default-logs-container: \"{{ index $containers 0 }}\",\n        kubectl.kubernetes.io/default-container: \"{{ index $containers 0 }}\",\n        {{ end }}\n      }\n    spec:\n      containers:\n      - name: istio-proxy\n      {{- if contains \"/\" .Values.global.proxy.image }}\n        image: \"{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}\"\n      {{- else }}\n        image: \"{{ .ProxyImage }}\"\n      {{- end }}\n        ports:\n        - containerPort: 15090\n          protocol: TCP\n          name: http-envoy-prom\n        args:\n        - proxy\n        - router\n        - --domain\n        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}\n        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}\n        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}\n        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}\n      {{- if .Values.global.sts.servicePort }}\n        - --stsPort={{ .Values.global.sts.servicePort }}\n      {{- end }}\n      {{- if .Values.global.logAsJson }}\n        - --log_as_json\n      {{- end }}\n      {{- if .Values.global.proxy.lifecycle }}\n        lifecycle:\n          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}\n      {{- end }}\n        env:\n        - name: JWT_POLICY\n          value: {{ .Values.global.jwtPolicy }}\n        - name: PILOT_CERT_PROVIDER\n          value: {{ .Values.global.pilotCertProvider }}\n        - name: CA_ADDR\n        {{- if .Values.global.caAddress }}\n          value: {{ .Values.global.caAddress }}\n        {{- else }}\n          value: istiod{{- if not (eq .Values.revision \"\") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012\n        {{- end }}\n        - name: POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: POD_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: INSTANCE_IP\n          valueFrom:\n            fieldRef:\n              fieldPath: status.podIP\n        - name: SERVICE_ACCOUNT\n          valueFrom:\n            fieldRef:\n              fieldPath: spec.serviceAccountName\n        - name: HOST_IP\n          valueFrom:\n            fieldRef:\n              fieldPath: status.hostIP\n        - name: PROXY_CONFIG\n          value: |\n                 {{ protoToJSON .ProxyConfig }}\n        - name: ISTIO_META_POD_PORTS\n          value: |-\n            [\n            {{- $first := true }}\n            {{- range $index1, $c := .Spec.Containers }}\n              {{- range $index2, $p := $c.Ports }}\n                {{- if (structToJSON $p) }}\n                {{if not $first}},{{end}}{{ structToJSON $p }}\n                {{- $first = false }}\n                {{- end }}\n              {{- end}}\n            {{- end}}\n            ]\n        - name: ISTIO_META_APP_CONTAINERS\n          value: \"{{ $containers | join \",\" }}\"\n        - name: ISTIO_META_CLUSTER_ID\n          value: \"{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}\"\n        - name: ISTIO_META_INTERCEPTION_MODE\n          value: \"{{ .ProxyConfig.InterceptionMode.String }}\"\n        {{- if .Values.global.network }}\n        - name: ISTIO_META_NETWORK\n          value: \"{{ .Values.global.network }}\"\n        {{- end }}\n        {{- if .DeploymentMeta.Name }}\n        - name: ISTIO_META_WORKLOAD_NAME\n          value: \"{{ .DeploymentMeta.Name }}\"\n        {{ end }}\n        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}\n        - name: ISTIO_META_OWNER\n          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}\n        {{- end}}\n        {{- if .Values.global.meshID }}\n        - name: ISTIO_META_MESH_ID\n          value: \"{{ .Values.global.meshID }}\"\n        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}\n        - name: ISTIO_META_MESH_ID\n          value: \"{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}\"\n        {{- end }}\n        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}\n        - name: TRUST_DOMAIN\n          value: \"{{ . }}\"\n        {{- end }}\n        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}\n        - name: {{ $key }}\n          value: \"{{ $value }}\"\n        {{- end }}\n        {{with .Values.global.imagePullPolicy }}imagePullPolicy: \"{{.}}\"{{end}}\n        readinessProbe:\n          httpGet:\n            path: /healthz/ready\n            port: 15021\n          initialDelaySeconds: {{.Values.global.proxy.readinessInitialDelaySeconds }}\n          periodSeconds: {{ .Values.global.proxy.readinessPeriodSeconds }}\n          timeoutSeconds: 3\n          failureThreshold: {{ .Values.global.proxy.readinessFailureThreshold }}\n        volumeMounts:\n        - name: workload-socket\n          mountPath: /var/run/secrets/workload-spiffe-uds\n        - name: credential-socket\n          mountPath: /var/run/secrets/credential-uds\n        {{- if eq .Values.global.caName \"GkeWorkloadCertificate\" }}\n        - name: gke-workload-certificate\n          mountPath: /var/run/secrets/workload-spiffe-credentials\n          readOnly: true\n        {{- else }}\n        - name: workload-certs\n          mountPath: /var/run/secrets/workload-spiffe-credentials\n        {{- end }}\n        {{- if eq .Values.global.pilotCertProvider \"istiod\" }}\n        - mountPath: /var/run/secrets/istio\n          name: istiod-ca-cert\n        {{- end }}\n        - mountPath: /var/lib/istio/data\n          name: istio-data\n        # SDS channel between istioagent and Envoy\n        - mountPath: /etc/istio/proxy\n          name: istio-envoy\n        {{- if eq .Values.global.jwtPolicy \"third-party-jwt\" }}\n        - mountPath: /var/run/secrets/tokens\n          name: istio-token\n        {{- end }}\n        {{- if .Values.global.mountMtlsCerts }}\n        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.\n        - mountPath: /etc/certs/\n          name: istio-certs\n          readOnly: true\n        {{- end }}\n        - name: istio-podinfo\n          mountPath: /etc/istio/pod\n      volumes:\n      - emptyDir: {}\n        name: workload-socket\n      - emptyDir: {}\n        name: credential-socket\n      {{- if eq .Values.global.caName \"GkeWorkloadCertificate\" }}\n      - name: gke-workload-certificate\n        csi:\n          driver: workloadcertificates.security.cloud.google.com\n      {{- else}}\n      - emptyDir: {}\n        name: workload-certs\n      {{- end }}\n      # SDS channel between istioagent and Envoy\n      - emptyDir:\n          medium: Memory\n        name: istio-envoy\n      - name: istio-data\n        emptyDir: {}\n      - name: istio-podinfo\n        downwardAPI:\n          items:\n            - path: \"labels\"\n              fieldRef:\n                fieldPath: metadata.labels\n            - path: \"annotations\"\n              fieldRef:\n                fieldPath: metadata.annotations\n      {{- if eq .Values.global.jwtPolicy \"third-party-jwt\" }}\n      - name: istio-token\n        projected:\n          sources:\n          - serviceAccountToken:\n              path: istio-token\n              expirationSeconds: 43200\n              audience: {{ .Values.global.sds.token.aud }}\n      {{- end }}\n      {{- if eq .Values.global.pilotCertProvider \"istiod\" }}\n      - name: istiod-ca-cert\n        configMap:\n          name: istio-ca-root-cert\n      {{- end }}\n      {{- if .Values.global.mountMtlsCerts }}\n      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.\n      - name: istio-certs\n        secret:\n          optional: true\n          {{ if eq .Spec.ServiceAccountName \"\" }}\n          secretName: istio.default\n          {{ else -}}\n          secretName: {{  printf \"istio.%s\" .Spec.ServiceAccountName }}\n          {{  end -}}\n      {{- end }}\n      {{- if .Values.global.imagePullSecrets }}\n      imagePullSecrets:\n        {{- range .Values.global.imagePullSecrets }}\n        - name: {{ . }}\n        {{- end }}\n      {{- end }}\n      {{- if eq (env \"ENABLE_LEGACY_FSGROUP_INJECTION\" \"false\") \"true\" }}\n      securityContext:\n        fsGroup: 1337\n      {{- end }}\n  grpc-simple: |\n    metadata:\n      sidecar.istio.io/rewriteAppHTTPProbers: \"false\"\n    spec:\n      initContainers:\n        - name: grpc-bootstrap-init\n          image: busybox:1.28\n          volumeMounts:\n            - mountPath: /var/lib/grpc/data/\n              name: grpc-io-proxyless-bootstrap\n          env:\n            - name: INSTANCE_IP\n              valueFrom:\n                fieldRef:\n                  fieldPath: status.podIP\n            - name: POD_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.name\n            - name: POD_NAMESPACE\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.namespace\n            - name: ISTIO_NAMESPACE\n              value: |\n                 {{ .Values.global.istioNamespace }}\n          command:\n            - sh\n            - \"-c\"\n            - |-\n              NODE_ID=\"sidecar~${INSTANCE_IP}~${POD_NAME}.${POD_NAMESPACE}~cluster.local\"\n              SERVER_URI=\"dns:///istiod.${ISTIO_NAMESPACE}.svc:15010\"\n              echo '\n              {\n                \"xds_servers\": [\n                  {\n                    \"server_uri\": \"'${SERVER_URI}'\",\n                    \"channel_creds\": [{\"type\": \"insecure\"}],\n                    \"server_features\" : [\"xds_v3\"]\n                  }\n                ],\n                \"node\": {\n                  \"id\": \"'${NODE_ID}'\",\n                  \"metadata\": {\n                    \"GENERATOR\": \"grpc\"\n                  }\n                }\n              }' > /var/lib/grpc/data/bootstrap.json\n      containers:\n      {{- range $index, $container := .Spec.Containers }}\n      - name: {{ $container.Name }}\n        env:\n          - name: GRPC_XDS_BOOTSTRAP\n            value: /var/lib/grpc/data/bootstrap.json\n          - name: GRPC_GO_LOG_VERBOSITY_LEVEL\n            value: \"99\"\n          - name: GRPC_GO_LOG_SEVERITY_LEVEL\n            value: info\n        volumeMounts:\n          - mountPath: /var/lib/grpc/data/\n            name: grpc-io-proxyless-bootstrap\n      {{- end }}\n      volumes:\n        - name: grpc-io-proxyless-bootstrap\n          emptyDir: {}\n  grpc-agent: |\n    {{- define \"resources\"  }}\n      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}\n        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}\n          requests:\n            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}\n            cpu: \"{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}\"\n            {{ end }}\n            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}\n            memory: \"{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}\"\n            {{ end }}\n        {{- end }}\n        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}\n          limits:\n            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}\n            cpu: \"{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}\"\n            {{ end }}\n            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}\n            memory: \"{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}\"\n            {{ end }}\n        {{- end }}\n      {{- else }}\n        {{- if .Values.global.proxy.resources }}\n          {{ toYaml .Values.global.proxy.resources | indent 6 }}\n        {{- end }}\n      {{- end }}\n    {{- end }}\n    {{- $containers := list }}\n    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name \"istio-proxy\") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}\n    metadata:\n      labels:\n        {{/* security.istio.io/tlsMode: istio must be set by user, if gRPC is using mTLS initialization code. We can't set it automatically. */}}\n        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}\n        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default \"latest\"  | quote }}\n      annotations: {\n        {{- if ge (len $containers) 1 }}\n        {{- if not (isset .ObjectMeta.Annotations `kubectl.kubernetes.io/default-logs-container`) }}\n        kubectl.kubernetes.io/default-logs-container: \"{{ index $containers 0 }}\",\n        {{- end }}\n        {{- if not (isset .ObjectMeta.Annotations `kubectl.kubernetes.io/default-container`) }}\n        kubectl.kubernetes.io/default-container: \"{{ index $containers 0 }}\",\n        {{- end }}\n        {{- end }}\n        sidecar.istio.io/rewriteAppHTTPProbers: \"false\",\n      }\n    spec:\n      containers:\n      - name: istio-proxy\n      {{- if contains \"/\" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}\n        image: \"{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}\"\n      {{- else }}\n        image: \"{{ .ProxyImage }}\"\n      {{- end }}\n        ports:\n        - containerPort: 15020\n          protocol: TCP\n          name: mesh-metrics\n        args:\n        - proxy\n        - sidecar\n        - --domain\n        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}\n        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}\n        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}\n        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}\n      {{- if .Values.global.sts.servicePort }}\n        - --stsPort={{ .Values.global.sts.servicePort }}\n      {{- end }}\n      {{- if .Values.global.logAsJson }}\n        - --log_as_json\n      {{- end }}\n        lifecycle:\n          postStart:\n            exec:\n              command:\n              - pilot-agent\n              - wait\n              - --url=http://localhost:15020/healthz/ready\n        env:\n        - name: ISTIO_META_GENERATOR\n          value: grpc\n        - name: OUTPUT_CERTS\n          value: /var/lib/istio/data\n        {{- if eq (env \"PILOT_ENABLE_INBOUND_PASSTHROUGH\" \"true\") \"false\" }}\n        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION\n          value: \"true\"\n        {{- end }}\n        - name: JWT_POLICY\n          value: {{ .Values.global.jwtPolicy }}\n        - name: PILOT_CERT_PROVIDER\n          value: {{ .Values.global.pilotCertProvider }}\n        - name: CA_ADDR\n        {{- if .Values.global.caAddress }}\n          value: {{ .Values.global.caAddress }}\n        {{- else }}\n          value: istiod{{- if not (eq .Values.revision \"\") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012\n        {{- end }}\n        - name: POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: POD_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: INSTANCE_IP\n          valueFrom:\n            fieldRef:\n              fieldPath: status.podIP\n        - name: SERVICE_ACCOUNT\n          valueFrom:\n            fieldRef:\n              fieldPath: spec.serviceAccountName\n        - name: HOST_IP\n          valueFrom:\n            fieldRef:\n              fieldPath: status.hostIP\n        - name: PROXY_CONFIG\n          value: |\n                 {{ protoToJSON .ProxyConfig }}\n        - name: ISTIO_META_POD_PORTS\n          value: |-\n            [\n            {{- $first := true }}\n            {{- range $index1, $c := .Spec.Containers }}\n              {{- range $index2, $p := $c.Ports }}\n                {{- if (structToJSON $p) }}\n                {{if not $first}},{{end}}{{ structToJSON $p }}\n                {{- $first = false }}\n                {{- end }}\n              {{- end}}\n            {{- end}}\n            ]\n        - name: ISTIO_META_APP_CONTAINERS\n          value: \"{{ $containers | join \",\" }}\"\n        - name: ISTIO_META_CLUSTER_ID\n          value: \"{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}\"\n        {{- if .Values.global.network }}\n        - name: ISTIO_META_NETWORK\n          value: \"{{ .Values.global.network }}\"\n        {{- end }}\n        {{- if .DeploymentMeta.Name }}\n        - name: ISTIO_META_WORKLOAD_NAME\n          value: \"{{ .DeploymentMeta.Name }}\"\n        {{ end }}\n        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}\n        - name: ISTIO_META_OWNER\n          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}\n        {{- end}}\n        {{- if .Values.global.meshID }}\n        - name: ISTIO_META_MESH_ID\n          value: \"{{ .Values.global.meshID }}\"\n        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}\n        - name: ISTIO_META_MESH_ID\n          value: \"{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}\"\n        {{- end }}\n        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}\n        - name: TRUST_DOMAIN\n          value: \"{{ . }}\"\n        {{- end }}\n        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}\n        - name: {{ $key }}\n          value: \"{{ $value }}\"\n        {{- end }}\n        # grpc uses xds:/// to resolve – no need to resolve VIP\n        - name: ISTIO_META_DNS_CAPTURE\n          value: \"false\"\n        - name: DISABLE_ENVOY\n          value: \"true\"\n        {{with .Values.global.imagePullPolicy }}imagePullPolicy: \"{{.}}\"{{end}}\n        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}\n        readinessProbe:\n          httpGet:\n            path: /healthz/ready\n            port: 15020\n          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}\n          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}\n          timeoutSeconds: 3\n          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}\n        resources:\n      {{ template \"resources\" . }}\n        volumeMounts:\n        - name: workload-socket\n          mountPath: /var/run/secrets/workload-spiffe-uds\n        {{- if eq .Values.global.caName \"GkeWorkloadCertificate\" }}\n        - name: gke-workload-certificate\n          mountPath: /var/run/secrets/workload-spiffe-credentials\n          readOnly: true\n        {{- else }}\n        - name: workload-certs\n          mountPath: /var/run/secrets/workload-spiffe-credentials\n        {{- end }}\n        {{- if eq .Values.global.pilotCertProvider \"istiod\" }}\n        - mountPath: /var/run/secrets/istio\n          name: istiod-ca-cert\n        {{- end }}\n        - mountPath: /var/lib/istio/data\n          name: istio-data\n        # UDS channel between istioagent and gRPC client for XDS/SDS\n        - mountPath: /etc/istio/proxy\n          name: istio-xds\n        {{- if eq .Values.global.jwtPolicy \"third-party-jwt\" }}\n        - mountPath: /var/run/secrets/tokens\n          name: istio-token\n        {{- end }}\n        {{- if .Values.global.mountMtlsCerts }}\n        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.\n        - mountPath: /etc/certs/\n          name: istio-certs\n          readOnly: true\n        {{- end }}\n        - name: istio-podinfo\n          mountPath: /etc/istio/pod\n        {{- end }}\n          {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}\n          {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}\n        - name: \"{{  $index }}\"\n          {{ toYaml $value | indent 6 }}\n          {{ end }}\n          {{- end }}\n    {{- range $index, $container := .Spec.Containers  }}\n    {{ if not (eq $container.Name \"istio-proxy\") }}\n      - name: {{ $container.Name }}\n        env:\n          - name: \"GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT\"\n            value: \"true\"\n          - name: \"GRPC_XDS_BOOTSTRAP\"\n            value: \"/etc/istio/proxy/grpc-bootstrap.json\"\n        volumeMounts:\n          - mountPath: /var/lib/istio/data\n            name: istio-data\n          # UDS channel between istioagent and gRPC client for XDS/SDS\n          - mountPath: /etc/istio/proxy\n            name: istio-xds\n          {{- if eq $.Values.global.caName \"GkeWorkloadCertificate\" }}\n          - name: gke-workload-certificate\n            mountPath: /var/run/secrets/workload-spiffe-credentials\n            readOnly: true\n          {{- else }}\n          - name: workload-certs\n            mountPath: /var/run/secrets/workload-spiffe-credentials\n          {{- end }}\n    {{- end }}\n    {{- end }}\n      volumes:\n      - emptyDir:\n        name: workload-socket\n      {{- if eq .Values.global.caName \"GkeWorkloadCertificate\" }}\n      - name: gke-workload-certificate\n        csi:\n          driver: workloadcertificates.security.cloud.google.com\n      {{- else }}\n      - emptyDir:\n        name: workload-certs\n      {{- end }}\n      {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}\n      - name: custom-bootstrap-volume\n        configMap:\n          name: {{ annotation .ObjectMeta `sidecar.istio.io/bootstrapOverride` \"\" }}\n      {{- end }}\n      # SDS channel between istioagent and Envoy\n      - emptyDir:\n          medium: Memory\n        name: istio-xds\n      - name: istio-data\n        emptyDir: {}\n      - name: istio-podinfo\n        downwardAPI:\n          items:\n            - path: \"labels\"\n              fieldRef:\n                fieldPath: metadata.labels\n            - path: \"annotations\"\n              fieldRef:\n                fieldPath: metadata.annotations\n      {{- if eq .Values.global.jwtPolicy \"third-party-jwt\" }}\n      - name: istio-token\n        projected:\n          sources:\n          - serviceAccountToken:\n              path: istio-token\n              expirationSeconds: 43200\n              audience: {{ .Values.global.sds.token.aud }}\n      {{- end }}\n      {{- if eq .Values.global.pilotCertProvider \"istiod\" }}\n      - name: istiod-ca-cert\n        configMap:\n          name: istio-ca-root-cert\n      {{- end }}\n      {{- if .Values.global.mountMtlsCerts }}\n      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.\n      - name: istio-certs\n        secret:\n          optional: true\n          {{ if eq .Spec.ServiceAccountName \"\" }}\n          secretName: istio.default\n          {{ else -}}\n          secretName: {{  printf \"istio.%s\" .Spec.ServiceAccountName }}\n          {{  end -}}\n      {{- end }}\n        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}\n        {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}\n      - name: \"{{ $index }}\"\n        {{ toYaml $value | indent 4 }}\n        {{ end }}\n        {{ end }}\n      {{- if .Values.global.imagePullSecrets }}\n      imagePullSecrets:\n        {{- range .Values.global.imagePullSecrets }}\n        - name: {{ . }}\n        {{- end }}\n      {{- end }}\n      {{- if eq (env \"ENABLE_LEGACY_FSGROUP_INJECTION\" \"false\") \"true\" }}\n      securityContext:\n        fsGroup: 1337\n      {{- end }}",
        "values": "{\n  \"global\": {\n    \"autoscalingv2API\": true,\n    \"caAddress\": \"\",\n    \"caName\": \"\",\n    \"configCluster\": false,\n    \"defaultPodDisruptionBudget\": {\n      \"enabled\": true\n    },\n    \"defaultResources\": {\n      \"requests\": {\n        \"cpu\": \"10m\"\n      }\n    },\n    \"externalIstiod\": false,\n    \"hub\": \"docker.io/istio\",\n    \"imagePullPolicy\": \"\",\n    \"imagePullSecrets\": [],\n    \"istioNamespace\": \"battery-istio\",\n    \"istiod\": {\n      \"enableAnalysis\": false\n    },\n    \"jwtPolicy\": \"third-party-jwt\",\n    \"logAsJson\": false,\n    \"logging\": {\n      \"level\": \"default:info\"\n    },\n    \"meshID\": \"\",\n    \"meshNetworks\": {},\n    \"mountMtlsCerts\": false,\n    \"multiCluster\": {\n      \"clusterName\": \"\",\n      \"enabled\": false\n    },\n    \"network\": \"\",\n    \"omitSidecarInjectorConfigMap\": false,\n    \"oneNamespace\": false,\n    \"operatorManageWebhooks\": false,\n    \"pilotCertProvider\": \"istiod\",\n    \"priorityClassName\": \"\",\n    \"proxy\": {\n      \"autoInject\": \"enabled\",\n      \"clusterDomain\": \"cluster.local\",\n      \"componentLogLevel\": \"misc:error\",\n      \"enableCoreDump\": false,\n      \"excludeIPRanges\": \"\",\n      \"excludeInboundPorts\": \"\",\n      \"excludeOutboundPorts\": \"\",\n      \"holdApplicationUntilProxyStarts\": false,\n      \"image\": \"proxyv2\",\n      \"includeIPRanges\": \"*\",\n      \"includeInboundPorts\": \"*\",\n      \"includeOutboundPorts\": \"\",\n      \"logLevel\": \"warning\",\n      \"privileged\": false,\n      \"readinessFailureThreshold\": 30,\n      \"readinessInitialDelaySeconds\": 1,\n      \"readinessPeriodSeconds\": 2,\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"2000m\",\n          \"memory\": \"1024Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"100m\",\n          \"memory\": \"128Mi\"\n        }\n      },\n      \"statusPort\": 15020,\n      \"tracer\": \"zipkin\"\n    },\n    \"proxy_init\": {\n      \"image\": \"proxyv2\"\n    },\n    \"remotePilotAddress\": \"\",\n    \"sds\": {\n      \"token\": {\n        \"aud\": \"istio-ca\"\n      }\n    },\n    \"sts\": {\n      \"servicePort\": 0\n    },\n    \"tag\": \"1.16.1\",\n    \"tracer\": {\n      \"datadog\": {\n        \"address\": \"$(HOST_IP):8126\"\n      },\n      \"lightstep\": {\n        \"accessToken\": \"\",\n        \"address\": \"\"\n      },\n      \"stackdriver\": {\n        \"debug\": false,\n        \"maxNumberOfAnnotations\": 200,\n        \"maxNumberOfAttributes\": 200,\n        \"maxNumberOfMessageEvents\": 200\n      },\n      \"zipkin\": {\n        \"address\": \"\"\n      }\n    },\n    \"useMCP\": false,\n    \"variant\": \"\"\n  },\n  \"revision\": \"\",\n  \"sidecarInjectorWebhook\": {\n    \"alwaysInjectSelector\": [],\n    \"defaultTemplates\": [],\n    \"enableNamespacesByDefault\": false,\n    \"injectedAnnotations\": {},\n    \"neverInjectSelector\": [],\n    \"rewriteAppHTTPProbe\": true,\n    \"templates\": {}\n  }\n}"
      },
      "kind": "ConfigMap",
      "metadata": {
        "annotations": {
          "battery/hash": "XTNM7BL7XZL5NJO23Z66ORQX4IRFVOOYWDM2FRF5EZ4YBQ5XWQGQ===="
        },
        "labels": {
          "app": "istiod",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istiod",
          "battery/app": "istiod",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "istio.io/rev": "default",
          "operator.istio.io/component": "Pilot"
        },
        "name": "istio-sidecar-injector",
        "namespace": "battery-istio"
      }
    },
    "/istio_gateway/horizontal_pod_autoscaler/istio_ingressgateway": {
      "apiVersion": "autoscaling/v2",
      "kind": "HorizontalPodAutoscaler",
      "metadata": {
        "annotations": {
          "battery/hash": "KKHS5AKOW224RMIYFBVQFESFSX3RV4NQ4OPM356FNEKVK7WWNY4Q===="
        },
        "labels": {
          "app": "istio-ingressgateway",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istio-ingressgateway",
          "battery/app": "istio-ingressgateway",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "istio": "ingressgateway"
        },
        "name": "istio-ingressgateway",
        "namespace": "battery-istio"
      },
      "spec": {
        "maxReplicas": 5,
        "metrics": [
          {
            "resource": {
              "name": "cpu",
              "target": {
                "averageUtilization": 80,
                "type": "Utilization"
              }
            },
            "type": "Resource"
          }
        ],
        "minReplicas": 1,
        "scaleTargetRef": {
          "apiVersion": "apps/v1",
          "kind": "Deployment",
          "name": "istio-ingressgateway"
        }
      }
    },
    "/istio_gateway/istio_telemetry/mesh_default": {
      "apiVersion": "telemetry.istio.io/v1alpha1",
      "kind": "Telemetry",
      "metadata": {
        "annotations": {
          "battery/hash": "KHRSQQRRP67PVXQP7Y2EKAF6EFUSWJDUYAUIPSIU4B7NWWODUYWA===="
        },
        "labels": {
          "app": "istio-ingressgateway",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istio-ingressgateway",
          "battery/app": "istio-ingressgateway",
          "battery/managed": "true",
          "battery/managed.direct": "true"
        },
        "name": "mesh-default",
        "namespace": "battery-istio"
      },
      "spec": {
        "accessLogging": [
          {
            "providers": [
              {
                "name": "envoy"
              }
            ]
          }
        ]
      }
    },
    "/istio/deployment/istiod": {
      "apiVersion": "apps/v1",
      "kind": "Deployment",
      "metadata": {
        "annotations": {
          "battery/hash": "BCKHPHKRFKEKTEBLJMSU3HCNQGSAI2US2WVCHBSBGE7IJMDESVJQ===="
        },
        "labels": {
          "app": "istiod",
          "app.kubernetes.io/component": "istiod",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istiod",
          "battery/app": "istiod",
          "battery/component": "istiod",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "component": "istiod",
          "istio": "pilot",
          "istio.io/rev": "default",
          "sidecar.istio.io/inject": "false"
        },
        "name": "istiod",
        "namespace": "battery-istio"
      },
      "spec": {
        "selector": {
          "matchLabels": {
            "istio": "pilot"
          }
        },
        "strategy": {
          "rollingUpdate": {
            "maxSurge": "100%",
            "maxUnavailable": "25%"
          }
        },
        "template": {
          "metadata": {
            "annotations": {},
            "labels": {
              "app": "istiod",
              "app.kubernetes.io/component": "istiod",
              "app.kubernetes.io/managed-by": "batteries-included",
              "app.kubernetes.io/name": "istiod",
              "battery/app": "istiod",
              "battery/component": "istiod",
              "battery/managed": "true",
              "battery/managed.indirect": "true",
              "component": "istiod",
              "istio": "pilot",
              "istio.io/rev": "default",
              "sidecar.istio.io/inject": "false"
            }
          },
          "spec": {
            "containers": [
              {
                "args": [
                  "discovery",
                  "--monitoringAddr=:15014",
                  "--log_output_level=default:info",
                  "--domain",
                  "cluster.local",
                  "--keepaliveMaxServerConnectionAge",
                  "30m"
                ],
                "env": [
                  {
                    "name": "REVISION",
                    "value": "default"
                  },
                  {
                    "name": "JWT_POLICY",
                    "value": "third-party-jwt"
                  },
                  {
                    "name": "PILOT_CERT_PROVIDER",
                    "value": "istiod"
                  },
                  {
                    "name": "POD_NAME",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.name"
                      }
                    }
                  },
                  {
                    "name": "POD_NAMESPACE",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.namespace"
                      }
                    }
                  },
                  {
                    "name": "SERVICE_ACCOUNT",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "spec.serviceAccountName"
                      }
                    }
                  },
                  {
                    "name": "KUBECONFIG",
                    "value": "/var/run/secrets/remote/config"
                  },
                  {
                    "name": "PILOT_TRACE_SAMPLING",
                    "value": "1"
                  },
                  {
                    "name": "PILOT_ENABLE_PROTOCOL_SNIFFING_FOR_OUTBOUND",
                    "value": "true"
                  },
                  {
                    "name": "PILOT_ENABLE_PROTOCOL_SNIFFING_FOR_INBOUND",
                    "value": "true"
                  },
                  {
                    "name": "ISTIOD_ADDR",
                    "value": "istiod.battery-istio.svc:15012"
                  },
                  {
                    "name": "PILOT_ENABLE_ANALYSIS",
                    "value": "false"
                  },
                  {
                    "name": "CLUSTER_ID",
                    "value": "Kubernetes"
                  }
                ],
                "image": "istio/pilot:1.17.1-distroless",
                "name": "discovery",
                "ports": [
                  {
                    "containerPort": 8080,
                    "protocol": "TCP"
                  },
                  {
                    "containerPort": 15010,
                    "protocol": "TCP"
                  },
                  {
                    "containerPort": 15017,
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "httpGet": {
                    "path": "/ready",
                    "port": 8080
                  },
                  "initialDelaySeconds": 1,
                  "periodSeconds": 3,
                  "timeoutSeconds": 5
                },
                "resources": {
                  "requests": {
                    "cpu": "500m",
                    "memory": "2048Mi"
                  }
                },
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": {
                    "drop": ["ALL"]
                  },
                  "readOnlyRootFilesystem": true,
                  "runAsGroup": 1337,
                  "runAsNonRoot": true,
                  "runAsUser": 1337
                },
                "volumeMounts": [
                  {
                    "mountPath": "/var/run/secrets/tokens",
                    "name": "istio-token",
                    "readOnly": true
                  },
                  {
                    "mountPath": "/var/run/secrets/istio-dns",
                    "name": "local-certs"
                  },
                  {
                    "mountPath": "/etc/cacerts",
                    "name": "cacerts",
                    "readOnly": true
                  },
                  {
                    "mountPath": "/var/run/secrets/remote",
                    "name": "istio-kubeconfig",
                    "readOnly": true
                  }
                ]
              }
            ],
            "securityContext": {
              "fsGroup": 1337
            },
            "serviceAccountName": "istiod",
            "volumes": [
              {
                "emptyDir": {
                  "medium": "Memory"
                },
                "name": "local-certs"
              },
              {
                "name": "istio-token",
                "projected": {
                  "sources": [
                    {
                      "serviceAccountToken": {
                        "audience": "istio-ca",
                        "expirationSeconds": 43200,
                        "path": "istio-token"
                      }
                    }
                  ]
                }
              },
              {
                "name": "cacerts",
                "secret": {
                  "optional": true,
                  "secretName": "cacerts"
                }
              },
              {
                "name": "istio-kubeconfig",
                "secret": {
                  "optional": true,
                  "secretName": "istio-kubeconfig"
                }
              }
            ]
          }
        }
      }
    },
    "/istio/istio_envoy_filter/stats_filter_1_14": {
      "apiVersion": "networking.istio.io/v1alpha3",
      "kind": "EnvoyFilter",
      "metadata": {
        "annotations": {
          "battery/hash": "HDTRLHQVCBUTG4DEJ5FTYKUJ2UXJZHYWCHMOOGHVDY4PTUK2LZ3A===="
        },
        "labels": {
          "app": "istiod",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istiod",
          "battery/app": "istiod",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "istio.io/rev": "default"
        },
        "name": "stats-filter-1.14",
        "namespace": "battery-istio"
      },
      "spec": {
        "configPatches": [
          {
            "applyTo": "HTTP_FILTER",
            "match": {
              "context": "SIDECAR_OUTBOUND",
              "listener": {
                "filterChain": {
                  "filter": {
                    "name": "envoy.filters.network.http_connection_manager",
                    "subFilter": {
                      "name": "envoy.filters.http.router"
                    }
                  }
                }
              },
              "proxy": {
                "proxyVersion": "^1\\.14.*"
              }
            },
            "patch": {
              "operation": "INSERT_BEFORE",
              "value": {
                "name": "istio.stats",
                "typed_config": {
                  "@type": "type.googleapis.com/udpa.type.v1.TypedStruct",
                  "type_url": "type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm",
                  "value": {
                    "config": {
                      "configuration": {
                        "@type": "type.googleapis.com/google.protobuf.StringValue",
                        "value": "{\n  \"debug\": \"false\",\n  \"stat_prefix\": \"istio\"\n}\n"
                      },
                      "root_id": "stats_outbound",
                      "vm_config": {
                        "code": {
                          "local": {
                            "inline_string": "envoy.wasm.stats"
                          }
                        },
                        "runtime": "envoy.wasm.runtime.null",
                        "vm_id": "stats_outbound"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "applyTo": "HTTP_FILTER",
            "match": {
              "context": "SIDECAR_INBOUND",
              "listener": {
                "filterChain": {
                  "filter": {
                    "name": "envoy.filters.network.http_connection_manager",
                    "subFilter": {
                      "name": "envoy.filters.http.router"
                    }
                  }
                }
              },
              "proxy": {
                "proxyVersion": "^1\\.14.*"
              }
            },
            "patch": {
              "operation": "INSERT_BEFORE",
              "value": {
                "name": "istio.stats",
                "typed_config": {
                  "@type": "type.googleapis.com/udpa.type.v1.TypedStruct",
                  "type_url": "type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm",
                  "value": {
                    "config": {
                      "configuration": {
                        "@type": "type.googleapis.com/google.protobuf.StringValue",
                        "value": "{\n  \"debug\": \"false\",\n  \"stat_prefix\": \"istio\",\n  \"disable_host_header_fallback\": true\n}\n"
                      },
                      "root_id": "stats_inbound",
                      "vm_config": {
                        "code": {
                          "local": {
                            "inline_string": "envoy.wasm.stats"
                          }
                        },
                        "runtime": "envoy.wasm.runtime.null",
                        "vm_id": "stats_inbound"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "applyTo": "HTTP_FILTER",
            "match": {
              "context": "GATEWAY",
              "listener": {
                "filterChain": {
                  "filter": {
                    "name": "envoy.filters.network.http_connection_manager",
                    "subFilter": {
                      "name": "envoy.filters.http.router"
                    }
                  }
                }
              },
              "proxy": {
                "proxyVersion": "^1\\.14.*"
              }
            },
            "patch": {
              "operation": "INSERT_BEFORE",
              "value": {
                "name": "istio.stats",
                "typed_config": {
                  "@type": "type.googleapis.com/udpa.type.v1.TypedStruct",
                  "type_url": "type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm",
                  "value": {
                    "config": {
                      "configuration": {
                        "@type": "type.googleapis.com/google.protobuf.StringValue",
                        "value": "{\n  \"debug\": \"false\",\n  \"stat_prefix\": \"istio\",\n  \"disable_host_header_fallback\": true\n}\n"
                      },
                      "root_id": "stats_outbound",
                      "vm_config": {
                        "code": {
                          "local": {
                            "inline_string": "envoy.wasm.stats"
                          }
                        },
                        "runtime": "envoy.wasm.runtime.null",
                        "vm_id": "stats_outbound"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "priority": -1
      }
    },
    "/postgres/service/postgres_operator": {
      "apiVersion": "v1",
      "kind": "Service",
      "metadata": {
        "annotations": {
          "battery/hash": "5XU6GXYAIQZBLJVS4MUV763BBAQ6D22IYXMS5OQTXXFDLNC3DPFA===="
        },
        "labels": {
          "app": "postgres-operator",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "postgres-operator",
          "battery/app": "postgres-operator",
          "battery/managed": "true",
          "battery/managed.direct": "true"
        },
        "name": "postgres-operator",
        "namespace": "battery-core"
      },
      "spec": {
        "ports": [
          {
            "port": 8080,
            "protocol": "TCP",
            "targetPort": 8080
          }
        ],
        "selector": {
          "battery/app": "postgres-operator"
        }
      }
    },
    "/postgres/service_account/battery_postgres_operator": {
      "apiVersion": "v1",
      "kind": "ServiceAccount",
      "metadata": {
        "annotations": {
          "battery/hash": "QQPMTOEISHTCXGISWE6ZWORRYZ2BR6ANSQWXRFPOMYIN2X3HBTIQ===="
        },
        "labels": {
          "app": "postgres-operator",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "postgres-operator",
          "battery/app": "postgres-operator",
          "battery/managed": "true",
          "battery/managed.direct": "true"
        },
        "name": "battery-postgres-operator",
        "namespace": "battery-core"
      }
    },
    "/istio/crd/gateways_networking_istio_io": {
      "apiVersion": "apiextensions.k8s.io/v1",
      "kind": "CustomResourceDefinition",
      "metadata": {
        "annotations": {
          "battery/hash": "HZTKBM6GUYUMQIRZ4L6BEWSEURAS26YEJSFWZNFGTM7DQ3XQY7PQ===="
        },
        "labels": {
          "app": "istio-pilot",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istio-base",
          "battery/app": "istio-base",
          "battery/managed": "true",
          "battery/managed.direct": "true"
        },
        "name": "gateways.networking.istio.io"
      },
      "spec": {
        "group": "networking.istio.io",
        "names": {
          "categories": ["istio-io", "networking-istio-io"],
          "kind": "Gateway",
          "listKind": "GatewayList",
          "plural": "gateways",
          "shortNames": ["gw"],
          "singular": "gateway"
        },
        "scope": "Namespaced",
        "versions": [
          {
            "name": "v1alpha3",
            "schema": {
              "openAPIV3Schema": {
                "properties": {
                  "spec": {
                    "description": "Configuration affecting edge load balancer. See more details at: https://istio.io/docs/reference/config/networking/gateway.html",
                    "properties": {
                      "selector": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "type": "object"
                      },
                      "servers": {
                        "description": "A list of server specifications.",
                        "items": {
                          "properties": {
                            "bind": {
                              "type": "string"
                            },
                            "defaultEndpoint": {
                              "type": "string"
                            },
                            "hosts": {
                              "description": "One or more hosts exposed by this gateway.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "name": {
                              "description": "An optional name of the server, when set must be unique across all servers.",
                              "type": "string"
                            },
                            "port": {
                              "properties": {
                                "name": {
                                  "description": "Label assigned to the port.",
                                  "type": "string"
                                },
                                "number": {
                                  "description": "A valid non-negative integer port number.",
                                  "type": "integer"
                                },
                                "protocol": {
                                  "description": "The protocol exposed on the port.",
                                  "type": "string"
                                },
                                "targetPort": {
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "tls": {
                              "description": "Set of TLS related options that govern the server's behavior.",
                              "properties": {
                                "caCertificates": {
                                  "description": "REQUIRED if mode is `MUTUAL`.",
                                  "type": "string"
                                },
                                "cipherSuites": {
                                  "description": "Optional: If specified, only support the specified cipher list.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "credentialName": {
                                  "type": "string"
                                },
                                "httpsRedirect": {
                                  "type": "boolean"
                                },
                                "maxProtocolVersion": {
                                  "description": "Optional: Maximum TLS protocol version.",
                                  "enum": [
                                    "TLS_AUTO",
                                    "TLSV1_0",
                                    "TLSV1_1",
                                    "TLSV1_2",
                                    "TLSV1_3"
                                  ],
                                  "type": "string"
                                },
                                "minProtocolVersion": {
                                  "description": "Optional: Minimum TLS protocol version.",
                                  "enum": [
                                    "TLS_AUTO",
                                    "TLSV1_0",
                                    "TLSV1_1",
                                    "TLSV1_2",
                                    "TLSV1_3"
                                  ],
                                  "type": "string"
                                },
                                "mode": {
                                  "enum": [
                                    "PASSTHROUGH",
                                    "SIMPLE",
                                    "MUTUAL",
                                    "AUTO_PASSTHROUGH",
                                    "ISTIO_MUTUAL"
                                  ],
                                  "type": "string"
                                },
                                "privateKey": {
                                  "description": "REQUIRED if mode is `SIMPLE` or `MUTUAL`.",
                                  "type": "string"
                                },
                                "serverCertificate": {
                                  "description": "REQUIRED if mode is `SIMPLE` or `MUTUAL`.",
                                  "type": "string"
                                },
                                "subjectAltNames": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "verifyCertificateHash": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "verifyCertificateSpki": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "status": {
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                  }
                },
                "type": "object"
              }
            },
            "served": true,
            "storage": true,
            "subresources": {
              "status": {}
            }
          },
          {
            "name": "v1beta1",
            "schema": {
              "openAPIV3Schema": {
                "properties": {
                  "spec": {
                    "description": "Configuration affecting edge load balancer. See more details at: https://istio.io/docs/reference/config/networking/gateway.html",
                    "properties": {
                      "selector": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "type": "object"
                      },
                      "servers": {
                        "description": "A list of server specifications.",
                        "items": {
                          "properties": {
                            "bind": {
                              "type": "string"
                            },
                            "defaultEndpoint": {
                              "type": "string"
                            },
                            "hosts": {
                              "description": "One or more hosts exposed by this gateway.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "name": {
                              "description": "An optional name of the server, when set must be unique across all servers.",
                              "type": "string"
                            },
                            "port": {
                              "properties": {
                                "name": {
                                  "description": "Label assigned to the port.",
                                  "type": "string"
                                },
                                "number": {
                                  "description": "A valid non-negative integer port number.",
                                  "type": "integer"
                                },
                                "protocol": {
                                  "description": "The protocol exposed on the port.",
                                  "type": "string"
                                },
                                "targetPort": {
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "tls": {
                              "description": "Set of TLS related options that govern the server's behavior.",
                              "properties": {
                                "caCertificates": {
                                  "description": "REQUIRED if mode is `MUTUAL`.",
                                  "type": "string"
                                },
                                "cipherSuites": {
                                  "description": "Optional: If specified, only support the specified cipher list.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "credentialName": {
                                  "type": "string"
                                },
                                "httpsRedirect": {
                                  "type": "boolean"
                                },
                                "maxProtocolVersion": {
                                  "description": "Optional: Maximum TLS protocol version.",
                                  "enum": [
                                    "TLS_AUTO",
                                    "TLSV1_0",
                                    "TLSV1_1",
                                    "TLSV1_2",
                                    "TLSV1_3"
                                  ],
                                  "type": "string"
                                },
                                "minProtocolVersion": {
                                  "description": "Optional: Minimum TLS protocol version.",
                                  "enum": [
                                    "TLS_AUTO",
                                    "TLSV1_0",
                                    "TLSV1_1",
                                    "TLSV1_2",
                                    "TLSV1_3"
                                  ],
                                  "type": "string"
                                },
                                "mode": {
                                  "enum": [
                                    "PASSTHROUGH",
                                    "SIMPLE",
                                    "MUTUAL",
                                    "AUTO_PASSTHROUGH",
                                    "ISTIO_MUTUAL"
                                  ],
                                  "type": "string"
                                },
                                "privateKey": {
                                  "description": "REQUIRED if mode is `SIMPLE` or `MUTUAL`.",
                                  "type": "string"
                                },
                                "serverCertificate": {
                                  "description": "REQUIRED if mode is `SIMPLE` or `MUTUAL`.",
                                  "type": "string"
                                },
                                "subjectAltNames": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "verifyCertificateHash": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "verifyCertificateSpki": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "status": {
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                  }
                },
                "type": "object"
              }
            },
            "served": true,
            "storage": false,
            "subresources": {
              "status": {}
            }
          }
        ]
      }
    },
    "/istio/service_account/istio_reader_service_account": {
      "apiVersion": "v1",
      "kind": "ServiceAccount",
      "metadata": {
        "annotations": {
          "battery/hash": "YAZFSVIM7D5BSA3XQXBVFVVSOGLRSA54NB2JELYJLSB6GICLEKAQ===="
        },
        "labels": {
          "app": "istio-base",
          "app.kubernetes.io/component": "istio-reader",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istio-base",
          "battery/app": "istio-base",
          "battery/component": "istio-reader",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "component": "istio-reader"
        },
        "name": "istio-reader-service-account",
        "namespace": "battery-istio"
      }
    },
    "/postgres/crd/operatorconfigurations_acid_zalan_do": {
      "apiVersion": "apiextensions.k8s.io/v1",
      "kind": "CustomResourceDefinition",
      "metadata": {
        "annotations": {
          "battery/hash": "RMODTWY724TT3WGWVCD7U2A5BE4MG5WLNK6CFC55XMVYVXNDUUNQ===="
        },
        "labels": {
          "app": "postgres-operator",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "postgres-operator",
          "battery/app": "postgres-operator",
          "battery/managed": "true",
          "battery/managed.direct": "true"
        },
        "name": "operatorconfigurations.acid.zalan.do"
      },
      "spec": {
        "group": "acid.zalan.do",
        "names": {
          "categories": ["all"],
          "kind": "OperatorConfiguration",
          "listKind": "OperatorConfigurationList",
          "plural": "operatorconfigurations",
          "shortNames": ["opconfig"],
          "singular": "operatorconfiguration"
        },
        "scope": "Namespaced",
        "versions": [
          {
            "additionalPrinterColumns": [
              {
                "description": "Spilo image to be used for Pods",
                "jsonPath": ".configuration.docker_image",
                "name": "Image",
                "type": "string"
              },
              {
                "description": "Label for K8s resources created by operator",
                "jsonPath": ".configuration.kubernetes.cluster_name_label",
                "name": "Cluster-Label",
                "type": "string"
              },
              {
                "description": "Name of service account to be used",
                "jsonPath": ".configuration.kubernetes.pod_service_account_name",
                "name": "Service-Account",
                "type": "string"
              },
              {
                "description": "Minimum number of instances per Postgres cluster",
                "jsonPath": ".configuration.min_instances",
                "name": "Min-Instances",
                "type": "integer"
              },
              {
                "jsonPath": ".metadata.creationTimestamp",
                "name": "Age",
                "type": "date"
              }
            ],
            "name": "v1",
            "schema": {
              "openAPIV3Schema": {
                "properties": {
                  "apiVersion": {
                    "enum": ["acid.zalan.do/v1"],
                    "type": "string"
                  },
                  "configuration": {
                    "properties": {
                      "aws_or_gcp": {
                        "properties": {
                          "additional_secret_mount": {
                            "type": "string"
                          },
                          "additional_secret_mount_path": {
                            "default": "/meta/credentials",
                            "type": "string"
                          },
                          "aws_region": {
                            "default": "eu-central-1",
                            "type": "string"
                          },
                          "enable_ebs_gp3_migration": {
                            "default": false,
                            "type": "boolean"
                          },
                          "enable_ebs_gp3_migration_max_size": {
                            "default": 1000,
                            "type": "integer"
                          },
                          "gcp_credentials": {
                            "type": "string"
                          },
                          "kube_iam_role": {
                            "type": "string"
                          },
                          "log_s3_bucket": {
                            "type": "string"
                          },
                          "wal_az_storage_account": {
                            "type": "string"
                          },
                          "wal_gs_bucket": {
                            "type": "string"
                          },
                          "wal_s3_bucket": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "connection_pooler": {
                        "properties": {
                          "connection_pooler_default_cpu_limit": {
                            "default": "1",
                            "pattern": "^(\\d+m|\\d+(\\.\\d{1,3})?)$",
                            "type": "string"
                          },
                          "connection_pooler_default_cpu_request": {
                            "default": "500m",
                            "pattern": "^(\\d+m|\\d+(\\.\\d{1,3})?)$",
                            "type": "string"
                          },
                          "connection_pooler_default_memory_limit": {
                            "default": "100Mi",
                            "pattern": "^(\\d+(e\\d+)?|\\d+(\\.\\d+)?(e\\d+)?[EPTGMK]i?)$",
                            "type": "string"
                          },
                          "connection_pooler_default_memory_request": {
                            "default": "100Mi",
                            "pattern": "^(\\d+(e\\d+)?|\\d+(\\.\\d+)?(e\\d+)?[EPTGMK]i?)$",
                            "type": "string"
                          },
                          "connection_pooler_image": {
                            "default": "registry.opensource.zalan.do/acid/pgbouncer:master-22",
                            "type": "string"
                          },
                          "connection_pooler_max_db_connections": {
                            "default": 60,
                            "type": "integer"
                          },
                          "connection_pooler_mode": {
                            "default": "transaction",
                            "enum": ["session", "transaction"],
                            "type": "string"
                          },
                          "connection_pooler_number_of_instances": {
                            "default": 2,
                            "minimum": 1,
                            "type": "integer"
                          },
                          "connection_pooler_schema": {
                            "default": "pooler",
                            "type": "string"
                          },
                          "connection_pooler_user": {
                            "default": "pooler",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "crd_categories": {
                        "items": {
                          "type": "string"
                        },
                        "nullable": true,
                        "type": "array"
                      },
                      "debug": {
                        "properties": {
                          "debug_logging": {
                            "default": true,
                            "type": "boolean"
                          },
                          "enable_database_access": {
                            "default": true,
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      },
                      "docker_image": {
                        "default": "registry.opensource.zalan.do/acid/spilo-14:2.1-p6",
                        "type": "string"
                      },
                      "enable_crd_registration": {
                        "default": true,
                        "type": "boolean"
                      },
                      "enable_crd_validation": {
                        "default": true,
                        "description": "deprecated",
                        "type": "boolean"
                      },
                      "enable_lazy_spilo_upgrade": {
                        "default": false,
                        "type": "boolean"
                      },
                      "enable_pgversion_env_var": {
                        "default": true,
                        "type": "boolean"
                      },
                      "enable_shm_volume": {
                        "default": true,
                        "type": "boolean"
                      },
                      "enable_spilo_wal_path_compat": {
                        "default": false,
                        "type": "boolean"
                      },
                      "etcd_host": {
                        "default": "",
                        "type": "string"
                      },
                      "kubernetes": {
                        "properties": {
                          "pod_service_account_definition": {
                            "default": "",
                            "type": "string"
                          },
                          "spilo_fsgroup": {
                            "type": "integer"
                          },
                          "cluster_name_label": {
                            "default": "cluster-name",
                            "type": "string"
                          },
                          "pod_service_account_role_binding_definition": {
                            "default": "",
                            "type": "string"
                          },
                          "enable_sidecars": {
                            "default": true,
                            "type": "boolean"
                          },
                          "delete_annotation_name_key": {
                            "type": "string"
                          },
                          "pod_environment_configmap": {
                            "type": "string"
                          },
                          "pod_terminate_grace_period": {
                            "default": "5m",
                            "type": "string"
                          },
                          "pod_priority_class_name": {
                            "type": "string"
                          },
                          "enable_cross_namespace_secret": {
                            "default": false,
                            "type": "boolean"
                          },
                          "secret_name_template": {
                            "default": "{username}.{cluster}.credentials.{tprkind}.{tprgroup}",
                            "type": "string"
                          },
                          "infrastructure_roles_secrets": {
                            "items": {
                              "properties": {
                                "defaultrolevalue": {
                                  "type": "string"
                                },
                                "defaultuservalue": {
                                  "type": "string"
                                },
                                "details": {
                                  "type": "string"
                                },
                                "passwordkey": {
                                  "type": "string"
                                },
                                "rolekey": {
                                  "type": "string"
                                },
                                "secretname": {
                                  "type": "string"
                                },
                                "template": {
                                  "type": "boolean"
                                },
                                "userkey": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "secretname",
                                "userkey",
                                "passwordkey"
                              ],
                              "type": "object"
                            },
                            "nullable": true,
                            "type": "array"
                          },
                          "watched_namespace": {
                            "type": "string"
                          },
                          "pod_service_account_name": {
                            "default": "postgres-pod",
                            "type": "string"
                          },
                          "spilo_allow_privilege_escalation": {
                            "default": true,
                            "type": "boolean"
                          },
                          "ignored_annotations": {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "cluster_domain": {
                            "default": "cluster.local",
                            "type": "string"
                          },
                          "spilo_privileged": {
                            "default": false,
                            "type": "boolean"
                          },
                          "master_pod_move_timeout": {
                            "default": "20m",
                            "type": "string"
                          },
                          "downscaler_annotations": {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "infrastructure_roles_secret_name": {
                            "type": "string"
                          },
                          "cluster_labels": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "default": {
                              "application": "spilo"
                            },
                            "type": "object"
                          },
                          "delete_annotation_date_key": {
                            "type": "string"
                          },
                          "storage_resize_mode": {
                            "default": "pvc",
                            "enum": ["ebs", "pvc", "off"],
                            "type": "string"
                          },
                          "spilo_runasuser": {
                            "type": "integer"
                          },
                          "pdb_name_format": {
                            "default": "postgres-{cluster}-pdb",
                            "type": "string"
                          },
                          "additional_pod_capabilities": {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "toleration": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "type": "object"
                          },
                          "spilo_runasgroup": {
                            "type": "integer"
                          },
                          "enable_pod_antiaffinity": {
                            "default": false,
                            "type": "boolean"
                          },
                          "enable_pod_disruption_budget": {
                            "default": true,
                            "type": "boolean"
                          },
                          "node_readiness_label": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "type": "object"
                          },
                          "pod_role_label": {
                            "default": "spilo-role",
                            "type": "string"
                          },
                          "oauth_token_secret_name": {
                            "default": "postgresql-operator",
                            "type": "string"
                          },
                          "pod_antiaffinity_topology_key": {
                            "default": "kubernetes.io/hostname",
                            "type": "string"
                          },
                          "pod_management_policy": {
                            "default": "ordered_ready",
                            "enum": ["ordered_ready", "parallel"],
                            "type": "string"
                          },
                          "enable_init_containers": {
                            "default": true,
                            "type": "boolean"
                          },
                          "custom_pod_annotations": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "type": "object"
                          },
                          "pod_environment_secret": {
                            "type": "string"
                          },
                          "inherited_labels": {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "inherited_annotations": {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "node_readiness_label_merge": {
                            "enum": ["AND", "OR"],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "kubernetes_use_configmaps": {
                        "default": false,
                        "type": "boolean"
                      },
                      "load_balancer": {
                        "properties": {
                          "custom_service_annotations": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "type": "object"
                          },
                          "db_hosted_zone": {
                            "default": "db.example.com",
                            "type": "string"
                          },
                          "enable_master_load_balancer": {
                            "default": true,
                            "type": "boolean"
                          },
                          "enable_master_pooler_load_balancer": {
                            "default": false,
                            "type": "boolean"
                          },
                          "enable_replica_load_balancer": {
                            "default": false,
                            "type": "boolean"
                          },
                          "enable_replica_pooler_load_balancer": {
                            "default": false,
                            "type": "boolean"
                          },
                          "external_traffic_policy": {
                            "default": "Cluster",
                            "enum": ["Cluster", "Local"],
                            "type": "string"
                          },
                          "master_dns_name_format": {
                            "default": "{cluster}.{team}.{hostedzone}",
                            "type": "string"
                          },
                          "replica_dns_name_format": {
                            "default": "{cluster}-repl.{team}.{hostedzone}",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "logging_rest_api": {
                        "properties": {
                          "api_port": {
                            "default": 8080,
                            "type": "integer"
                          },
                          "cluster_history_entries": {
                            "default": 1000,
                            "type": "integer"
                          },
                          "ring_log_lines": {
                            "default": 100,
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "logical_backup": {
                        "properties": {
                          "logical_backup_docker_image": {
                            "default": "registry.opensource.zalan.do/acid/logical-backup:v1.8.2",
                            "type": "string"
                          },
                          "logical_backup_google_application_credentials": {
                            "type": "string"
                          },
                          "logical_backup_job_prefix": {
                            "default": "logical-backup-",
                            "type": "string"
                          },
                          "logical_backup_provider": {
                            "default": "s3",
                            "type": "string"
                          },
                          "logical_backup_s3_access_key_id": {
                            "type": "string"
                          },
                          "logical_backup_s3_bucket": {
                            "type": "string"
                          },
                          "logical_backup_s3_endpoint": {
                            "type": "string"
                          },
                          "logical_backup_s3_region": {
                            "type": "string"
                          },
                          "logical_backup_s3_retention_time": {
                            "type": "string"
                          },
                          "logical_backup_s3_secret_access_key": {
                            "type": "string"
                          },
                          "logical_backup_s3_sse": {
                            "type": "string"
                          },
                          "logical_backup_schedule": {
                            "default": "30 00 * * *",
                            "pattern": "^(\\d+|\\*)(/\\d+)?(\\s+(\\d+|\\*)(/\\d+)?){4}$",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "major_version_upgrade": {
                        "properties": {
                          "major_version_upgrade_mode": {
                            "default": "off",
                            "type": "string"
                          },
                          "major_version_upgrade_team_allow_list": {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "minimal_major_version": {
                            "default": "9.6",
                            "type": "string"
                          },
                          "target_major_version": {
                            "default": "14",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "max_instances": {
                        "default": -1,
                        "description": "-1 = disabled",
                        "minimum": -1,
                        "type": "integer"
                      },
                      "min_instances": {
                        "default": -1,
                        "description": "-1 = disabled",
                        "minimum": -1,
                        "type": "integer"
                      },
                      "postgres_pod_resources": {
                        "properties": {
                          "default_cpu_limit": {
                            "default": "1",
                            "pattern": "^(\\d+m|\\d+(\\.\\d{1,3})?)$",
                            "type": "string"
                          },
                          "default_cpu_request": {
                            "default": "100m",
                            "pattern": "^(\\d+m|\\d+(\\.\\d{1,3})?)$",
                            "type": "string"
                          },
                          "default_memory_limit": {
                            "default": "500Mi",
                            "pattern": "^(\\d+(e\\d+)?|\\d+(\\.\\d+)?(e\\d+)?[EPTGMK]i?)$",
                            "type": "string"
                          },
                          "default_memory_request": {
                            "default": "100Mi",
                            "pattern": "^(\\d+(e\\d+)?|\\d+(\\.\\d+)?(e\\d+)?[EPTGMK]i?)$",
                            "type": "string"
                          },
                          "min_cpu_limit": {
                            "default": "250m",
                            "pattern": "^(\\d+m|\\d+(\\.\\d{1,3})?)$",
                            "type": "string"
                          },
                          "min_memory_limit": {
                            "default": "250Mi",
                            "pattern": "^(\\d+(e\\d+)?|\\d+(\\.\\d+)?(e\\d+)?[EPTGMK]i?)$",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "repair_period": {
                        "default": "5m",
                        "type": "string"
                      },
                      "resync_period": {
                        "default": "30m",
                        "type": "string"
                      },
                      "scalyr": {
                        "properties": {
                          "scalyr_api_key": {
                            "type": "string"
                          },
                          "scalyr_cpu_limit": {
                            "default": "1",
                            "pattern": "^(\\d+m|\\d+(\\.\\d{1,3})?)$",
                            "type": "string"
                          },
                          "scalyr_cpu_request": {
                            "default": "100m",
                            "pattern": "^(\\d+m|\\d+(\\.\\d{1,3})?)$",
                            "type": "string"
                          },
                          "scalyr_image": {
                            "type": "string"
                          },
                          "scalyr_memory_limit": {
                            "default": "500Mi",
                            "pattern": "^(\\d+(e\\d+)?|\\d+(\\.\\d+)?(e\\d+)?[EPTGMK]i?)$",
                            "type": "string"
                          },
                          "scalyr_memory_request": {
                            "default": "50Mi",
                            "pattern": "^(\\d+(e\\d+)?|\\d+(\\.\\d+)?(e\\d+)?[EPTGMK]i?)$",
                            "type": "string"
                          },
                          "scalyr_server_url": {
                            "default": "https://upload.eu.scalyr.com",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "set_memory_request_to_limit": {
                        "default": false,
                        "type": "boolean"
                      },
                      "sidecar_docker_images": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "type": "object"
                      },
                      "sidecars": {
                        "items": {
                          "type": "object",
                          "x-kubernetes-preserve-unknown-fields": true
                        },
                        "nullable": true,
                        "type": "array"
                      },
                      "teams_api": {
                        "properties": {
                          "enable_admin_role_for_users": {
                            "default": true,
                            "type": "boolean"
                          },
                          "enable_postgres_team_crd": {
                            "default": true,
                            "type": "boolean"
                          },
                          "enable_postgres_team_crd_superusers": {
                            "default": false,
                            "type": "boolean"
                          },
                          "enable_team_member_deprecation": {
                            "default": false,
                            "type": "boolean"
                          },
                          "enable_team_superuser": {
                            "default": false,
                            "type": "boolean"
                          },
                          "enable_teams_api": {
                            "default": true,
                            "type": "boolean"
                          },
                          "pam_configuration": {
                            "default": "https://info.example.com/oauth2/tokeninfo?access_token= uid realm=/employees",
                            "type": "string"
                          },
                          "pam_role_name": {
                            "default": "zalandos",
                            "type": "string"
                          },
                          "postgres_superuser_teams": {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "protected_role_names": {
                            "default": ["admin", "cron_admin"],
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "role_deletion_suffix": {
                            "default": "_deleted",
                            "type": "string"
                          },
                          "team_admin_role": {
                            "default": "admin",
                            "type": "string"
                          },
                          "team_api_role_configuration": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "default": {
                              "log_statement": "all"
                            },
                            "type": "object"
                          },
                          "teams_api_url": {
                            "default": "https://teams.example.com/api/",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "timeouts": {
                        "properties": {
                          "patroni_api_check_interval": {
                            "default": "1s",
                            "type": "string"
                          },
                          "patroni_api_check_timeout": {
                            "default": "5s",
                            "type": "string"
                          },
                          "pod_deletion_wait_timeout": {
                            "default": "10m",
                            "type": "string"
                          },
                          "pod_label_wait_timeout": {
                            "default": "10m",
                            "type": "string"
                          },
                          "ready_wait_interval": {
                            "default": "4s",
                            "type": "string"
                          },
                          "ready_wait_timeout": {
                            "default": "30s",
                            "type": "string"
                          },
                          "resource_check_interval": {
                            "default": "3s",
                            "type": "string"
                          },
                          "resource_check_timeout": {
                            "default": "10m",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "users": {
                        "properties": {
                          "additional_owner_roles": {
                            "items": {
                              "type": "string"
                            },
                            "nullable": true,
                            "type": "array"
                          },
                          "enable_password_rotation": {
                            "default": false,
                            "type": "boolean"
                          },
                          "password_rotation_interval": {
                            "default": 90,
                            "type": "integer"
                          },
                          "password_rotation_user_retention": {
                            "default": 180,
                            "type": "integer"
                          },
                          "replication_username": {
                            "default": "standby",
                            "type": "string"
                          },
                          "super_username": {
                            "default": "postgres",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "workers": {
                        "default": 8,
                        "minimum": 1,
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "kind": {
                    "enum": ["OperatorConfiguration"],
                    "type": "string"
                  },
                  "status": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "type": "object"
                  }
                },
                "required": ["kind", "apiVersion", "configuration"],
                "type": "object"
              }
            },
            "served": true,
            "storage": true,
            "subresources": {
              "status": {}
            }
          }
        ]
      }
    },
    "/istio/service_account/istiod_service_account": {
      "apiVersion": "v1",
      "kind": "ServiceAccount",
      "metadata": {
        "annotations": {
          "battery/hash": "PUYINXB3NWUFQFHHMT7BWZYVZZ6C76X7F5UA4XH32W2N4LVDUPLA===="
        },
        "labels": {
          "app": "istio-base",
          "app.kubernetes.io/component": "istiod",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istio-base",
          "battery/app": "istio-base",
          "battery/component": "istiod",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "component": "istiod"
        },
        "name": "istiod-service-account",
        "namespace": "battery-istio"
      }
    },
    "/istio/validating_webhook_config/istiod_default_validator": {
      "apiVersion": "admissionregistration.k8s.io/v1",
      "kind": "ValidatingWebhookConfiguration",
      "metadata": {
        "annotations": {
          "battery/hash": "4NSXCNCUL3JD6PC5FVGVPTJ62ZQWKEAGT73P5LU3O37QFOE56AFQ===="
        },
        "labels": {
          "app": "istio-base",
          "app.kubernetes.io/component": "istiod",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istio-base",
          "battery/app": "istio-base",
          "battery/component": "istiod",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "component": "istiod",
          "istio": "istiod",
          "istio.io/rev": "default"
        },
        "name": "istiod-default-validator"
      },
      "webhooks": [
        {
          "admissionReviewVersions": ["v1beta1", "v1"],
          "clientConfig": {
            "service": {
              "name": "istiod",
              "namespace": "battery-istio",
              "path": "/validate"
            }
          },
          "failurePolicy": "Ignore",
          "name": "validation.istio.io",
          "rules": [
            {
              "apiGroups": ["security.istio.io", "networking.istio.io"],
              "apiVersions": ["*"],
              "operations": ["CREATE", "UPDATE"],
              "resources": ["*"]
            }
          ],
          "sideEffects": "None"
        }
      ]
    },
    "/istio/crd/proxyconfigs_networking_istio_io": {
      "apiVersion": "apiextensions.k8s.io/v1",
      "kind": "CustomResourceDefinition",
      "metadata": {
        "annotations": {
          "battery/hash": "VZXPQCUPSXAXPBUVFVAFO6W2K7H7JOXDGQPRGURP5WVOAYIKIPZQ===="
        },
        "labels": {
          "app": "istio-pilot",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istio-base",
          "battery/app": "istio-base",
          "battery/managed": "true",
          "battery/managed.direct": "true"
        },
        "name": "proxyconfigs.networking.istio.io"
      },
      "spec": {
        "group": "networking.istio.io",
        "names": {
          "categories": ["istio-io", "networking-istio-io"],
          "kind": "ProxyConfig",
          "listKind": "ProxyConfigList",
          "plural": "proxyconfigs",
          "singular": "proxyconfig"
        },
        "scope": "Namespaced",
        "versions": [
          {
            "name": "v1beta1",
            "schema": {
              "openAPIV3Schema": {
                "properties": {
                  "spec": {
                    "description": "Provides configuration for individual workloads. See more details at: https://istio.io/docs/reference/config/networking/proxy-config.html",
                    "properties": {
                      "concurrency": {
                        "description": "The number of worker threads to run.",
                        "nullable": true,
                        "type": "integer"
                      },
                      "environmentVariables": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Additional environment variables for the proxy.",
                        "type": "object"
                      },
                      "image": {
                        "description": "Specifies the details of the proxy image.",
                        "properties": {
                          "imageType": {
                            "description": "The image type of the image.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "selector": {
                        "description": "Optional.",
                        "properties": {
                          "matchLabels": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "status": {
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                  }
                },
                "type": "object"
              }
            },
            "served": true,
            "storage": true,
            "subresources": {
              "status": {}
            }
          }
        ]
      }
    },
    "/postgres/cluster_role/battery_postgres_pod": {
      "apiVersion": "rbac.authorization.k8s.io/v1",
      "kind": "ClusterRole",
      "metadata": {
        "annotations": {
          "battery/hash": "OUJRIS5SY3Y73UHTD36PI233JHRVY4FD3GOSSQLF3IBGVW4MW3YA===="
        },
        "labels": {
          "app": "postgres-operator",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "postgres-operator",
          "battery/app": "postgres-operator",
          "battery/managed": "true",
          "battery/managed.direct": "true"
        },
        "name": "battery-postgres-pod"
      },
      "rules": [
        {
          "apiGroups": [""],
          "resources": ["endpoints"],
          "verbs": [
            "create",
            "delete",
            "deletecollection",
            "get",
            "list",
            "patch",
            "update",
            "watch"
          ]
        },
        {
          "apiGroups": [""],
          "resources": ["pods"],
          "verbs": ["get", "list", "patch", "update", "watch"]
        },
        {
          "apiGroups": [""],
          "resources": ["services"],
          "verbs": ["create"]
        }
      ]
    },
    "/istio/horizontal_pod_autoscaler/istiod": {
      "apiVersion": "autoscaling/v2",
      "kind": "HorizontalPodAutoscaler",
      "metadata": {
        "annotations": {
          "battery/hash": "VJZY6725WGP7HLCBISTD4M5JWOYLZVCEKAFTKCVLSKMHPP4LH4QA===="
        },
        "labels": {
          "app": "istiod",
          "app.kubernetes.io/component": "istiod",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istiod",
          "battery/app": "istiod",
          "battery/component": "istiod",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "component": "istiod",
          "istio.io/rev": "default",
          "operator.istio.io/component": "Pilot"
        },
        "name": "istiod",
        "namespace": "battery-istio"
      },
      "spec": {
        "maxReplicas": 5,
        "metrics": [
          {
            "resource": {
              "name": "cpu",
              "target": {
                "averageUtilization": 80,
                "type": "Utilization"
              }
            },
            "type": "Resource"
          }
        ],
        "minReplicas": 1,
        "scaleTargetRef": {
          "apiVersion": "apps/v1",
          "kind": "Deployment",
          "name": "istiod"
        }
      }
    },
    "/istio/role_binding/istiod_battery_istio": {
      "apiVersion": "rbac.authorization.k8s.io/v1",
      "kind": "RoleBinding",
      "metadata": {
        "annotations": {
          "battery/hash": "2QV6BXOFO7REE7BP6HYGUTZJ6LYGMHKYBBJ5USIUOAHJGS6TC5VQ===="
        },
        "labels": {
          "app": "istio-base",
          "app.kubernetes.io/component": "istiod",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istio-base",
          "battery/app": "istio-base",
          "battery/component": "istiod",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "component": "istiod"
        },
        "name": "istiod-battery-istio",
        "namespace": "battery-istio"
      },
      "roleRef": {
        "apiGroup": "rbac.authorization.k8s.io",
        "kind": "Role",
        "name": "istiod-battery-istio"
      },
      "subjects": [
        {
          "kind": "ServiceAccount",
          "name": "istiod-service-account",
          "namespace": "battery-istio"
        }
      ]
    },
    "/istio/cluster_role_binding/istiod_clusterrole_battery_istio": {
      "apiVersion": "rbac.authorization.k8s.io/v1",
      "kind": "ClusterRoleBinding",
      "metadata": {
        "annotations": {
          "battery/hash": "JSBJMX6VMRGCJIIMG2AKGEPLF7PFWGBT6NSXAX7HRCW73BE7DUEQ===="
        },
        "labels": {
          "app": "istiod",
          "app.kubernetes.io/component": "istiod",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istiod",
          "battery/app": "istiod",
          "battery/component": "istiod",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "component": "istiod"
        },
        "name": "istiod-clusterrole-battery-istio"
      },
      "roleRef": {
        "apiGroup": "rbac.authorization.k8s.io",
        "kind": "ClusterRole",
        "name": "istiod-clusterrole-battery-istio"
      },
      "subjects": [
        {
          "kind": "ServiceAccount",
          "name": "istiod",
          "namespace": "battery-istio"
        }
      ]
    },
    "/postgres/postgresql_operator_config/postgres_operator": {
      "apiVersion": "acid.zalan.do/v1",
      "configuration": {
        "aws_or_gcp": {
          "aws_region": "eu-central-1",
          "enable_ebs_gp3_migration": false
        },
        "connection_pooler": {
          "connection_pooler_default_cpu_limit": "1",
          "connection_pooler_default_cpu_request": "500m",
          "connection_pooler_default_memory_limit": "100Mi",
          "connection_pooler_default_memory_request": "100Mi",
          "connection_pooler_image": "registry.opensource.zalan.do/acid/pgbouncer:master-27",
          "connection_pooler_max_db_connections": 60,
          "connection_pooler_mode": "transaction",
          "connection_pooler_number_of_instances": 2,
          "connection_pooler_schema": "pooler",
          "connection_pooler_user": "pooler"
        },
        "crd_categories": ["all"],
        "debug": {
          "debug_logging": true,
          "enable_database_access": true
        },
        "docker_image": "registry.opensource.zalan.do/acid/spilo-15:2.1-p9",
        "enable_crd_registration": false,
        "enable_lazy_spilo_upgrade": false,
        "enable_pgversion_env_var": true,
        "enable_shm_volume": true,
        "enable_spilo_wal_path_compat": false,
        "etcd_host": "",
        "kubernetes": {
          "cluster_domain": "cluster.local",
          "cluster_labels": {
            "application": "spilo"
          },
          "cluster_name_label": "cluster-name",
          "enable_cross_namespace_secret": false,
          "enable_init_containers": true,
          "enable_pod_antiaffinity": false,
          "enable_pod_disruption_budget": true,
          "enable_sidecars": true,
          "infrastructure_roles_secret_name": "postgres-operator-infrauser-config",
          "inherited_labels": [
            "battery/app",
            "app",
            "sidecar.istio.io/inject",
            "battery/owner"
          ],
          "oauth_token_secret_name": "postgres-operator",
          "pdb_name_format": "postgres-{cluster}-pdb",
          "pod_antiaffinity_topology_key": "kubernetes.io/hostname",
          "pod_management_policy": "ordered_ready",
          "pod_role_label": "spilo-role",
          "pod_service_account_name": "battery-postgres-pod",
          "pod_terminate_grace_period": "5m",
          "secret_name_template": "{username}.{cluster}.credentials.{tprkind}",
          "spilo_allow_privilege_escalation": true,
          "spilo_privileged": false,
          "storage_resize_mode": "pvc",
          "watched_namespace": "*"
        },
        "load_balancer": {
          "db_hosted_zone": "db.example.com",
          "enable_master_load_balancer": false,
          "enable_master_pooler_load_balancer": false,
          "enable_replica_load_balancer": false,
          "enable_replica_pooler_load_balancer": false,
          "external_traffic_policy": "Cluster",
          "master_dns_name_format": "{cluster}.{team}.{hostedzone}",
          "replica_dns_name_format": "{cluster}-repl.{team}.{hostedzone}"
        },
        "logging_rest_api": {
          "api_port": 8080,
          "cluster_history_entries": 1000,
          "ring_log_lines": 100
        },
        "logical_backup": {
          "logical_backup_docker_image": "registry.opensource.zalan.do/acid/logical-backup:v1.9.0-8-g645fcc01",
          "logical_backup_job_prefix": "logical-backup-",
          "logical_backup_provider": "s3",
          "logical_backup_s3_access_key_id": "",
          "logical_backup_s3_bucket": "my-bucket-url",
          "logical_backup_s3_endpoint": "",
          "logical_backup_s3_region": "",
          "logical_backup_s3_retention_time": "",
          "logical_backup_s3_secret_access_key": "",
          "logical_backup_s3_sse": "AES256",
          "logical_backup_schedule": "30 00 * * *"
        },
        "major_version_upgrade": {
          "major_version_upgrade_mode": "manual",
          "minimal_major_version": "9.6",
          "target_major_version": "14"
        },
        "max_instances": -1,
        "min_instances": -1,
        "postgres_pod_resources": {
          "default_cpu_limit": "1",
          "default_cpu_request": "100m",
          "default_memory_limit": "500Mi",
          "default_memory_request": "100Mi",
          "min_cpu_limit": "250m",
          "min_memory_limit": "250Mi"
        },
        "repair_period": "5m",
        "resync_period": "30m",
        "teams_api": {
          "enable_admin_role_for_users": false,
          "enable_postgres_team_crd": false,
          "enable_postgres_team_crd_superusers": false,
          "enable_team_member_deprecation": false,
          "enable_team_superuser": false,
          "enable_teams_api": false,
          "pam_role_name": "batteries_included",
          "postgres_superuser_teams": ["postgres_superusers"],
          "protected_role_names": ["admin", "cron_admin"],
          "role_deletion_suffix": "_deleted",
          "team_admin_role": "admin",
          "team_api_role_configuration": {
            "log_statement": "all"
          }
        },
        "timeouts": {
          "patroni_api_check_interval": "1s",
          "patroni_api_check_timeout": "5s",
          "pod_deletion_wait_timeout": "10m",
          "pod_label_wait_timeout": "10m",
          "ready_wait_interval": "3s",
          "ready_wait_timeout": "30s",
          "resource_check_interval": "3s",
          "resource_check_timeout": "10m"
        },
        "users": {
          "enable_password_rotation": false,
          "password_rotation_interval": 90,
          "password_rotation_user_retention": 180,
          "replication_username": "standby",
          "super_username": "postgres"
        },
        "workers": 8
      },
      "kind": "OperatorConfiguration",
      "metadata": {
        "annotations": {
          "battery/hash": "JL7E3LJKJQSB4K4O26NQYSPIZX4TQRCA7DROOPGTCAZUPGOZAA4A===="
        },
        "labels": {
          "app": "postgres-operator",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "postgres-operator",
          "battery/app": "postgres-operator",
          "battery/managed": "true",
          "battery/managed.direct": "true"
        },
        "name": "postgres-operator",
        "namespace": "battery-core"
      }
    },
    "/istio/pod_disruption_budget/istiod": {
      "apiVersion": "policy/v1",
      "kind": "PodDisruptionBudget",
      "metadata": {
        "annotations": {
          "battery/hash": "45YL2T2HIASBGQXE6I4LOLYID7E6OROPX3ZVO5GM27W6ONAZ5GHQ===="
        },
        "labels": {
          "app": "istiod",
          "app.kubernetes.io/component": "istiod",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istiod",
          "battery/app": "istiod",
          "battery/component": "istiod",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "component": "istiod",
          "istio": "pilot",
          "istio.io/rev": "default",
          "operator.istio.io/component": "Pilot"
        },
        "name": "istiod",
        "namespace": "battery-istio"
      },
      "spec": {
        "minAvailable": 1,
        "selector": {
          "matchLabels": {
            "app": "istiod",
            "istio": "pilot"
          }
        }
      }
    },
    "/istio/cluster_role/istio_reader_battery_istio": {
      "apiVersion": "rbac.authorization.k8s.io/v1",
      "kind": "ClusterRole",
      "metadata": {
        "annotations": {
          "battery/hash": "RS46QOIBNDPWVEQJAUVCQQVJARNG5XHWGGHJAKOPVLIRXIIG4RDA===="
        },
        "labels": {
          "app": "istio-base",
          "app.kubernetes.io/component": "istio-reader",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istio-base",
          "battery/app": "istio-base",
          "battery/component": "istio-reader",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "component": "istio-reader"
        },
        "name": "istio-reader-battery-istio"
      },
      "rules": [
        {
          "apiGroups": [
            "config.istio.io",
            "security.istio.io",
            "networking.istio.io",
            "authentication.istio.io",
            "rbac.istio.io"
          ],
          "resources": ["*"],
          "verbs": ["get", "list", "watch"]
        },
        {
          "apiGroups": [""],
          "resources": [
            "endpoints",
            "pods",
            "services",
            "nodes",
            "replicationcontrollers",
            "namespaces",
            "secrets"
          ],
          "verbs": ["get", "list", "watch"]
        },
        {
          "apiGroups": ["networking.istio.io"],
          "resources": ["workloadentries"],
          "verbs": ["get", "watch", "list"]
        },
        {
          "apiGroups": ["apiextensions.k8s.io"],
          "resources": ["customresourcedefinitions"],
          "verbs": ["get", "list", "watch"]
        },
        {
          "apiGroups": ["discovery.k8s.io"],
          "resources": ["endpointslices"],
          "verbs": ["get", "list", "watch"]
        },
        {
          "apiGroups": ["apps"],
          "resources": ["replicasets"],
          "verbs": ["get", "list", "watch"]
        },
        {
          "apiGroups": ["authentication.k8s.io"],
          "resources": ["tokenreviews"],
          "verbs": ["create"]
        },
        {
          "apiGroups": ["authorization.k8s.io"],
          "resources": ["subjectaccessreviews"],
          "verbs": ["create"]
        },
        {
          "apiGroups": ["multicluster.x-k8s.io"],
          "resources": ["serviceexports"],
          "verbs": ["get", "watch", "list"]
        },
        {
          "apiGroups": ["multicluster.x-k8s.io"],
          "resources": ["serviceimports"],
          "verbs": ["get", "watch", "list"]
        }
      ]
    },
    "/battery_core/namespace/battery_data": {
      "apiVersion": "v1",
      "kind": "Namespace",
      "metadata": {
        "annotations": {
          "battery/hash": "UX7IMV4TNGPBMHNGMYJNOY44XAKRRG5KH3HV5DWAHWMBD5KXFMUQ===="
        },
        "labels": {
          "app": "battery-core",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "battery-core",
          "battery/app": "battery-core",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "istio-injection": "false"
        },
        "name": "battery-data"
      }
    },
    "/istio/crd/istiooperators_install_istio_io": {
      "apiVersion": "apiextensions.k8s.io/v1",
      "kind": "CustomResourceDefinition",
      "metadata": {
        "annotations": {
          "battery/hash": "6CU7NGXHRZQO5PL72OCBDWSI6SDRAXN7SXOIWXMVO72KZGDK3OPQ===="
        },
        "labels": {
          "app": "istio-base",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istio-base",
          "battery/app": "istio-base",
          "battery/managed": "true",
          "battery/managed.direct": "true"
        },
        "name": "istiooperators.install.istio.io"
      },
      "spec": {
        "conversion": {
          "strategy": "None"
        },
        "group": "install.istio.io",
        "names": {
          "kind": "IstioOperator",
          "listKind": "IstioOperatorList",
          "plural": "istiooperators",
          "shortNames": ["iop", "io"],
          "singular": "istiooperator"
        },
        "scope": "Namespaced",
        "versions": [
          {
            "additionalPrinterColumns": [
              {
                "description": "Istio control plane revision",
                "jsonPath": ".spec.revision",
                "name": "Revision",
                "type": "string"
              },
              {
                "description": "IOP current state",
                "jsonPath": ".status.status",
                "name": "Status",
                "type": "string"
              },
              {
                "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
                "jsonPath": ".metadata.creationTimestamp",
                "name": "Age",
                "type": "date"
              }
            ],
            "name": "v1alpha1",
            "schema": {
              "openAPIV3Schema": {
                "type": "object",
                "x-kubernetes-preserve-unknown-fields": true
              }
            },
            "served": true,
            "storage": true,
            "subresources": {
              "status": {}
            }
          }
        ]
      }
    },
    "/istio/cluster_role_binding/istio_reader_battery_istio": {
      "apiVersion": "rbac.authorization.k8s.io/v1",
      "kind": "ClusterRoleBinding",
      "metadata": {
        "annotations": {
          "battery/hash": "SLYS3O26TKVVUHIYYHNCWXW243INBQQFAKK3OJ7HMOUXBB5WS6RQ===="
        },
        "labels": {
          "app": "istio-base",
          "app.kubernetes.io/component": "istio-reader",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istio-base",
          "battery/app": "istio-base",
          "battery/component": "istio-reader",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "component": "istio-reader"
        },
        "name": "istio-reader-battery-istio"
      },
      "roleRef": {
        "apiGroup": "rbac.authorization.k8s.io",
        "kind": "ClusterRole",
        "name": "istio-reader-battery-istio"
      },
      "subjects": [
        {
          "kind": "ServiceAccount",
          "name": "istio-reader-service-account",
          "namespace": "battery-istio"
        }
      ]
    },
    "/istio/namespace/battery_istio": {
      "apiVersion": "v1",
      "kind": "Namespace",
      "metadata": {
        "annotations": {
          "battery/hash": "RI3TYK3IK3QLM3EVNOAGIDXYRUCFN4AYMXXGAK5W5F33XV7HNJLA===="
        },
        "labels": {
          "app": "istio-base",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istio-base",
          "battery/app": "istio-base",
          "battery/managed": "true",
          "battery/managed.direct": "true"
        },
        "name": "battery-istio"
      }
    },
    "/postgres/config_map/postgres_operator_infrauser_config": {
      "apiVersion": "v1",
      "data": {
        "batterydbuser": "user_flags:\n  - createdb\n  - superuser\n  - login"
      },
      "kind": "ConfigMap",
      "metadata": {
        "annotations": {
          "battery/hash": "YE4OWH4MHFKG4M2YZMPSU5CFFBIZ4WZ3LBDTJNDUXAYWY2SWOAUA===="
        },
        "labels": {
          "app": "postgres-operator",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "postgres-operator",
          "battery/app": "postgres-operator",
          "battery/managed": "true",
          "battery/managed.direct": "true"
        },
        "name": "postgres-operator-infrauser-config",
        "namespace": "battery-core"
      }
    },
    "/istio/cluster_role_binding/istio_reader_clusterrole_battery_istio": {
      "apiVersion": "rbac.authorization.k8s.io/v1",
      "kind": "ClusterRoleBinding",
      "metadata": {
        "annotations": {
          "battery/hash": "QSOVR5VUDAZDBKQW7ESGOBCRIPFFYTG6CF6ZEYVZVVLLNKBSHGNA===="
        },
        "labels": {
          "app": "istiod",
          "app.kubernetes.io/component": "istio-reader",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istiod",
          "battery/app": "istiod",
          "battery/component": "istio-reader",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "component": "istio-reader"
        },
        "name": "istio-reader-clusterrole-battery-istio"
      },
      "roleRef": {
        "apiGroup": "rbac.authorization.k8s.io",
        "kind": "ClusterRole",
        "name": "istio-reader-clusterrole-battery-istio"
      },
      "subjects": [
        {
          "kind": "ServiceAccount",
          "name": "istio-reader-service-account",
          "namespace": "battery-istio"
        }
      ]
    },
    "/istio/crd/destinationrules_networking_istio_io": {
      "apiVersion": "apiextensions.k8s.io/v1",
      "kind": "CustomResourceDefinition",
      "metadata": {
        "annotations": {
          "battery/hash": "7VD3OEEZZZD2E22EHFNBC2WAEVIZYFDRILXPSQTRJ37DJLYTYFJQ===="
        },
        "labels": {
          "app": "istio-pilot",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istio-base",
          "battery/app": "istio-base",
          "battery/managed": "true",
          "battery/managed.direct": "true"
        },
        "name": "destinationrules.networking.istio.io"
      },
      "spec": {
        "group": "networking.istio.io",
        "names": {
          "categories": ["istio-io", "networking-istio-io"],
          "kind": "DestinationRule",
          "listKind": "DestinationRuleList",
          "plural": "destinationrules",
          "shortNames": ["dr"],
          "singular": "destinationrule"
        },
        "scope": "Namespaced",
        "versions": [
          {
            "additionalPrinterColumns": [
              {
                "description": "The name of a service from the service registry",
                "jsonPath": ".spec.host",
                "name": "Host",
                "type": "string"
              },
              {
                "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
                "jsonPath": ".metadata.creationTimestamp",
                "name": "Age",
                "type": "date"
              }
            ],
            "name": "v1alpha3",
            "schema": {
              "openAPIV3Schema": {
                "properties": {
                  "spec": {
                    "description": "Configuration affecting load balancing, outlier detection, etc. See more details at: https://istio.io/docs/reference/config/networking/destination-rule.html",
                    "properties": {
                      "exportTo": {
                        "description": "A list of namespaces to which this destination rule is exported.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "host": {
                        "description": "The name of a service from the service registry.",
                        "type": "string"
                      },
                      "subsets": {
                        "items": {
                          "properties": {
                            "labels": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "type": "object"
                            },
                            "name": {
                              "description": "Name of the subset.",
                              "type": "string"
                            },
                            "trafficPolicy": {
                              "description": "Traffic policies that apply to this subset.",
                              "properties": {
                                "connectionPool": {
                                  "properties": {
                                    "http": {
                                      "description": "HTTP connection pool settings.",
                                      "properties": {
                                        "h2UpgradePolicy": {
                                          "description": "Specify if http1.1 connection should be upgraded to http2 for the associated destination.",
                                          "enum": [
                                            "DEFAULT",
                                            "DO_NOT_UPGRADE",
                                            "UPGRADE"
                                          ],
                                          "type": "string"
                                        },
                                        "http1MaxPendingRequests": {
                                          "format": "int32",
                                          "type": "integer"
                                        },
                                        "http2MaxRequests": {
                                          "description": "Maximum number of active requests to a destination.",
                                          "format": "int32",
                                          "type": "integer"
                                        },
                                        "idleTimeout": {
                                          "description": "The idle timeout for upstream connection pool connections.",
                                          "type": "string"
                                        },
                                        "maxRequestsPerConnection": {
                                          "description": "Maximum number of requests per connection to a backend.",
                                          "format": "int32",
                                          "type": "integer"
                                        },
                                        "maxRetries": {
                                          "format": "int32",
                                          "type": "integer"
                                        },
                                        "useClientProtocol": {
                                          "description": "If set to true, client protocol will be preserved while initiating connection to backend.",
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "tcp": {
                                      "description": "Settings common to both HTTP and TCP upstream connections.",
                                      "properties": {
                                        "connectTimeout": {
                                          "description": "TCP connection timeout.",
                                          "type": "string"
                                        },
                                        "maxConnectionDuration": {
                                          "description": "The maximum duration of a connection.",
                                          "type": "string"
                                        },
                                        "maxConnections": {
                                          "description": "Maximum number of HTTP1 /TCP connections to a destination host.",
                                          "format": "int32",
                                          "type": "integer"
                                        },
                                        "tcpKeepalive": {
                                          "description": "If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.",
                                          "properties": {
                                            "interval": {
                                              "description": "The time duration between keep-alive probes.",
                                              "type": "string"
                                            },
                                            "probes": {
                                              "type": "integer"
                                            },
                                            "time": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                },
                                "loadBalancer": {
                                  "description": "Settings controlling the load balancer algorithms.",
                                  "oneOf": [
                                    {
                                      "not": {
                                        "anyOf": [
                                          {
                                            "required": ["simple"]
                                          },
                                          {
                                            "properties": {
                                              "consistentHash": {
                                                "oneOf": [
                                                  {
                                                    "not": {
                                                      "anyOf": [
                                                        {
                                                          "required": [
                                                            "httpHeaderName"
                                                          ]
                                                        },
                                                        {
                                                          "required": [
                                                            "httpCookie"
                                                          ]
                                                        },
                                                        {
                                                          "required": [
                                                            "useSourceIp"
                                                          ]
                                                        },
                                                        {
                                                          "required": [
                                                            "httpQueryParameterName"
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "required": [
                                                      "httpHeaderName"
                                                    ]
                                                  },
                                                  {
                                                    "required": ["httpCookie"]
                                                  },
                                                  {
                                                    "required": ["useSourceIp"]
                                                  },
                                                  {
                                                    "required": [
                                                      "httpQueryParameterName"
                                                    ]
                                                  }
                                                ]
                                              }
                                            },
                                            "required": ["consistentHash"]
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "required": ["simple"]
                                    },
                                    {
                                      "properties": {
                                        "consistentHash": {
                                          "oneOf": [
                                            {
                                              "not": {
                                                "anyOf": [
                                                  {
                                                    "required": [
                                                      "httpHeaderName"
                                                    ]
                                                  },
                                                  {
                                                    "required": ["httpCookie"]
                                                  },
                                                  {
                                                    "required": ["useSourceIp"]
                                                  },
                                                  {
                                                    "required": [
                                                      "httpQueryParameterName"
                                                    ]
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "required": ["httpHeaderName"]
                                            },
                                            {
                                              "required": ["httpCookie"]
                                            },
                                            {
                                              "required": ["useSourceIp"]
                                            },
                                            {
                                              "required": [
                                                "httpQueryParameterName"
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      "required": ["consistentHash"]
                                    }
                                  ],
                                  "properties": {
                                    "consistentHash": {
                                      "properties": {
                                        "httpCookie": {
                                          "description": "Hash based on HTTP cookie.",
                                          "properties": {
                                            "name": {
                                              "description": "Name of the cookie.",
                                              "type": "string"
                                            },
                                            "path": {
                                              "description": "Path to set for the cookie.",
                                              "type": "string"
                                            },
                                            "ttl": {
                                              "description": "Lifetime of the cookie.",
                                              "type": "string"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "httpHeaderName": {
                                          "description": "Hash based on a specific HTTP header.",
                                          "type": "string"
                                        },
                                        "httpQueryParameterName": {
                                          "description": "Hash based on a specific HTTP query parameter.",
                                          "type": "string"
                                        },
                                        "minimumRingSize": {
                                          "type": "integer"
                                        },
                                        "useSourceIp": {
                                          "description": "Hash based on the source IP address.",
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "localityLbSetting": {
                                      "properties": {
                                        "distribute": {
                                          "description": "Optional: only one of distribute, failover or failoverPriority can be set.",
                                          "items": {
                                            "properties": {
                                              "from": {
                                                "description": "Originating locality, '/' separated, e.g.",
                                                "type": "string"
                                              },
                                              "to": {
                                                "additionalProperties": {
                                                  "type": "integer"
                                                },
                                                "description": "Map of upstream localities to traffic distribution weights.",
                                                "type": "object"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": "array"
                                        },
                                        "enabled": {
                                          "description": "enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.",
                                          "nullable": true,
                                          "type": "boolean"
                                        },
                                        "failover": {
                                          "description": "Optional: only one of distribute, failover or failoverPriority can be set.",
                                          "items": {
                                            "properties": {
                                              "from": {
                                                "description": "Originating region.",
                                                "type": "string"
                                              },
                                              "to": {
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": "array"
                                        },
                                        "failoverPriority": {
                                          "description": "failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.",
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "simple": {
                                      "enum": [
                                        "UNSPECIFIED",
                                        "LEAST_CONN",
                                        "RANDOM",
                                        "PASSTHROUGH",
                                        "ROUND_ROBIN",
                                        "LEAST_REQUEST"
                                      ],
                                      "type": "string"
                                    },
                                    "warmupDurationSecs": {
                                      "description": "Represents the warmup duration of Service.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "outlierDetection": {
                                  "properties": {
                                    "baseEjectionTime": {
                                      "description": "Minimum ejection duration.",
                                      "type": "string"
                                    },
                                    "consecutive5xxErrors": {
                                      "description": "Number of 5xx errors before a host is ejected from the connection pool.",
                                      "nullable": true,
                                      "type": "integer"
                                    },
                                    "consecutiveErrors": {
                                      "format": "int32",
                                      "type": "integer"
                                    },
                                    "consecutiveGatewayErrors": {
                                      "description": "Number of gateway errors before a host is ejected from the connection pool.",
                                      "nullable": true,
                                      "type": "integer"
                                    },
                                    "consecutiveLocalOriginFailures": {
                                      "nullable": true,
                                      "type": "integer"
                                    },
                                    "interval": {
                                      "description": "Time interval between ejection sweep analysis.",
                                      "type": "string"
                                    },
                                    "maxEjectionPercent": {
                                      "format": "int32",
                                      "type": "integer"
                                    },
                                    "minHealthPercent": {
                                      "format": "int32",
                                      "type": "integer"
                                    },
                                    "splitExternalLocalOriginErrors": {
                                      "description": "Determines whether to distinguish local origin failures from external errors.",
                                      "type": "boolean"
                                    }
                                  },
                                  "type": "object"
                                },
                                "portLevelSettings": {
                                  "description": "Traffic policies specific to individual ports.",
                                  "items": {
                                    "properties": {
                                      "connectionPool": {
                                        "properties": {
                                          "http": {
                                            "description": "HTTP connection pool settings.",
                                            "properties": {
                                              "h2UpgradePolicy": {
                                                "description": "Specify if http1.1 connection should be upgraded to http2 for the associated destination.",
                                                "enum": [
                                                  "DEFAULT",
                                                  "DO_NOT_UPGRADE",
                                                  "UPGRADE"
                                                ],
                                                "type": "string"
                                              },
                                              "http1MaxPendingRequests": {
                                                "format": "int32",
                                                "type": "integer"
                                              },
                                              "http2MaxRequests": {
                                                "description": "Maximum number of active requests to a destination.",
                                                "format": "int32",
                                                "type": "integer"
                                              },
                                              "idleTimeout": {
                                                "description": "The idle timeout for upstream connection pool connections.",
                                                "type": "string"
                                              },
                                              "maxRequestsPerConnection": {
                                                "description": "Maximum number of requests per connection to a backend.",
                                                "format": "int32",
                                                "type": "integer"
                                              },
                                              "maxRetries": {
                                                "format": "int32",
                                                "type": "integer"
                                              },
                                              "useClientProtocol": {
                                                "description": "If set to true, client protocol will be preserved while initiating connection to backend.",
                                                "type": "boolean"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "tcp": {
                                            "description": "Settings common to both HTTP and TCP upstream connections.",
                                            "properties": {
                                              "connectTimeout": {
                                                "description": "TCP connection timeout.",
                                                "type": "string"
                                              },
                                              "maxConnectionDuration": {
                                                "description": "The maximum duration of a connection.",
                                                "type": "string"
                                              },
                                              "maxConnections": {
                                                "description": "Maximum number of HTTP1 /TCP connections to a destination host.",
                                                "format": "int32",
                                                "type": "integer"
                                              },
                                              "tcpKeepalive": {
                                                "description": "If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.",
                                                "properties": {
                                                  "interval": {
                                                    "description": "The time duration between keep-alive probes.",
                                                    "type": "string"
                                                  },
                                                  "probes": {
                                                    "type": "integer"
                                                  },
                                                  "time": {
                                                    "type": "string"
                                                  }
                                                },
                                                "type": "object"
                                              }
                                            },
                                            "type": "object"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "loadBalancer": {
                                        "description": "Settings controlling the load balancer algorithms.",
                                        "oneOf": [
                                          {
                                            "not": {
                                              "anyOf": [
                                                {
                                                  "required": ["simple"]
                                                },
                                                {
                                                  "properties": {
                                                    "consistentHash": {
                                                      "oneOf": [
                                                        {
                                                          "not": {
                                                            "anyOf": [
                                                              {
                                                                "required": [
                                                                  "httpHeaderName"
                                                                ]
                                                              },
                                                              {
                                                                "required": [
                                                                  "httpCookie"
                                                                ]
                                                              },
                                                              {
                                                                "required": [
                                                                  "useSourceIp"
                                                                ]
                                                              },
                                                              {
                                                                "required": [
                                                                  "httpQueryParameterName"
                                                                ]
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        {
                                                          "required": [
                                                            "httpHeaderName"
                                                          ]
                                                        },
                                                        {
                                                          "required": [
                                                            "httpCookie"
                                                          ]
                                                        },
                                                        {
                                                          "required": [
                                                            "useSourceIp"
                                                          ]
                                                        },
                                                        {
                                                          "required": [
                                                            "httpQueryParameterName"
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "required": ["consistentHash"]
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "required": ["simple"]
                                          },
                                          {
                                            "properties": {
                                              "consistentHash": {
                                                "oneOf": [
                                                  {
                                                    "not": {
                                                      "anyOf": [
                                                        {
                                                          "required": [
                                                            "httpHeaderName"
                                                          ]
                                                        },
                                                        {
                                                          "required": [
                                                            "httpCookie"
                                                          ]
                                                        },
                                                        {
                                                          "required": [
                                                            "useSourceIp"
                                                          ]
                                                        },
                                                        {
                                                          "required": [
                                                            "httpQueryParameterName"
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "required": [
                                                      "httpHeaderName"
                                                    ]
                                                  },
                                                  {
                                                    "required": ["httpCookie"]
                                                  },
                                                  {
                                                    "required": ["useSourceIp"]
                                                  },
                                                  {
                                                    "required": [
                                                      "httpQueryParameterName"
                                                    ]
                                                  }
                                                ]
                                              }
                                            },
                                            "required": ["consistentHash"]
                                          }
                                        ],
                                        "properties": {
                                          "consistentHash": {
                                            "properties": {
                                              "httpCookie": {
                                                "description": "Hash based on HTTP cookie.",
                                                "properties": {
                                                  "name": {
                                                    "description": "Name of the cookie.",
                                                    "type": "string"
                                                  },
                                                  "path": {
                                                    "description": "Path to set for the cookie.",
                                                    "type": "string"
                                                  },
                                                  "ttl": {
                                                    "description": "Lifetime of the cookie.",
                                                    "type": "string"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "httpHeaderName": {
                                                "description": "Hash based on a specific HTTP header.",
                                                "type": "string"
                                              },
                                              "httpQueryParameterName": {
                                                "description": "Hash based on a specific HTTP query parameter.",
                                                "type": "string"
                                              },
                                              "minimumRingSize": {
                                                "type": "integer"
                                              },
                                              "useSourceIp": {
                                                "description": "Hash based on the source IP address.",
                                                "type": "boolean"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "localityLbSetting": {
                                            "properties": {
                                              "distribute": {
                                                "description": "Optional: only one of distribute, failover or failoverPriority can be set.",
                                                "items": {
                                                  "properties": {
                                                    "from": {
                                                      "description": "Originating locality, '/' separated, e.g.",
                                                      "type": "string"
                                                    },
                                                    "to": {
                                                      "additionalProperties": {
                                                        "type": "integer"
                                                      },
                                                      "description": "Map of upstream localities to traffic distribution weights.",
                                                      "type": "object"
                                                    }
                                                  },
                                                  "type": "object"
                                                },
                                                "type": "array"
                                              },
                                              "enabled": {
                                                "description": "enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.",
                                                "nullable": true,
                                                "type": "boolean"
                                              },
                                              "failover": {
                                                "description": "Optional: only one of distribute, failover or failoverPriority can be set.",
                                                "items": {
                                                  "properties": {
                                                    "from": {
                                                      "description": "Originating region.",
                                                      "type": "string"
                                                    },
                                                    "to": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "type": "object"
                                                },
                                                "type": "array"
                                              },
                                              "failoverPriority": {
                                                "description": "failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "type": "array"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "simple": {
                                            "enum": [
                                              "UNSPECIFIED",
                                              "LEAST_CONN",
                                              "RANDOM",
                                              "PASSTHROUGH",
                                              "ROUND_ROBIN",
                                              "LEAST_REQUEST"
                                            ],
                                            "type": "string"
                                          },
                                          "warmupDurationSecs": {
                                            "description": "Represents the warmup duration of Service.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "outlierDetection": {
                                        "properties": {
                                          "baseEjectionTime": {
                                            "description": "Minimum ejection duration.",
                                            "type": "string"
                                          },
                                          "consecutive5xxErrors": {
                                            "description": "Number of 5xx errors before a host is ejected from the connection pool.",
                                            "nullable": true,
                                            "type": "integer"
                                          },
                                          "consecutiveErrors": {
                                            "format": "int32",
                                            "type": "integer"
                                          },
                                          "consecutiveGatewayErrors": {
                                            "description": "Number of gateway errors before a host is ejected from the connection pool.",
                                            "nullable": true,
                                            "type": "integer"
                                          },
                                          "consecutiveLocalOriginFailures": {
                                            "nullable": true,
                                            "type": "integer"
                                          },
                                          "interval": {
                                            "description": "Time interval between ejection sweep analysis.",
                                            "type": "string"
                                          },
                                          "maxEjectionPercent": {
                                            "format": "int32",
                                            "type": "integer"
                                          },
                                          "minHealthPercent": {
                                            "format": "int32",
                                            "type": "integer"
                                          },
                                          "splitExternalLocalOriginErrors": {
                                            "description": "Determines whether to distinguish local origin failures from external errors.",
                                            "type": "boolean"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "port": {
                                        "properties": {
                                          "number": {
                                            "type": "integer"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "tls": {
                                        "description": "TLS related settings for connections to the upstream service.",
                                        "properties": {
                                          "caCertificates": {
                                            "type": "string"
                                          },
                                          "clientCertificate": {
                                            "description": "REQUIRED if mode is `MUTUAL`.",
                                            "type": "string"
                                          },
                                          "credentialName": {
                                            "type": "string"
                                          },
                                          "insecureSkipVerify": {
                                            "nullable": true,
                                            "type": "boolean"
                                          },
                                          "mode": {
                                            "enum": [
                                              "DISABLE",
                                              "SIMPLE",
                                              "MUTUAL",
                                              "ISTIO_MUTUAL"
                                            ],
                                            "type": "string"
                                          },
                                          "privateKey": {
                                            "description": "REQUIRED if mode is `MUTUAL`.",
                                            "type": "string"
                                          },
                                          "sni": {
                                            "description": "SNI string to present to the server during TLS handshake.",
                                            "type": "string"
                                          },
                                          "subjectAltNames": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "tls": {
                                  "description": "TLS related settings for connections to the upstream service.",
                                  "properties": {
                                    "caCertificates": {
                                      "type": "string"
                                    },
                                    "clientCertificate": {
                                      "description": "REQUIRED if mode is `MUTUAL`.",
                                      "type": "string"
                                    },
                                    "credentialName": {
                                      "type": "string"
                                    },
                                    "insecureSkipVerify": {
                                      "nullable": true,
                                      "type": "boolean"
                                    },
                                    "mode": {
                                      "enum": [
                                        "DISABLE",
                                        "SIMPLE",
                                        "MUTUAL",
                                        "ISTIO_MUTUAL"
                                      ],
                                      "type": "string"
                                    },
                                    "privateKey": {
                                      "description": "REQUIRED if mode is `MUTUAL`.",
                                      "type": "string"
                                    },
                                    "sni": {
                                      "description": "SNI string to present to the server during TLS handshake.",
                                      "type": "string"
                                    },
                                    "subjectAltNames": {
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                },
                                "tunnel": {
                                  "properties": {
                                    "protocol": {
                                      "description": "Specifies which protocol to use for tunneling the downstream connection.",
                                      "type": "string"
                                    },
                                    "targetHost": {
                                      "description": "Specifies a host to which the downstream connection is tunneled.",
                                      "type": "string"
                                    },
                                    "targetPort": {
                                      "description": "Specifies a port to which the downstream connection is tunneled.",
                                      "type": "integer"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "trafficPolicy": {
                        "properties": {
                          "connectionPool": {
                            "properties": {
                              "http": {
                                "description": "HTTP connection pool settings.",
                                "properties": {
                                  "h2UpgradePolicy": {
                                    "description": "Specify if http1.1 connection should be upgraded to http2 for the associated destination.",
                                    "enum": [
                                      "DEFAULT",
                                      "DO_NOT_UPGRADE",
                                      "UPGRADE"
                                    ],
                                    "type": "string"
                                  },
                                  "http1MaxPendingRequests": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "http2MaxRequests": {
                                    "description": "Maximum number of active requests to a destination.",
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "idleTimeout": {
                                    "description": "The idle timeout for upstream connection pool connections.",
                                    "type": "string"
                                  },
                                  "maxRequestsPerConnection": {
                                    "description": "Maximum number of requests per connection to a backend.",
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "maxRetries": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "useClientProtocol": {
                                    "description": "If set to true, client protocol will be preserved while initiating connection to backend.",
                                    "type": "boolean"
                                  }
                                },
                                "type": "object"
                              },
                              "tcp": {
                                "description": "Settings common to both HTTP and TCP upstream connections.",
                                "properties": {
                                  "connectTimeout": {
                                    "description": "TCP connection timeout.",
                                    "type": "string"
                                  },
                                  "maxConnectionDuration": {
                                    "description": "The maximum duration of a connection.",
                                    "type": "string"
                                  },
                                  "maxConnections": {
                                    "description": "Maximum number of HTTP1 /TCP connections to a destination host.",
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "tcpKeepalive": {
                                    "description": "If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.",
                                    "properties": {
                                      "interval": {
                                        "description": "The time duration between keep-alive probes.",
                                        "type": "string"
                                      },
                                      "probes": {
                                        "type": "integer"
                                      },
                                      "time": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "loadBalancer": {
                            "description": "Settings controlling the load balancer algorithms.",
                            "oneOf": [
                              {
                                "not": {
                                  "anyOf": [
                                    {
                                      "required": ["simple"]
                                    },
                                    {
                                      "properties": {
                                        "consistentHash": {
                                          "oneOf": [
                                            {
                                              "not": {
                                                "anyOf": [
                                                  {
                                                    "required": [
                                                      "httpHeaderName"
                                                    ]
                                                  },
                                                  {
                                                    "required": ["httpCookie"]
                                                  },
                                                  {
                                                    "required": ["useSourceIp"]
                                                  },
                                                  {
                                                    "required": [
                                                      "httpQueryParameterName"
                                                    ]
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "required": ["httpHeaderName"]
                                            },
                                            {
                                              "required": ["httpCookie"]
                                            },
                                            {
                                              "required": ["useSourceIp"]
                                            },
                                            {
                                              "required": [
                                                "httpQueryParameterName"
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      "required": ["consistentHash"]
                                    }
                                  ]
                                }
                              },
                              {
                                "required": ["simple"]
                              },
                              {
                                "properties": {
                                  "consistentHash": {
                                    "oneOf": [
                                      {
                                        "not": {
                                          "anyOf": [
                                            {
                                              "required": ["httpHeaderName"]
                                            },
                                            {
                                              "required": ["httpCookie"]
                                            },
                                            {
                                              "required": ["useSourceIp"]
                                            },
                                            {
                                              "required": [
                                                "httpQueryParameterName"
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "required": ["httpHeaderName"]
                                      },
                                      {
                                        "required": ["httpCookie"]
                                      },
                                      {
                                        "required": ["useSourceIp"]
                                      },
                                      {
                                        "required": ["httpQueryParameterName"]
                                      }
                                    ]
                                  }
                                },
                                "required": ["consistentHash"]
                              }
                            ],
                            "properties": {
                              "consistentHash": {
                                "properties": {
                                  "httpCookie": {
                                    "description": "Hash based on HTTP cookie.",
                                    "properties": {
                                      "name": {
                                        "description": "Name of the cookie.",
                                        "type": "string"
                                      },
                                      "path": {
                                        "description": "Path to set for the cookie.",
                                        "type": "string"
                                      },
                                      "ttl": {
                                        "description": "Lifetime of the cookie.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "httpHeaderName": {
                                    "description": "Hash based on a specific HTTP header.",
                                    "type": "string"
                                  },
                                  "httpQueryParameterName": {
                                    "description": "Hash based on a specific HTTP query parameter.",
                                    "type": "string"
                                  },
                                  "minimumRingSize": {
                                    "type": "integer"
                                  },
                                  "useSourceIp": {
                                    "description": "Hash based on the source IP address.",
                                    "type": "boolean"
                                  }
                                },
                                "type": "object"
                              },
                              "localityLbSetting": {
                                "properties": {
                                  "distribute": {
                                    "description": "Optional: only one of distribute, failover or failoverPriority can be set.",
                                    "items": {
                                      "properties": {
                                        "from": {
                                          "description": "Originating locality, '/' separated, e.g.",
                                          "type": "string"
                                        },
                                        "to": {
                                          "additionalProperties": {
                                            "type": "integer"
                                          },
                                          "description": "Map of upstream localities to traffic distribution weights.",
                                          "type": "object"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "enabled": {
                                    "description": "enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.",
                                    "nullable": true,
                                    "type": "boolean"
                                  },
                                  "failover": {
                                    "description": "Optional: only one of distribute, failover or failoverPriority can be set.",
                                    "items": {
                                      "properties": {
                                        "from": {
                                          "description": "Originating region.",
                                          "type": "string"
                                        },
                                        "to": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "failoverPriority": {
                                    "description": "failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object"
                              },
                              "simple": {
                                "enum": [
                                  "UNSPECIFIED",
                                  "LEAST_CONN",
                                  "RANDOM",
                                  "PASSTHROUGH",
                                  "ROUND_ROBIN",
                                  "LEAST_REQUEST"
                                ],
                                "type": "string"
                              },
                              "warmupDurationSecs": {
                                "description": "Represents the warmup duration of Service.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "outlierDetection": {
                            "properties": {
                              "baseEjectionTime": {
                                "description": "Minimum ejection duration.",
                                "type": "string"
                              },
                              "consecutive5xxErrors": {
                                "description": "Number of 5xx errors before a host is ejected from the connection pool.",
                                "nullable": true,
                                "type": "integer"
                              },
                              "consecutiveErrors": {
                                "format": "int32",
                                "type": "integer"
                              },
                              "consecutiveGatewayErrors": {
                                "description": "Number of gateway errors before a host is ejected from the connection pool.",
                                "nullable": true,
                                "type": "integer"
                              },
                              "consecutiveLocalOriginFailures": {
                                "nullable": true,
                                "type": "integer"
                              },
                              "interval": {
                                "description": "Time interval between ejection sweep analysis.",
                                "type": "string"
                              },
                              "maxEjectionPercent": {
                                "format": "int32",
                                "type": "integer"
                              },
                              "minHealthPercent": {
                                "format": "int32",
                                "type": "integer"
                              },
                              "splitExternalLocalOriginErrors": {
                                "description": "Determines whether to distinguish local origin failures from external errors.",
                                "type": "boolean"
                              }
                            },
                            "type": "object"
                          },
                          "portLevelSettings": {
                            "description": "Traffic policies specific to individual ports.",
                            "items": {
                              "properties": {
                                "connectionPool": {
                                  "properties": {
                                    "http": {
                                      "description": "HTTP connection pool settings.",
                                      "properties": {
                                        "h2UpgradePolicy": {
                                          "description": "Specify if http1.1 connection should be upgraded to http2 for the associated destination.",
                                          "enum": [
                                            "DEFAULT",
                                            "DO_NOT_UPGRADE",
                                            "UPGRADE"
                                          ],
                                          "type": "string"
                                        },
                                        "http1MaxPendingRequests": {
                                          "format": "int32",
                                          "type": "integer"
                                        },
                                        "http2MaxRequests": {
                                          "description": "Maximum number of active requests to a destination.",
                                          "format": "int32",
                                          "type": "integer"
                                        },
                                        "idleTimeout": {
                                          "description": "The idle timeout for upstream connection pool connections.",
                                          "type": "string"
                                        },
                                        "maxRequestsPerConnection": {
                                          "description": "Maximum number of requests per connection to a backend.",
                                          "format": "int32",
                                          "type": "integer"
                                        },
                                        "maxRetries": {
                                          "format": "int32",
                                          "type": "integer"
                                        },
                                        "useClientProtocol": {
                                          "description": "If set to true, client protocol will be preserved while initiating connection to backend.",
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "tcp": {
                                      "description": "Settings common to both HTTP and TCP upstream connections.",
                                      "properties": {
                                        "connectTimeout": {
                                          "description": "TCP connection timeout.",
                                          "type": "string"
                                        },
                                        "maxConnectionDuration": {
                                          "description": "The maximum duration of a connection.",
                                          "type": "string"
                                        },
                                        "maxConnections": {
                                          "description": "Maximum number of HTTP1 /TCP connections to a destination host.",
                                          "format": "int32",
                                          "type": "integer"
                                        },
                                        "tcpKeepalive": {
                                          "description": "If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.",
                                          "properties": {
                                            "interval": {
                                              "description": "The time duration between keep-alive probes.",
                                              "type": "string"
                                            },
                                            "probes": {
                                              "type": "integer"
                                            },
                                            "time": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                },
                                "loadBalancer": {
                                  "description": "Settings controlling the load balancer algorithms.",
                                  "oneOf": [
                                    {
                                      "not": {
                                        "anyOf": [
                                          {
                                            "required": ["simple"]
                                          },
                                          {
                                            "properties": {
                                              "consistentHash": {
                                                "oneOf": [
                                                  {
                                                    "not": {
                                                      "anyOf": [
                                                        {
                                                          "required": [
                                                            "httpHeaderName"
                                                          ]
                                                        },
                                                        {
                                                          "required": [
                                                            "httpCookie"
                                                          ]
                                                        },
                                                        {
                                                          "required": [
                                                            "useSourceIp"
                                                          ]
                                                        },
                                                        {
                                                          "required": [
                                                            "httpQueryParameterName"
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "required": [
                                                      "httpHeaderName"
                                                    ]
                                                  },
                                                  {
                                                    "required": ["httpCookie"]
                                                  },
                                                  {
                                                    "required": ["useSourceIp"]
                                                  },
                                                  {
                                                    "required": [
                                                      "httpQueryParameterName"
                                                    ]
                                                  }
                                                ]
                                              }
                                            },
                                            "required": ["consistentHash"]
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "required": ["simple"]
                                    },
                                    {
                                      "properties": {
                                        "consistentHash": {
                                          "oneOf": [
                                            {
                                              "not": {
                                                "anyOf": [
                                                  {
                                                    "required": [
                                                      "httpHeaderName"
                                                    ]
                                                  },
                                                  {
                                                    "required": ["httpCookie"]
                                                  },
                                                  {
                                                    "required": ["useSourceIp"]
                                                  },
                                                  {
                                                    "required": [
                                                      "httpQueryParameterName"
                                                    ]
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "required": ["httpHeaderName"]
                                            },
                                            {
                                              "required": ["httpCookie"]
                                            },
                                            {
                                              "required": ["useSourceIp"]
                                            },
                                            {
                                              "required": [
                                                "httpQueryParameterName"
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      "required": ["consistentHash"]
                                    }
                                  ],
                                  "properties": {
                                    "consistentHash": {
                                      "properties": {
                                        "httpCookie": {
                                          "description": "Hash based on HTTP cookie.",
                                          "properties": {
                                            "name": {
                                              "description": "Name of the cookie.",
                                              "type": "string"
                                            },
                                            "path": {
                                              "description": "Path to set for the cookie.",
                                              "type": "string"
                                            },
                                            "ttl": {
                                              "description": "Lifetime of the cookie.",
                                              "type": "string"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "httpHeaderName": {
                                          "description": "Hash based on a specific HTTP header.",
                                          "type": "string"
                                        },
                                        "httpQueryParameterName": {
                                          "description": "Hash based on a specific HTTP query parameter.",
                                          "type": "string"
                                        },
                                        "minimumRingSize": {
                                          "type": "integer"
                                        },
                                        "useSourceIp": {
                                          "description": "Hash based on the source IP address.",
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "localityLbSetting": {
                                      "properties": {
                                        "distribute": {
                                          "description": "Optional: only one of distribute, failover or failoverPriority can be set.",
                                          "items": {
                                            "properties": {
                                              "from": {
                                                "description": "Originating locality, '/' separated, e.g.",
                                                "type": "string"
                                              },
                                              "to": {
                                                "additionalProperties": {
                                                  "type": "integer"
                                                },
                                                "description": "Map of upstream localities to traffic distribution weights.",
                                                "type": "object"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": "array"
                                        },
                                        "enabled": {
                                          "description": "enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.",
                                          "nullable": true,
                                          "type": "boolean"
                                        },
                                        "failover": {
                                          "description": "Optional: only one of distribute, failover or failoverPriority can be set.",
                                          "items": {
                                            "properties": {
                                              "from": {
                                                "description": "Originating region.",
                                                "type": "string"
                                              },
                                              "to": {
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": "array"
                                        },
                                        "failoverPriority": {
                                          "description": "failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.",
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "simple": {
                                      "enum": [
                                        "UNSPECIFIED",
                                        "LEAST_CONN",
                                        "RANDOM",
                                        "PASSTHROUGH",
                                        "ROUND_ROBIN",
                                        "LEAST_REQUEST"
                                      ],
                                      "type": "string"
                                    },
                                    "warmupDurationSecs": {
                                      "description": "Represents the warmup duration of Service.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "outlierDetection": {
                                  "properties": {
                                    "baseEjectionTime": {
                                      "description": "Minimum ejection duration.",
                                      "type": "string"
                                    },
                                    "consecutive5xxErrors": {
                                      "description": "Number of 5xx errors before a host is ejected from the connection pool.",
                                      "nullable": true,
                                      "type": "integer"
                                    },
                                    "consecutiveErrors": {
                                      "format": "int32",
                                      "type": "integer"
                                    },
                                    "consecutiveGatewayErrors": {
                                      "description": "Number of gateway errors before a host is ejected from the connection pool.",
                                      "nullable": true,
                                      "type": "integer"
                                    },
                                    "consecutiveLocalOriginFailures": {
                                      "nullable": true,
                                      "type": "integer"
                                    },
                                    "interval": {
                                      "description": "Time interval between ejection sweep analysis.",
                                      "type": "string"
                                    },
                                    "maxEjectionPercent": {
                                      "format": "int32",
                                      "type": "integer"
                                    },
                                    "minHealthPercent": {
                                      "format": "int32",
                                      "type": "integer"
                                    },
                                    "splitExternalLocalOriginErrors": {
                                      "description": "Determines whether to distinguish local origin failures from external errors.",
                                      "type": "boolean"
                                    }
                                  },
                                  "type": "object"
                                },
                                "port": {
                                  "properties": {
                                    "number": {
                                      "type": "integer"
                                    }
                                  },
                                  "type": "object"
                                },
                                "tls": {
                                  "description": "TLS related settings for connections to the upstream service.",
                                  "properties": {
                                    "caCertificates": {
                                      "type": "string"
                                    },
                                    "clientCertificate": {
                                      "description": "REQUIRED if mode is `MUTUAL`.",
                                      "type": "string"
                                    },
                                    "credentialName": {
                                      "type": "string"
                                    },
                                    "insecureSkipVerify": {
                                      "nullable": true,
                                      "type": "boolean"
                                    },
                                    "mode": {
                                      "enum": [
                                        "DISABLE",
                                        "SIMPLE",
                                        "MUTUAL",
                                        "ISTIO_MUTUAL"
                                      ],
                                      "type": "string"
                                    },
                                    "privateKey": {
                                      "description": "REQUIRED if mode is `MUTUAL`.",
                                      "type": "string"
                                    },
                                    "sni": {
                                      "description": "SNI string to present to the server during TLS handshake.",
                                      "type": "string"
                                    },
                                    "subjectAltNames": {
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "tls": {
                            "description": "TLS related settings for connections to the upstream service.",
                            "properties": {
                              "caCertificates": {
                                "type": "string"
                              },
                              "clientCertificate": {
                                "description": "REQUIRED if mode is `MUTUAL`.",
                                "type": "string"
                              },
                              "credentialName": {
                                "type": "string"
                              },
                              "insecureSkipVerify": {
                                "nullable": true,
                                "type": "boolean"
                              },
                              "mode": {
                                "enum": [
                                  "DISABLE",
                                  "SIMPLE",
                                  "MUTUAL",
                                  "ISTIO_MUTUAL"
                                ],
                                "type": "string"
                              },
                              "privateKey": {
                                "description": "REQUIRED if mode is `MUTUAL`.",
                                "type": "string"
                              },
                              "sni": {
                                "description": "SNI string to present to the server during TLS handshake.",
                                "type": "string"
                              },
                              "subjectAltNames": {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          },
                          "tunnel": {
                            "properties": {
                              "protocol": {
                                "description": "Specifies which protocol to use for tunneling the downstream connection.",
                                "type": "string"
                              },
                              "targetHost": {
                                "description": "Specifies a host to which the downstream connection is tunneled.",
                                "type": "string"
                              },
                              "targetPort": {
                                "description": "Specifies a port to which the downstream connection is tunneled.",
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "workloadSelector": {
                        "properties": {
                          "matchLabels": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "status": {
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                  }
                },
                "type": "object"
              }
            },
            "served": true,
            "storage": true,
            "subresources": {
              "status": {}
            }
          },
          {
            "additionalPrinterColumns": [
              {
                "description": "The name of a service from the service registry",
                "jsonPath": ".spec.host",
                "name": "Host",
                "type": "string"
              },
              {
                "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
                "jsonPath": ".metadata.creationTimestamp",
                "name": "Age",
                "type": "date"
              }
            ],
            "name": "v1beta1",
            "schema": {
              "openAPIV3Schema": {
                "properties": {
                  "spec": {
                    "description": "Configuration affecting load balancing, outlier detection, etc. See more details at: https://istio.io/docs/reference/config/networking/destination-rule.html",
                    "properties": {
                      "exportTo": {
                        "description": "A list of namespaces to which this destination rule is exported.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "host": {
                        "description": "The name of a service from the service registry.",
                        "type": "string"
                      },
                      "subsets": {
                        "items": {
                          "properties": {
                            "labels": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "type": "object"
                            },
                            "name": {
                              "description": "Name of the subset.",
                              "type": "string"
                            },
                            "trafficPolicy": {
                              "description": "Traffic policies that apply to this subset.",
                              "properties": {
                                "connectionPool": {
                                  "properties": {
                                    "http": {
                                      "description": "HTTP connection pool settings.",
                                      "properties": {
                                        "h2UpgradePolicy": {
                                          "description": "Specify if http1.1 connection should be upgraded to http2 for the associated destination.",
                                          "enum": [
                                            "DEFAULT",
                                            "DO_NOT_UPGRADE",
                                            "UPGRADE"
                                          ],
                                          "type": "string"
                                        },
                                        "http1MaxPendingRequests": {
                                          "format": "int32",
                                          "type": "integer"
                                        },
                                        "http2MaxRequests": {
                                          "description": "Maximum number of active requests to a destination.",
                                          "format": "int32",
                                          "type": "integer"
                                        },
                                        "idleTimeout": {
                                          "description": "The idle timeout for upstream connection pool connections.",
                                          "type": "string"
                                        },
                                        "maxRequestsPerConnection": {
                                          "description": "Maximum number of requests per connection to a backend.",
                                          "format": "int32",
                                          "type": "integer"
                                        },
                                        "maxRetries": {
                                          "format": "int32",
                                          "type": "integer"
                                        },
                                        "useClientProtocol": {
                                          "description": "If set to true, client protocol will be preserved while initiating connection to backend.",
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "tcp": {
                                      "description": "Settings common to both HTTP and TCP upstream connections.",
                                      "properties": {
                                        "connectTimeout": {
                                          "description": "TCP connection timeout.",
                                          "type": "string"
                                        },
                                        "maxConnectionDuration": {
                                          "description": "The maximum duration of a connection.",
                                          "type": "string"
                                        },
                                        "maxConnections": {
                                          "description": "Maximum number of HTTP1 /TCP connections to a destination host.",
                                          "format": "int32",
                                          "type": "integer"
                                        },
                                        "tcpKeepalive": {
                                          "description": "If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.",
                                          "properties": {
                                            "interval": {
                                              "description": "The time duration between keep-alive probes.",
                                              "type": "string"
                                            },
                                            "probes": {
                                              "type": "integer"
                                            },
                                            "time": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                },
                                "loadBalancer": {
                                  "description": "Settings controlling the load balancer algorithms.",
                                  "oneOf": [
                                    {
                                      "not": {
                                        "anyOf": [
                                          {
                                            "required": ["simple"]
                                          },
                                          {
                                            "properties": {
                                              "consistentHash": {
                                                "oneOf": [
                                                  {
                                                    "not": {
                                                      "anyOf": [
                                                        {
                                                          "required": [
                                                            "httpHeaderName"
                                                          ]
                                                        },
                                                        {
                                                          "required": [
                                                            "httpCookie"
                                                          ]
                                                        },
                                                        {
                                                          "required": [
                                                            "useSourceIp"
                                                          ]
                                                        },
                                                        {
                                                          "required": [
                                                            "httpQueryParameterName"
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "required": [
                                                      "httpHeaderName"
                                                    ]
                                                  },
                                                  {
                                                    "required": ["httpCookie"]
                                                  },
                                                  {
                                                    "required": ["useSourceIp"]
                                                  },
                                                  {
                                                    "required": [
                                                      "httpQueryParameterName"
                                                    ]
                                                  }
                                                ]
                                              }
                                            },
                                            "required": ["consistentHash"]
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "required": ["simple"]
                                    },
                                    {
                                      "properties": {
                                        "consistentHash": {
                                          "oneOf": [
                                            {
                                              "not": {
                                                "anyOf": [
                                                  {
                                                    "required": [
                                                      "httpHeaderName"
                                                    ]
                                                  },
                                                  {
                                                    "required": ["httpCookie"]
                                                  },
                                                  {
                                                    "required": ["useSourceIp"]
                                                  },
                                                  {
                                                    "required": [
                                                      "httpQueryParameterName"
                                                    ]
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "required": ["httpHeaderName"]
                                            },
                                            {
                                              "required": ["httpCookie"]
                                            },
                                            {
                                              "required": ["useSourceIp"]
                                            },
                                            {
                                              "required": [
                                                "httpQueryParameterName"
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      "required": ["consistentHash"]
                                    }
                                  ],
                                  "properties": {
                                    "consistentHash": {
                                      "properties": {
                                        "httpCookie": {
                                          "description": "Hash based on HTTP cookie.",
                                          "properties": {
                                            "name": {
                                              "description": "Name of the cookie.",
                                              "type": "string"
                                            },
                                            "path": {
                                              "description": "Path to set for the cookie.",
                                              "type": "string"
                                            },
                                            "ttl": {
                                              "description": "Lifetime of the cookie.",
                                              "type": "string"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "httpHeaderName": {
                                          "description": "Hash based on a specific HTTP header.",
                                          "type": "string"
                                        },
                                        "httpQueryParameterName": {
                                          "description": "Hash based on a specific HTTP query parameter.",
                                          "type": "string"
                                        },
                                        "minimumRingSize": {
                                          "type": "integer"
                                        },
                                        "useSourceIp": {
                                          "description": "Hash based on the source IP address.",
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "localityLbSetting": {
                                      "properties": {
                                        "distribute": {
                                          "description": "Optional: only one of distribute, failover or failoverPriority can be set.",
                                          "items": {
                                            "properties": {
                                              "from": {
                                                "description": "Originating locality, '/' separated, e.g.",
                                                "type": "string"
                                              },
                                              "to": {
                                                "additionalProperties": {
                                                  "type": "integer"
                                                },
                                                "description": "Map of upstream localities to traffic distribution weights.",
                                                "type": "object"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": "array"
                                        },
                                        "enabled": {
                                          "description": "enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.",
                                          "nullable": true,
                                          "type": "boolean"
                                        },
                                        "failover": {
                                          "description": "Optional: only one of distribute, failover or failoverPriority can be set.",
                                          "items": {
                                            "properties": {
                                              "from": {
                                                "description": "Originating region.",
                                                "type": "string"
                                              },
                                              "to": {
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": "array"
                                        },
                                        "failoverPriority": {
                                          "description": "failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.",
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "simple": {
                                      "enum": [
                                        "UNSPECIFIED",
                                        "LEAST_CONN",
                                        "RANDOM",
                                        "PASSTHROUGH",
                                        "ROUND_ROBIN",
                                        "LEAST_REQUEST"
                                      ],
                                      "type": "string"
                                    },
                                    "warmupDurationSecs": {
                                      "description": "Represents the warmup duration of Service.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "outlierDetection": {
                                  "properties": {
                                    "baseEjectionTime": {
                                      "description": "Minimum ejection duration.",
                                      "type": "string"
                                    },
                                    "consecutive5xxErrors": {
                                      "description": "Number of 5xx errors before a host is ejected from the connection pool.",
                                      "nullable": true,
                                      "type": "integer"
                                    },
                                    "consecutiveErrors": {
                                      "format": "int32",
                                      "type": "integer"
                                    },
                                    "consecutiveGatewayErrors": {
                                      "description": "Number of gateway errors before a host is ejected from the connection pool.",
                                      "nullable": true,
                                      "type": "integer"
                                    },
                                    "consecutiveLocalOriginFailures": {
                                      "nullable": true,
                                      "type": "integer"
                                    },
                                    "interval": {
                                      "description": "Time interval between ejection sweep analysis.",
                                      "type": "string"
                                    },
                                    "maxEjectionPercent": {
                                      "format": "int32",
                                      "type": "integer"
                                    },
                                    "minHealthPercent": {
                                      "format": "int32",
                                      "type": "integer"
                                    },
                                    "splitExternalLocalOriginErrors": {
                                      "description": "Determines whether to distinguish local origin failures from external errors.",
                                      "type": "boolean"
                                    }
                                  },
                                  "type": "object"
                                },
                                "portLevelSettings": {
                                  "description": "Traffic policies specific to individual ports.",
                                  "items": {
                                    "properties": {
                                      "connectionPool": {
                                        "properties": {
                                          "http": {
                                            "description": "HTTP connection pool settings.",
                                            "properties": {
                                              "h2UpgradePolicy": {
                                                "description": "Specify if http1.1 connection should be upgraded to http2 for the associated destination.",
                                                "enum": [
                                                  "DEFAULT",
                                                  "DO_NOT_UPGRADE",
                                                  "UPGRADE"
                                                ],
                                                "type": "string"
                                              },
                                              "http1MaxPendingRequests": {
                                                "format": "int32",
                                                "type": "integer"
                                              },
                                              "http2MaxRequests": {
                                                "description": "Maximum number of active requests to a destination.",
                                                "format": "int32",
                                                "type": "integer"
                                              },
                                              "idleTimeout": {
                                                "description": "The idle timeout for upstream connection pool connections.",
                                                "type": "string"
                                              },
                                              "maxRequestsPerConnection": {
                                                "description": "Maximum number of requests per connection to a backend.",
                                                "format": "int32",
                                                "type": "integer"
                                              },
                                              "maxRetries": {
                                                "format": "int32",
                                                "type": "integer"
                                              },
                                              "useClientProtocol": {
                                                "description": "If set to true, client protocol will be preserved while initiating connection to backend.",
                                                "type": "boolean"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "tcp": {
                                            "description": "Settings common to both HTTP and TCP upstream connections.",
                                            "properties": {
                                              "connectTimeout": {
                                                "description": "TCP connection timeout.",
                                                "type": "string"
                                              },
                                              "maxConnectionDuration": {
                                                "description": "The maximum duration of a connection.",
                                                "type": "string"
                                              },
                                              "maxConnections": {
                                                "description": "Maximum number of HTTP1 /TCP connections to a destination host.",
                                                "format": "int32",
                                                "type": "integer"
                                              },
                                              "tcpKeepalive": {
                                                "description": "If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.",
                                                "properties": {
                                                  "interval": {
                                                    "description": "The time duration between keep-alive probes.",
                                                    "type": "string"
                                                  },
                                                  "probes": {
                                                    "type": "integer"
                                                  },
                                                  "time": {
                                                    "type": "string"
                                                  }
                                                },
                                                "type": "object"
                                              }
                                            },
                                            "type": "object"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "loadBalancer": {
                                        "description": "Settings controlling the load balancer algorithms.",
                                        "oneOf": [
                                          {
                                            "not": {
                                              "anyOf": [
                                                {
                                                  "required": ["simple"]
                                                },
                                                {
                                                  "properties": {
                                                    "consistentHash": {
                                                      "oneOf": [
                                                        {
                                                          "not": {
                                                            "anyOf": [
                                                              {
                                                                "required": [
                                                                  "httpHeaderName"
                                                                ]
                                                              },
                                                              {
                                                                "required": [
                                                                  "httpCookie"
                                                                ]
                                                              },
                                                              {
                                                                "required": [
                                                                  "useSourceIp"
                                                                ]
                                                              },
                                                              {
                                                                "required": [
                                                                  "httpQueryParameterName"
                                                                ]
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        {
                                                          "required": [
                                                            "httpHeaderName"
                                                          ]
                                                        },
                                                        {
                                                          "required": [
                                                            "httpCookie"
                                                          ]
                                                        },
                                                        {
                                                          "required": [
                                                            "useSourceIp"
                                                          ]
                                                        },
                                                        {
                                                          "required": [
                                                            "httpQueryParameterName"
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "required": ["consistentHash"]
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "required": ["simple"]
                                          },
                                          {
                                            "properties": {
                                              "consistentHash": {
                                                "oneOf": [
                                                  {
                                                    "not": {
                                                      "anyOf": [
                                                        {
                                                          "required": [
                                                            "httpHeaderName"
                                                          ]
                                                        },
                                                        {
                                                          "required": [
                                                            "httpCookie"
                                                          ]
                                                        },
                                                        {
                                                          "required": [
                                                            "useSourceIp"
                                                          ]
                                                        },
                                                        {
                                                          "required": [
                                                            "httpQueryParameterName"
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "required": [
                                                      "httpHeaderName"
                                                    ]
                                                  },
                                                  {
                                                    "required": ["httpCookie"]
                                                  },
                                                  {
                                                    "required": ["useSourceIp"]
                                                  },
                                                  {
                                                    "required": [
                                                      "httpQueryParameterName"
                                                    ]
                                                  }
                                                ]
                                              }
                                            },
                                            "required": ["consistentHash"]
                                          }
                                        ],
                                        "properties": {
                                          "consistentHash": {
                                            "properties": {
                                              "httpCookie": {
                                                "description": "Hash based on HTTP cookie.",
                                                "properties": {
                                                  "name": {
                                                    "description": "Name of the cookie.",
                                                    "type": "string"
                                                  },
                                                  "path": {
                                                    "description": "Path to set for the cookie.",
                                                    "type": "string"
                                                  },
                                                  "ttl": {
                                                    "description": "Lifetime of the cookie.",
                                                    "type": "string"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "httpHeaderName": {
                                                "description": "Hash based on a specific HTTP header.",
                                                "type": "string"
                                              },
                                              "httpQueryParameterName": {
                                                "description": "Hash based on a specific HTTP query parameter.",
                                                "type": "string"
                                              },
                                              "minimumRingSize": {
                                                "type": "integer"
                                              },
                                              "useSourceIp": {
                                                "description": "Hash based on the source IP address.",
                                                "type": "boolean"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "localityLbSetting": {
                                            "properties": {
                                              "distribute": {
                                                "description": "Optional: only one of distribute, failover or failoverPriority can be set.",
                                                "items": {
                                                  "properties": {
                                                    "from": {
                                                      "description": "Originating locality, '/' separated, e.g.",
                                                      "type": "string"
                                                    },
                                                    "to": {
                                                      "additionalProperties": {
                                                        "type": "integer"
                                                      },
                                                      "description": "Map of upstream localities to traffic distribution weights.",
                                                      "type": "object"
                                                    }
                                                  },
                                                  "type": "object"
                                                },
                                                "type": "array"
                                              },
                                              "enabled": {
                                                "description": "enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.",
                                                "nullable": true,
                                                "type": "boolean"
                                              },
                                              "failover": {
                                                "description": "Optional: only one of distribute, failover or failoverPriority can be set.",
                                                "items": {
                                                  "properties": {
                                                    "from": {
                                                      "description": "Originating region.",
                                                      "type": "string"
                                                    },
                                                    "to": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "type": "object"
                                                },
                                                "type": "array"
                                              },
                                              "failoverPriority": {
                                                "description": "failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "type": "array"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "simple": {
                                            "enum": [
                                              "UNSPECIFIED",
                                              "LEAST_CONN",
                                              "RANDOM",
                                              "PASSTHROUGH",
                                              "ROUND_ROBIN",
                                              "LEAST_REQUEST"
                                            ],
                                            "type": "string"
                                          },
                                          "warmupDurationSecs": {
                                            "description": "Represents the warmup duration of Service.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "outlierDetection": {
                                        "properties": {
                                          "baseEjectionTime": {
                                            "description": "Minimum ejection duration.",
                                            "type": "string"
                                          },
                                          "consecutive5xxErrors": {
                                            "description": "Number of 5xx errors before a host is ejected from the connection pool.",
                                            "nullable": true,
                                            "type": "integer"
                                          },
                                          "consecutiveErrors": {
                                            "format": "int32",
                                            "type": "integer"
                                          },
                                          "consecutiveGatewayErrors": {
                                            "description": "Number of gateway errors before a host is ejected from the connection pool.",
                                            "nullable": true,
                                            "type": "integer"
                                          },
                                          "consecutiveLocalOriginFailures": {
                                            "nullable": true,
                                            "type": "integer"
                                          },
                                          "interval": {
                                            "description": "Time interval between ejection sweep analysis.",
                                            "type": "string"
                                          },
                                          "maxEjectionPercent": {
                                            "format": "int32",
                                            "type": "integer"
                                          },
                                          "minHealthPercent": {
                                            "format": "int32",
                                            "type": "integer"
                                          },
                                          "splitExternalLocalOriginErrors": {
                                            "description": "Determines whether to distinguish local origin failures from external errors.",
                                            "type": "boolean"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "port": {
                                        "properties": {
                                          "number": {
                                            "type": "integer"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "tls": {
                                        "description": "TLS related settings for connections to the upstream service.",
                                        "properties": {
                                          "caCertificates": {
                                            "type": "string"
                                          },
                                          "clientCertificate": {
                                            "description": "REQUIRED if mode is `MUTUAL`.",
                                            "type": "string"
                                          },
                                          "credentialName": {
                                            "type": "string"
                                          },
                                          "insecureSkipVerify": {
                                            "nullable": true,
                                            "type": "boolean"
                                          },
                                          "mode": {
                                            "enum": [
                                              "DISABLE",
                                              "SIMPLE",
                                              "MUTUAL",
                                              "ISTIO_MUTUAL"
                                            ],
                                            "type": "string"
                                          },
                                          "privateKey": {
                                            "description": "REQUIRED if mode is `MUTUAL`.",
                                            "type": "string"
                                          },
                                          "sni": {
                                            "description": "SNI string to present to the server during TLS handshake.",
                                            "type": "string"
                                          },
                                          "subjectAltNames": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "tls": {
                                  "description": "TLS related settings for connections to the upstream service.",
                                  "properties": {
                                    "caCertificates": {
                                      "type": "string"
                                    },
                                    "clientCertificate": {
                                      "description": "REQUIRED if mode is `MUTUAL`.",
                                      "type": "string"
                                    },
                                    "credentialName": {
                                      "type": "string"
                                    },
                                    "insecureSkipVerify": {
                                      "nullable": true,
                                      "type": "boolean"
                                    },
                                    "mode": {
                                      "enum": [
                                        "DISABLE",
                                        "SIMPLE",
                                        "MUTUAL",
                                        "ISTIO_MUTUAL"
                                      ],
                                      "type": "string"
                                    },
                                    "privateKey": {
                                      "description": "REQUIRED if mode is `MUTUAL`.",
                                      "type": "string"
                                    },
                                    "sni": {
                                      "description": "SNI string to present to the server during TLS handshake.",
                                      "type": "string"
                                    },
                                    "subjectAltNames": {
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                },
                                "tunnel": {
                                  "properties": {
                                    "protocol": {
                                      "description": "Specifies which protocol to use for tunneling the downstream connection.",
                                      "type": "string"
                                    },
                                    "targetHost": {
                                      "description": "Specifies a host to which the downstream connection is tunneled.",
                                      "type": "string"
                                    },
                                    "targetPort": {
                                      "description": "Specifies a port to which the downstream connection is tunneled.",
                                      "type": "integer"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "trafficPolicy": {
                        "properties": {
                          "connectionPool": {
                            "properties": {
                              "http": {
                                "description": "HTTP connection pool settings.",
                                "properties": {
                                  "h2UpgradePolicy": {
                                    "description": "Specify if http1.1 connection should be upgraded to http2 for the associated destination.",
                                    "enum": [
                                      "DEFAULT",
                                      "DO_NOT_UPGRADE",
                                      "UPGRADE"
                                    ],
                                    "type": "string"
                                  },
                                  "http1MaxPendingRequests": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "http2MaxRequests": {
                                    "description": "Maximum number of active requests to a destination.",
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "idleTimeout": {
                                    "description": "The idle timeout for upstream connection pool connections.",
                                    "type": "string"
                                  },
                                  "maxRequestsPerConnection": {
                                    "description": "Maximum number of requests per connection to a backend.",
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "maxRetries": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "useClientProtocol": {
                                    "description": "If set to true, client protocol will be preserved while initiating connection to backend.",
                                    "type": "boolean"
                                  }
                                },
                                "type": "object"
                              },
                              "tcp": {
                                "description": "Settings common to both HTTP and TCP upstream connections.",
                                "properties": {
                                  "connectTimeout": {
                                    "description": "TCP connection timeout.",
                                    "type": "string"
                                  },
                                  "maxConnectionDuration": {
                                    "description": "The maximum duration of a connection.",
                                    "type": "string"
                                  },
                                  "maxConnections": {
                                    "description": "Maximum number of HTTP1 /TCP connections to a destination host.",
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "tcpKeepalive": {
                                    "description": "If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.",
                                    "properties": {
                                      "interval": {
                                        "description": "The time duration between keep-alive probes.",
                                        "type": "string"
                                      },
                                      "probes": {
                                        "type": "integer"
                                      },
                                      "time": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "loadBalancer": {
                            "description": "Settings controlling the load balancer algorithms.",
                            "oneOf": [
                              {
                                "not": {
                                  "anyOf": [
                                    {
                                      "required": ["simple"]
                                    },
                                    {
                                      "properties": {
                                        "consistentHash": {
                                          "oneOf": [
                                            {
                                              "not": {
                                                "anyOf": [
                                                  {
                                                    "required": [
                                                      "httpHeaderName"
                                                    ]
                                                  },
                                                  {
                                                    "required": ["httpCookie"]
                                                  },
                                                  {
                                                    "required": ["useSourceIp"]
                                                  },
                                                  {
                                                    "required": [
                                                      "httpQueryParameterName"
                                                    ]
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "required": ["httpHeaderName"]
                                            },
                                            {
                                              "required": ["httpCookie"]
                                            },
                                            {
                                              "required": ["useSourceIp"]
                                            },
                                            {
                                              "required": [
                                                "httpQueryParameterName"
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      "required": ["consistentHash"]
                                    }
                                  ]
                                }
                              },
                              {
                                "required": ["simple"]
                              },
                              {
                                "properties": {
                                  "consistentHash": {
                                    "oneOf": [
                                      {
                                        "not": {
                                          "anyOf": [
                                            {
                                              "required": ["httpHeaderName"]
                                            },
                                            {
                                              "required": ["httpCookie"]
                                            },
                                            {
                                              "required": ["useSourceIp"]
                                            },
                                            {
                                              "required": [
                                                "httpQueryParameterName"
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "required": ["httpHeaderName"]
                                      },
                                      {
                                        "required": ["httpCookie"]
                                      },
                                      {
                                        "required": ["useSourceIp"]
                                      },
                                      {
                                        "required": ["httpQueryParameterName"]
                                      }
                                    ]
                                  }
                                },
                                "required": ["consistentHash"]
                              }
                            ],
                            "properties": {
                              "consistentHash": {
                                "properties": {
                                  "httpCookie": {
                                    "description": "Hash based on HTTP cookie.",
                                    "properties": {
                                      "name": {
                                        "description": "Name of the cookie.",
                                        "type": "string"
                                      },
                                      "path": {
                                        "description": "Path to set for the cookie.",
                                        "type": "string"
                                      },
                                      "ttl": {
                                        "description": "Lifetime of the cookie.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "httpHeaderName": {
                                    "description": "Hash based on a specific HTTP header.",
                                    "type": "string"
                                  },
                                  "httpQueryParameterName": {
                                    "description": "Hash based on a specific HTTP query parameter.",
                                    "type": "string"
                                  },
                                  "minimumRingSize": {
                                    "type": "integer"
                                  },
                                  "useSourceIp": {
                                    "description": "Hash based on the source IP address.",
                                    "type": "boolean"
                                  }
                                },
                                "type": "object"
                              },
                              "localityLbSetting": {
                                "properties": {
                                  "distribute": {
                                    "description": "Optional: only one of distribute, failover or failoverPriority can be set.",
                                    "items": {
                                      "properties": {
                                        "from": {
                                          "description": "Originating locality, '/' separated, e.g.",
                                          "type": "string"
                                        },
                                        "to": {
                                          "additionalProperties": {
                                            "type": "integer"
                                          },
                                          "description": "Map of upstream localities to traffic distribution weights.",
                                          "type": "object"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "enabled": {
                                    "description": "enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.",
                                    "nullable": true,
                                    "type": "boolean"
                                  },
                                  "failover": {
                                    "description": "Optional: only one of distribute, failover or failoverPriority can be set.",
                                    "items": {
                                      "properties": {
                                        "from": {
                                          "description": "Originating region.",
                                          "type": "string"
                                        },
                                        "to": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "failoverPriority": {
                                    "description": "failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object"
                              },
                              "simple": {
                                "enum": [
                                  "UNSPECIFIED",
                                  "LEAST_CONN",
                                  "RANDOM",
                                  "PASSTHROUGH",
                                  "ROUND_ROBIN",
                                  "LEAST_REQUEST"
                                ],
                                "type": "string"
                              },
                              "warmupDurationSecs": {
                                "description": "Represents the warmup duration of Service.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "outlierDetection": {
                            "properties": {
                              "baseEjectionTime": {
                                "description": "Minimum ejection duration.",
                                "type": "string"
                              },
                              "consecutive5xxErrors": {
                                "description": "Number of 5xx errors before a host is ejected from the connection pool.",
                                "nullable": true,
                                "type": "integer"
                              },
                              "consecutiveErrors": {
                                "format": "int32",
                                "type": "integer"
                              },
                              "consecutiveGatewayErrors": {
                                "description": "Number of gateway errors before a host is ejected from the connection pool.",
                                "nullable": true,
                                "type": "integer"
                              },
                              "consecutiveLocalOriginFailures": {
                                "nullable": true,
                                "type": "integer"
                              },
                              "interval": {
                                "description": "Time interval between ejection sweep analysis.",
                                "type": "string"
                              },
                              "maxEjectionPercent": {
                                "format": "int32",
                                "type": "integer"
                              },
                              "minHealthPercent": {
                                "format": "int32",
                                "type": "integer"
                              },
                              "splitExternalLocalOriginErrors": {
                                "description": "Determines whether to distinguish local origin failures from external errors.",
                                "type": "boolean"
                              }
                            },
                            "type": "object"
                          },
                          "portLevelSettings": {
                            "description": "Traffic policies specific to individual ports.",
                            "items": {
                              "properties": {
                                "connectionPool": {
                                  "properties": {
                                    "http": {
                                      "description": "HTTP connection pool settings.",
                                      "properties": {
                                        "h2UpgradePolicy": {
                                          "description": "Specify if http1.1 connection should be upgraded to http2 for the associated destination.",
                                          "enum": [
                                            "DEFAULT",
                                            "DO_NOT_UPGRADE",
                                            "UPGRADE"
                                          ],
                                          "type": "string"
                                        },
                                        "http1MaxPendingRequests": {
                                          "format": "int32",
                                          "type": "integer"
                                        },
                                        "http2MaxRequests": {
                                          "description": "Maximum number of active requests to a destination.",
                                          "format": "int32",
                                          "type": "integer"
                                        },
                                        "idleTimeout": {
                                          "description": "The idle timeout for upstream connection pool connections.",
                                          "type": "string"
                                        },
                                        "maxRequestsPerConnection": {
                                          "description": "Maximum number of requests per connection to a backend.",
                                          "format": "int32",
                                          "type": "integer"
                                        },
                                        "maxRetries": {
                                          "format": "int32",
                                          "type": "integer"
                                        },
                                        "useClientProtocol": {
                                          "description": "If set to true, client protocol will be preserved while initiating connection to backend.",
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "tcp": {
                                      "description": "Settings common to both HTTP and TCP upstream connections.",
                                      "properties": {
                                        "connectTimeout": {
                                          "description": "TCP connection timeout.",
                                          "type": "string"
                                        },
                                        "maxConnectionDuration": {
                                          "description": "The maximum duration of a connection.",
                                          "type": "string"
                                        },
                                        "maxConnections": {
                                          "description": "Maximum number of HTTP1 /TCP connections to a destination host.",
                                          "format": "int32",
                                          "type": "integer"
                                        },
                                        "tcpKeepalive": {
                                          "description": "If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.",
                                          "properties": {
                                            "interval": {
                                              "description": "The time duration between keep-alive probes.",
                                              "type": "string"
                                            },
                                            "probes": {
                                              "type": "integer"
                                            },
                                            "time": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                },
                                "loadBalancer": {
                                  "description": "Settings controlling the load balancer algorithms.",
                                  "oneOf": [
                                    {
                                      "not": {
                                        "anyOf": [
                                          {
                                            "required": ["simple"]
                                          },
                                          {
                                            "properties": {
                                              "consistentHash": {
                                                "oneOf": [
                                                  {
                                                    "not": {
                                                      "anyOf": [
                                                        {
                                                          "required": [
                                                            "httpHeaderName"
                                                          ]
                                                        },
                                                        {
                                                          "required": [
                                                            "httpCookie"
                                                          ]
                                                        },
                                                        {
                                                          "required": [
                                                            "useSourceIp"
                                                          ]
                                                        },
                                                        {
                                                          "required": [
                                                            "httpQueryParameterName"
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "required": [
                                                      "httpHeaderName"
                                                    ]
                                                  },
                                                  {
                                                    "required": ["httpCookie"]
                                                  },
                                                  {
                                                    "required": ["useSourceIp"]
                                                  },
                                                  {
                                                    "required": [
                                                      "httpQueryParameterName"
                                                    ]
                                                  }
                                                ]
                                              }
                                            },
                                            "required": ["consistentHash"]
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "required": ["simple"]
                                    },
                                    {
                                      "properties": {
                                        "consistentHash": {
                                          "oneOf": [
                                            {
                                              "not": {
                                                "anyOf": [
                                                  {
                                                    "required": [
                                                      "httpHeaderName"
                                                    ]
                                                  },
                                                  {
                                                    "required": ["httpCookie"]
                                                  },
                                                  {
                                                    "required": ["useSourceIp"]
                                                  },
                                                  {
                                                    "required": [
                                                      "httpQueryParameterName"
                                                    ]
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "required": ["httpHeaderName"]
                                            },
                                            {
                                              "required": ["httpCookie"]
                                            },
                                            {
                                              "required": ["useSourceIp"]
                                            },
                                            {
                                              "required": [
                                                "httpQueryParameterName"
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      "required": ["consistentHash"]
                                    }
                                  ],
                                  "properties": {
                                    "consistentHash": {
                                      "properties": {
                                        "httpCookie": {
                                          "description": "Hash based on HTTP cookie.",
                                          "properties": {
                                            "name": {
                                              "description": "Name of the cookie.",
                                              "type": "string"
                                            },
                                            "path": {
                                              "description": "Path to set for the cookie.",
                                              "type": "string"
                                            },
                                            "ttl": {
                                              "description": "Lifetime of the cookie.",
                                              "type": "string"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "httpHeaderName": {
                                          "description": "Hash based on a specific HTTP header.",
                                          "type": "string"
                                        },
                                        "httpQueryParameterName": {
                                          "description": "Hash based on a specific HTTP query parameter.",
                                          "type": "string"
                                        },
                                        "minimumRingSize": {
                                          "type": "integer"
                                        },
                                        "useSourceIp": {
                                          "description": "Hash based on the source IP address.",
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "localityLbSetting": {
                                      "properties": {
                                        "distribute": {
                                          "description": "Optional: only one of distribute, failover or failoverPriority can be set.",
                                          "items": {
                                            "properties": {
                                              "from": {
                                                "description": "Originating locality, '/' separated, e.g.",
                                                "type": "string"
                                              },
                                              "to": {
                                                "additionalProperties": {
                                                  "type": "integer"
                                                },
                                                "description": "Map of upstream localities to traffic distribution weights.",
                                                "type": "object"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": "array"
                                        },
                                        "enabled": {
                                          "description": "enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.",
                                          "nullable": true,
                                          "type": "boolean"
                                        },
                                        "failover": {
                                          "description": "Optional: only one of distribute, failover or failoverPriority can be set.",
                                          "items": {
                                            "properties": {
                                              "from": {
                                                "description": "Originating region.",
                                                "type": "string"
                                              },
                                              "to": {
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": "array"
                                        },
                                        "failoverPriority": {
                                          "description": "failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.",
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "simple": {
                                      "enum": [
                                        "UNSPECIFIED",
                                        "LEAST_CONN",
                                        "RANDOM",
                                        "PASSTHROUGH",
                                        "ROUND_ROBIN",
                                        "LEAST_REQUEST"
                                      ],
                                      "type": "string"
                                    },
                                    "warmupDurationSecs": {
                                      "description": "Represents the warmup duration of Service.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "outlierDetection": {
                                  "properties": {
                                    "baseEjectionTime": {
                                      "description": "Minimum ejection duration.",
                                      "type": "string"
                                    },
                                    "consecutive5xxErrors": {
                                      "description": "Number of 5xx errors before a host is ejected from the connection pool.",
                                      "nullable": true,
                                      "type": "integer"
                                    },
                                    "consecutiveErrors": {
                                      "format": "int32",
                                      "type": "integer"
                                    },
                                    "consecutiveGatewayErrors": {
                                      "description": "Number of gateway errors before a host is ejected from the connection pool.",
                                      "nullable": true,
                                      "type": "integer"
                                    },
                                    "consecutiveLocalOriginFailures": {
                                      "nullable": true,
                                      "type": "integer"
                                    },
                                    "interval": {
                                      "description": "Time interval between ejection sweep analysis.",
                                      "type": "string"
                                    },
                                    "maxEjectionPercent": {
                                      "format": "int32",
                                      "type": "integer"
                                    },
                                    "minHealthPercent": {
                                      "format": "int32",
                                      "type": "integer"
                                    },
                                    "splitExternalLocalOriginErrors": {
                                      "description": "Determines whether to distinguish local origin failures from external errors.",
                                      "type": "boolean"
                                    }
                                  },
                                  "type": "object"
                                },
                                "port": {
                                  "properties": {
                                    "number": {
                                      "type": "integer"
                                    }
                                  },
                                  "type": "object"
                                },
                                "tls": {
                                  "description": "TLS related settings for connections to the upstream service.",
                                  "properties": {
                                    "caCertificates": {
                                      "type": "string"
                                    },
                                    "clientCertificate": {
                                      "description": "REQUIRED if mode is `MUTUAL`.",
                                      "type": "string"
                                    },
                                    "credentialName": {
                                      "type": "string"
                                    },
                                    "insecureSkipVerify": {
                                      "nullable": true,
                                      "type": "boolean"
                                    },
                                    "mode": {
                                      "enum": [
                                        "DISABLE",
                                        "SIMPLE",
                                        "MUTUAL",
                                        "ISTIO_MUTUAL"
                                      ],
                                      "type": "string"
                                    },
                                    "privateKey": {
                                      "description": "REQUIRED if mode is `MUTUAL`.",
                                      "type": "string"
                                    },
                                    "sni": {
                                      "description": "SNI string to present to the server during TLS handshake.",
                                      "type": "string"
                                    },
                                    "subjectAltNames": {
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "tls": {
                            "description": "TLS related settings for connections to the upstream service.",
                            "properties": {
                              "caCertificates": {
                                "type": "string"
                              },
                              "clientCertificate": {
                                "description": "REQUIRED if mode is `MUTUAL`.",
                                "type": "string"
                              },
                              "credentialName": {
                                "type": "string"
                              },
                              "insecureSkipVerify": {
                                "nullable": true,
                                "type": "boolean"
                              },
                              "mode": {
                                "enum": [
                                  "DISABLE",
                                  "SIMPLE",
                                  "MUTUAL",
                                  "ISTIO_MUTUAL"
                                ],
                                "type": "string"
                              },
                              "privateKey": {
                                "description": "REQUIRED if mode is `MUTUAL`.",
                                "type": "string"
                              },
                              "sni": {
                                "description": "SNI string to present to the server during TLS handshake.",
                                "type": "string"
                              },
                              "subjectAltNames": {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          },
                          "tunnel": {
                            "properties": {
                              "protocol": {
                                "description": "Specifies which protocol to use for tunneling the downstream connection.",
                                "type": "string"
                              },
                              "targetHost": {
                                "description": "Specifies a host to which the downstream connection is tunneled.",
                                "type": "string"
                              },
                              "targetPort": {
                                "description": "Specifies a port to which the downstream connection is tunneled.",
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "workloadSelector": {
                        "properties": {
                          "matchLabels": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "status": {
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                  }
                },
                "type": "object"
              }
            },
            "served": true,
            "storage": false,
            "subresources": {
              "status": {}
            }
          }
        ]
      }
    },
    "/postgres/cluster_role_binding/postgres_operator": {
      "apiVersion": "rbac.authorization.k8s.io/v1",
      "kind": "ClusterRoleBinding",
      "metadata": {
        "annotations": {
          "battery/hash": "QZGBSWIP76M3UWQQ42Q4DT4IKINV77FIAXA7UQCZH4UGINFLNEZQ===="
        },
        "labels": {
          "app": "postgres-operator",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "postgres-operator",
          "battery/app": "postgres-operator",
          "battery/managed": "true",
          "battery/managed.direct": "true"
        },
        "name": "postgres-operator"
      },
      "roleRef": {
        "apiGroup": "rbac.authorization.k8s.io",
        "kind": "ClusterRole",
        "name": "battery-postgres-operator-role"
      },
      "subjects": [
        {
          "kind": "ServiceAccount",
          "name": "battery-postgres-operator",
          "namespace": "battery-core"
        }
      ]
    },
    "/istio/crd/wasmplugins_extensions_istio_io": {
      "apiVersion": "apiextensions.k8s.io/v1",
      "kind": "CustomResourceDefinition",
      "metadata": {
        "annotations": {
          "battery/hash": "SFYOVVMLOBK6G5SYVRW25RZO27QZGSH2NBMK4UJKS6ZUOUVMFBXA===="
        },
        "labels": {
          "app": "istio-pilot",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istio-base",
          "battery/app": "istio-base",
          "battery/managed": "true",
          "battery/managed.direct": "true"
        },
        "name": "wasmplugins.extensions.istio.io"
      },
      "spec": {
        "group": "extensions.istio.io",
        "names": {
          "categories": ["istio-io", "extensions-istio-io"],
          "kind": "WasmPlugin",
          "listKind": "WasmPluginList",
          "plural": "wasmplugins",
          "singular": "wasmplugin"
        },
        "scope": "Namespaced",
        "versions": [
          {
            "additionalPrinterColumns": [
              {
                "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
                "jsonPath": ".metadata.creationTimestamp",
                "name": "Age",
                "type": "date"
              }
            ],
            "name": "v1alpha1",
            "schema": {
              "openAPIV3Schema": {
                "properties": {
                  "spec": {
                    "description": "Extend the functionality provided by the Istio proxy through WebAssembly filters. See more details at: https://istio.io/docs/reference/config/proxy_extensions/wasm-plugin.html",
                    "properties": {
                      "imagePullPolicy": {
                        "enum": [
                          "UNSPECIFIED_POLICY",
                          "IfNotPresent",
                          "Always"
                        ],
                        "type": "string"
                      },
                      "imagePullSecret": {
                        "description": "Credentials to use for OCI image pulling.",
                        "type": "string"
                      },
                      "phase": {
                        "description": "Determines where in the filter chain this `WasmPlugin` is to be injected.",
                        "enum": [
                          "UNSPECIFIED_PHASE",
                          "AUTHN",
                          "AUTHZ",
                          "STATS"
                        ],
                        "type": "string"
                      },
                      "pluginConfig": {
                        "description": "The configuration that will be passed on to the plugin.",
                        "type": "object",
                        "x-kubernetes-preserve-unknown-fields": true
                      },
                      "pluginName": {
                        "type": "string"
                      },
                      "priority": {
                        "description": "Determines ordering of `WasmPlugins` in the same `phase`.",
                        "nullable": true,
                        "type": "integer"
                      },
                      "selector": {
                        "properties": {
                          "matchLabels": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "sha256": {
                        "description": "SHA256 checksum that will be used to verify Wasm module or OCI container.",
                        "type": "string"
                      },
                      "url": {
                        "description": "URL of a Wasm module or OCI container.",
                        "type": "string"
                      },
                      "verificationKey": {
                        "type": "string"
                      },
                      "vmConfig": {
                        "description": "Configuration for a Wasm VM.",
                        "properties": {
                          "env": {
                            "description": "Specifies environment variables to be injected to this VM.",
                            "items": {
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "value": {
                                  "description": "Value for the environment variable.",
                                  "type": "string"
                                },
                                "valueFrom": {
                                  "enum": ["INLINE", "HOST"],
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "status": {
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                  }
                },
                "type": "object"
              }
            },
            "served": true,
            "storage": true,
            "subresources": {
              "status": {}
            }
          }
        ]
      }
    },
    "/istio/config_map/istio": {
      "apiVersion": "v1",
      "data": {
        "mesh": "defaultConfig:\n  discoveryAddress: istiod.battery-istio.svc:15012\n  tracing:\n    zipkin:\n      address: zipkin.battery-istio:9411\nenablePrometheusMerge: true\nrootNamespace: null\ntrustDomain: cluster.local",
        "meshNetworks": "networks: {}"
      },
      "kind": "ConfigMap",
      "metadata": {
        "annotations": {
          "battery/hash": "UD5AE4GIRPB7J4K6J53SRXUVWAOIFOM6IWOQJTER5JBEEBJPODNA===="
        },
        "labels": {
          "app": "istiod",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istiod",
          "battery/app": "istiod",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "istio.io/rev": "default",
          "operator.istio.io/component": "Pilot"
        },
        "name": "istio",
        "namespace": "battery-istio"
      }
    },
    "/istio/cluster_role/istio_reader_clusterrole_battery_istio": {
      "apiVersion": "rbac.authorization.k8s.io/v1",
      "kind": "ClusterRole",
      "metadata": {
        "annotations": {
          "battery/hash": "NNQSQO5B24FDB5KMH5EI4AFVZHTNUDHOIFJGAM4SZM5J5J62V5ZA===="
        },
        "labels": {
          "app": "istiod",
          "app.kubernetes.io/component": "istio-reader",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istiod",
          "battery/app": "istiod",
          "battery/component": "istio-reader",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "component": "istio-reader"
        },
        "name": "istio-reader-clusterrole-battery-istio"
      },
      "rules": [
        {
          "apiGroups": [
            "config.istio.io",
            "security.istio.io",
            "networking.istio.io",
            "authentication.istio.io",
            "rbac.istio.io"
          ],
          "resources": ["*"],
          "verbs": ["get", "list", "watch"]
        },
        {
          "apiGroups": [""],
          "resources": [
            "endpoints",
            "pods",
            "services",
            "nodes",
            "replicationcontrollers",
            "namespaces",
            "secrets"
          ],
          "verbs": ["get", "list", "watch"]
        },
        {
          "apiGroups": ["networking.istio.io"],
          "resources": ["workloadentries"],
          "verbs": ["get", "watch", "list"]
        },
        {
          "apiGroups": ["apiextensions.k8s.io"],
          "resources": ["customresourcedefinitions"],
          "verbs": ["get", "list", "watch"]
        },
        {
          "apiGroups": ["discovery.k8s.io"],
          "resources": ["endpointslices"],
          "verbs": ["get", "list", "watch"]
        },
        {
          "apiGroups": ["multicluster.x-k8s.io"],
          "resources": ["serviceexports"],
          "verbs": ["get", "list", "watch", "create", "delete"]
        },
        {
          "apiGroups": ["multicluster.x-k8s.io"],
          "resources": ["serviceimports"],
          "verbs": ["get", "list", "watch"]
        },
        {
          "apiGroups": ["apps"],
          "resources": ["replicasets"],
          "verbs": ["get", "list", "watch"]
        },
        {
          "apiGroups": ["authentication.k8s.io"],
          "resources": ["tokenreviews"],
          "verbs": ["create"]
        },
        {
          "apiGroups": ["authorization.k8s.io"],
          "resources": ["subjectaccessreviews"],
          "verbs": ["create"]
        }
      ]
    },
    "/istio/mutating_webhook_config/istio_sidecar_injector_battery_istio": {
      "apiVersion": "admissionregistration.k8s.io/v1",
      "kind": "MutatingWebhookConfiguration",
      "metadata": {
        "annotations": {
          "battery/hash": "OZJK5B3ZGDHIYPEGZYXG5BGMBULFJSUTYUXTOLLVAGK5P7WV7WTQ===="
        },
        "labels": {
          "app": "istiod",
          "app.kubernetes.io/component": "sidecar-injector",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istiod",
          "battery/app": "istiod",
          "battery/component": "sidecar-injector",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "component": "sidecar-injector",
          "istio.io/rev": "default",
          "operator.istio.io/component": "Pilot"
        },
        "name": "istio-sidecar-injector-battery-istio"
      },
      "webhooks": [
        {
          "admissionReviewVersions": ["v1beta1", "v1"],
          "clientConfig": {
            "service": {
              "name": "istiod",
              "namespace": "battery-istio",
              "path": "/inject",
              "port": 443
            }
          },
          "failurePolicy": "Fail",
          "name": "rev.namespace.sidecar-injector.istio.io",
          "namespaceSelector": {
            "matchExpressions": [
              {
                "key": "istio.io/rev",
                "operator": "In",
                "values": ["default"]
              },
              {
                "key": "istio-injection",
                "operator": "DoesNotExist"
              }
            ]
          },
          "objectSelector": {
            "matchExpressions": [
              {
                "key": "sidecar.istio.io/inject",
                "operator": "NotIn",
                "values": ["false"]
              }
            ]
          },
          "rules": [
            {
              "apiGroups": [""],
              "apiVersions": ["v1"],
              "operations": ["CREATE"],
              "resources": ["pods"]
            }
          ],
          "sideEffects": "None"
        },
        {
          "admissionReviewVersions": ["v1beta1", "v1"],
          "clientConfig": {
            "service": {
              "name": "istiod",
              "namespace": "battery-istio",
              "path": "/inject",
              "port": 443
            }
          },
          "failurePolicy": "Fail",
          "name": "rev.object.sidecar-injector.istio.io",
          "namespaceSelector": {
            "matchExpressions": [
              {
                "key": "istio.io/rev",
                "operator": "DoesNotExist"
              },
              {
                "key": "istio-injection",
                "operator": "DoesNotExist"
              }
            ]
          },
          "objectSelector": {
            "matchExpressions": [
              {
                "key": "sidecar.istio.io/inject",
                "operator": "NotIn",
                "values": ["false"]
              },
              {
                "key": "istio.io/rev",
                "operator": "In",
                "values": ["default"]
              }
            ]
          },
          "rules": [
            {
              "apiGroups": [""],
              "apiVersions": ["v1"],
              "operations": ["CREATE"],
              "resources": ["pods"]
            }
          ],
          "sideEffects": "None"
        },
        {
          "admissionReviewVersions": ["v1beta1", "v1"],
          "clientConfig": {
            "service": {
              "name": "istiod",
              "namespace": "battery-istio",
              "path": "/inject",
              "port": 443
            }
          },
          "failurePolicy": "Fail",
          "name": "namespace.sidecar-injector.istio.io",
          "namespaceSelector": {
            "matchExpressions": [
              {
                "key": "istio-injection",
                "operator": "In",
                "values": ["enabled"]
              }
            ]
          },
          "objectSelector": {
            "matchExpressions": [
              {
                "key": "sidecar.istio.io/inject",
                "operator": "NotIn",
                "values": ["false"]
              }
            ]
          },
          "rules": [
            {
              "apiGroups": [""],
              "apiVersions": ["v1"],
              "operations": ["CREATE"],
              "resources": ["pods"]
            }
          ],
          "sideEffects": "None"
        },
        {
          "admissionReviewVersions": ["v1beta1", "v1"],
          "clientConfig": {
            "service": {
              "name": "istiod",
              "namespace": "battery-istio",
              "path": "/inject",
              "port": 443
            }
          },
          "failurePolicy": "Fail",
          "name": "object.sidecar-injector.istio.io",
          "namespaceSelector": {
            "matchExpressions": [
              {
                "key": "istio-injection",
                "operator": "DoesNotExist"
              },
              {
                "key": "istio.io/rev",
                "operator": "DoesNotExist"
              }
            ]
          },
          "objectSelector": {
            "matchExpressions": [
              {
                "key": "sidecar.istio.io/inject",
                "operator": "In",
                "values": ["true"]
              },
              {
                "key": "istio.io/rev",
                "operator": "DoesNotExist"
              }
            ]
          },
          "rules": [
            {
              "apiGroups": [""],
              "apiVersions": ["v1"],
              "operations": ["CREATE"],
              "resources": ["pods"]
            }
          ],
          "sideEffects": "None"
        }
      ]
    },
    "/postgres/cluster_role/battery_postgres_operator_role": {
      "apiVersion": "rbac.authorization.k8s.io/v1",
      "kind": "ClusterRole",
      "metadata": {
        "annotations": {
          "battery/hash": "L7BOXEBUU4Z75DHJGFM2CQNYX4OTHAOCAUAGDYKYQ3MKCF6GB5UA===="
        },
        "labels": {
          "app": "postgres-operator",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "postgres-operator",
          "battery/app": "postgres-operator",
          "battery/managed": "true",
          "battery/managed.direct": "true"
        },
        "name": "battery-postgres-operator-role"
      },
      "rules": [
        {
          "apiGroups": ["acid.zalan.do"],
          "resources": [
            "postgresqls",
            "postgresqls/status",
            "operatorconfigurations"
          ],
          "verbs": [
            "create",
            "delete",
            "deletecollection",
            "get",
            "list",
            "patch",
            "update",
            "watch"
          ]
        },
        {
          "apiGroups": ["acid.zalan.do"],
          "resources": ["postgresteams"],
          "verbs": ["get", "list", "watch"]
        },
        {
          "apiGroups": ["apiextensions.k8s.io"],
          "resources": ["customresourcedefinitions"],
          "verbs": ["get"]
        },
        {
          "apiGroups": [""],
          "resources": ["events"],
          "verbs": ["create", "get", "list", "patch", "update", "watch"]
        },
        {
          "apiGroups": [""],
          "resources": ["configmaps"],
          "verbs": ["get"]
        },
        {
          "apiGroups": [""],
          "resources": ["endpoints"],
          "verbs": [
            "create",
            "delete",
            "deletecollection",
            "get",
            "list",
            "patch",
            "update",
            "watch"
          ]
        },
        {
          "apiGroups": [""],
          "resources": ["secrets"],
          "verbs": ["create", "delete", "get", "update"]
        },
        {
          "apiGroups": [""],
          "resources": ["nodes"],
          "verbs": ["get", "list", "watch"]
        },
        {
          "apiGroups": [""],
          "resources": ["persistentvolumeclaims"],
          "verbs": ["delete", "get", "list", "patch", "update"]
        },
        {
          "apiGroups": [""],
          "resources": ["persistentvolumes"],
          "verbs": ["get", "list"]
        },
        {
          "apiGroups": [""],
          "resources": ["pods"],
          "verbs": ["delete", "get", "list", "patch", "update", "watch"]
        },
        {
          "apiGroups": [""],
          "resources": ["pods/exec"],
          "verbs": ["create"]
        },
        {
          "apiGroups": [""],
          "resources": ["services"],
          "verbs": ["create", "delete", "get", "patch", "update"]
        },
        {
          "apiGroups": ["apps"],
          "resources": ["statefulsets", "deployments"],
          "verbs": ["create", "delete", "get", "list", "patch"]
        },
        {
          "apiGroups": ["batch"],
          "resources": ["cronjobs"],
          "verbs": ["create", "delete", "get", "list", "patch", "update"]
        },
        {
          "apiGroups": [""],
          "resources": ["namespaces"],
          "verbs": ["get"]
        },
        {
          "apiGroups": ["policy"],
          "resources": ["poddisruptionbudgets"],
          "verbs": ["create", "delete", "get"]
        },
        {
          "apiGroups": [""],
          "resources": ["serviceaccounts"],
          "verbs": ["get", "create"]
        },
        {
          "apiGroups": ["rbac.authorization.k8s.io"],
          "resources": ["rolebindings"],
          "verbs": ["get", "create"]
        }
      ]
    },
    "/istio_gateway/service/ingressgateway": {
      "apiVersion": "v1",
      "kind": "Service",
      "metadata": {
        "annotations": {
          "battery/hash": "QH52FN45KK7KIJX6OOQGCVWNNMNHRTFCHSVJYCU7EHEXNNSAWFCA===="
        },
        "labels": {
          "app": "istio-ingressgateway",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istio-ingressgateway",
          "battery/app": "istio-ingressgateway",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "istio": "ingressgateway"
        },
        "name": "ingressgateway",
        "namespace": "battery-istio"
      },
      "spec": {
        "ports": [
          {
            "name": "status-port",
            "port": 15021,
            "protocol": "TCP",
            "targetPort": 15021
          },
          {
            "name": "http2",
            "port": 80,
            "protocol": "TCP",
            "targetPort": 80
          },
          {
            "name": "https",
            "port": 443,
            "protocol": "TCP",
            "targetPort": 443
          }
        ],
        "selector": {
          "battery/app": "istio-ingressgateway",
          "istio": "ingressgateway"
        },
        "type": "LoadBalancer"
      }
    },
    "/istio/crd/serviceentries_networking_istio_io": {
      "apiVersion": "apiextensions.k8s.io/v1",
      "kind": "CustomResourceDefinition",
      "metadata": {
        "annotations": {
          "battery/hash": "O6F3CFUCWEYVFN6QXCM56UESBOBZA5EKQBTULUKHVJPJ66LPYOGA===="
        },
        "labels": {
          "app": "istio-pilot",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istio-base",
          "battery/app": "istio-base",
          "battery/managed": "true",
          "battery/managed.direct": "true"
        },
        "name": "serviceentries.networking.istio.io"
      },
      "spec": {
        "group": "networking.istio.io",
        "names": {
          "categories": ["istio-io", "networking-istio-io"],
          "kind": "ServiceEntry",
          "listKind": "ServiceEntryList",
          "plural": "serviceentries",
          "shortNames": ["se"],
          "singular": "serviceentry"
        },
        "scope": "Namespaced",
        "versions": [
          {
            "additionalPrinterColumns": [
              {
                "description": "The hosts associated with the ServiceEntry",
                "jsonPath": ".spec.hosts",
                "name": "Hosts",
                "type": "string"
              },
              {
                "description": "Whether the service is external to the mesh or part of the mesh (MESH_EXTERNAL or MESH_INTERNAL)",
                "jsonPath": ".spec.location",
                "name": "Location",
                "type": "string"
              },
              {
                "description": "Service discovery mode for the hosts (NONE, STATIC, or DNS)",
                "jsonPath": ".spec.resolution",
                "name": "Resolution",
                "type": "string"
              },
              {
                "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
                "jsonPath": ".metadata.creationTimestamp",
                "name": "Age",
                "type": "date"
              }
            ],
            "name": "v1alpha3",
            "schema": {
              "openAPIV3Schema": {
                "properties": {
                  "spec": {
                    "description": "Configuration affecting service registry. See more details at: https://istio.io/docs/reference/config/networking/service-entry.html",
                    "properties": {
                      "addresses": {
                        "description": "The virtual IP addresses associated with the service.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "endpoints": {
                        "description": "One or more endpoints associated with the service.",
                        "items": {
                          "properties": {
                            "address": {
                              "type": "string"
                            },
                            "labels": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "One or more labels associated with the endpoint.",
                              "type": "object"
                            },
                            "locality": {
                              "description": "The locality associated with the endpoint.",
                              "type": "string"
                            },
                            "network": {
                              "type": "string"
                            },
                            "ports": {
                              "additionalProperties": {
                                "type": "integer"
                              },
                              "description": "Set of ports associated with the endpoint.",
                              "type": "object"
                            },
                            "serviceAccount": {
                              "type": "string"
                            },
                            "weight": {
                              "description": "The load balancing weight associated with the endpoint.",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "exportTo": {
                        "description": "A list of namespaces to which this service is exported.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "hosts": {
                        "description": "The hosts associated with the ServiceEntry.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "location": {
                        "enum": ["MESH_EXTERNAL", "MESH_INTERNAL"],
                        "type": "string"
                      },
                      "ports": {
                        "description": "The ports associated with the external service.",
                        "items": {
                          "properties": {
                            "name": {
                              "description": "Label assigned to the port.",
                              "type": "string"
                            },
                            "number": {
                              "description": "A valid non-negative integer port number.",
                              "type": "integer"
                            },
                            "protocol": {
                              "description": "The protocol exposed on the port.",
                              "type": "string"
                            },
                            "targetPort": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "resolution": {
                        "description": "Service discovery mode for the hosts.",
                        "enum": ["NONE", "STATIC", "DNS", "DNS_ROUND_ROBIN"],
                        "type": "string"
                      },
                      "subjectAltNames": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "workloadSelector": {
                        "description": "Applicable only for MESH_INTERNAL services.",
                        "properties": {
                          "labels": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "status": {
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                  }
                },
                "type": "object"
              }
            },
            "served": true,
            "storage": true,
            "subresources": {
              "status": {}
            }
          },
          {
            "additionalPrinterColumns": [
              {
                "description": "The hosts associated with the ServiceEntry",
                "jsonPath": ".spec.hosts",
                "name": "Hosts",
                "type": "string"
              },
              {
                "description": "Whether the service is external to the mesh or part of the mesh (MESH_EXTERNAL or MESH_INTERNAL)",
                "jsonPath": ".spec.location",
                "name": "Location",
                "type": "string"
              },
              {
                "description": "Service discovery mode for the hosts (NONE, STATIC, or DNS)",
                "jsonPath": ".spec.resolution",
                "name": "Resolution",
                "type": "string"
              },
              {
                "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
                "jsonPath": ".metadata.creationTimestamp",
                "name": "Age",
                "type": "date"
              }
            ],
            "name": "v1beta1",
            "schema": {
              "openAPIV3Schema": {
                "properties": {
                  "spec": {
                    "description": "Configuration affecting service registry. See more details at: https://istio.io/docs/reference/config/networking/service-entry.html",
                    "properties": {
                      "addresses": {
                        "description": "The virtual IP addresses associated with the service.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "endpoints": {
                        "description": "One or more endpoints associated with the service.",
                        "items": {
                          "properties": {
                            "address": {
                              "type": "string"
                            },
                            "labels": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "One or more labels associated with the endpoint.",
                              "type": "object"
                            },
                            "locality": {
                              "description": "The locality associated with the endpoint.",
                              "type": "string"
                            },
                            "network": {
                              "type": "string"
                            },
                            "ports": {
                              "additionalProperties": {
                                "type": "integer"
                              },
                              "description": "Set of ports associated with the endpoint.",
                              "type": "object"
                            },
                            "serviceAccount": {
                              "type": "string"
                            },
                            "weight": {
                              "description": "The load balancing weight associated with the endpoint.",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "exportTo": {
                        "description": "A list of namespaces to which this service is exported.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "hosts": {
                        "description": "The hosts associated with the ServiceEntry.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "location": {
                        "enum": ["MESH_EXTERNAL", "MESH_INTERNAL"],
                        "type": "string"
                      },
                      "ports": {
                        "description": "The ports associated with the external service.",
                        "items": {
                          "properties": {
                            "name": {
                              "description": "Label assigned to the port.",
                              "type": "string"
                            },
                            "number": {
                              "description": "A valid non-negative integer port number.",
                              "type": "integer"
                            },
                            "protocol": {
                              "description": "The protocol exposed on the port.",
                              "type": "string"
                            },
                            "targetPort": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "resolution": {
                        "description": "Service discovery mode for the hosts.",
                        "enum": ["NONE", "STATIC", "DNS", "DNS_ROUND_ROBIN"],
                        "type": "string"
                      },
                      "subjectAltNames": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "workloadSelector": {
                        "description": "Applicable only for MESH_INTERNAL services.",
                        "properties": {
                          "labels": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "status": {
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                  }
                },
                "type": "object"
              }
            },
            "served": true,
            "storage": false,
            "subresources": {
              "status": {}
            }
          }
        ]
      }
    },
    "/istio_gateway/role_binding/istio_ingressgateway": {
      "apiVersion": "rbac.authorization.k8s.io/v1",
      "kind": "RoleBinding",
      "metadata": {
        "annotations": {
          "battery/hash": "MY2POY5FNVL4YOLAGGR3BFHRUMACFEOT7XWROSCKXYOXZHK4JKLQ===="
        },
        "labels": {
          "app": "istio-ingressgateway",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istio-ingressgateway",
          "battery/app": "istio-ingressgateway",
          "battery/managed": "true",
          "battery/managed.direct": "true"
        },
        "name": "istio-ingressgateway",
        "namespace": "battery-istio"
      },
      "roleRef": {
        "apiGroup": "rbac.authorization.k8s.io",
        "kind": "Role",
        "name": "istio-ingressgateway"
      },
      "subjects": [
        {
          "kind": "ServiceAccount",
          "name": "istio-ingressgateway",
          "namespace": "battery-istio"
        }
      ]
    },
    "/postgres/deployment/postgres_operator": {
      "apiVersion": "apps/v1",
      "kind": "Deployment",
      "metadata": {
        "annotations": {
          "battery/hash": "27HRRZYH72J2RTPEYCAKMDVHRDI5MEDS6SXQCHRCHPH4ZM7CDJSA===="
        },
        "labels": {
          "app": "postgres-operator",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "postgres-operator",
          "battery/app": "postgres-operator",
          "battery/managed": "true",
          "battery/managed.direct": "true"
        },
        "name": "postgres-operator",
        "namespace": "battery-core"
      },
      "spec": {
        "replicas": 1,
        "selector": {
          "matchLabels": {
            "battery/app": "postgres-operator"
          }
        },
        "template": {
          "metadata": {
            "annotations": {},
            "labels": {
              "app": "postgres-operator",
              "app.kubernetes.io/managed-by": "batteries-included",
              "app.kubernetes.io/name": "postgres-operator",
              "battery/app": "postgres-operator",
              "battery/managed": "true",
              "battery/managed.indirect": "true"
            }
          },
          "spec": {
            "affinity": {},
            "containers": [
              {
                "env": [
                  {
                    "name": "POSTGRES_OPERATOR_CONFIGURATION_OBJECT",
                    "value": "postgres-operator"
                  }
                ],
                "image": "registry.opensource.zalan.do/acid/postgres-operator:v1.9.0-8-g645fcc01",
                "imagePullPolicy": "IfNotPresent",
                "name": "postgres-operator",
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "500Mi"
                  },
                  "requests": {
                    "cpu": "100m",
                    "memory": "250Mi"
                  }
                },
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "runAsUser": 1000
                }
              }
            ],
            "nodeSelector": {},
            "serviceAccountName": "battery-postgres-operator",
            "tolerations": []
          }
        }
      }
    },
    "/istio/istio_envoy_filter/tcp_stats_filter_1_15": {
      "apiVersion": "networking.istio.io/v1alpha3",
      "kind": "EnvoyFilter",
      "metadata": {
        "annotations": {
          "battery/hash": "KTYEBF4JDAOTA432R2S4GMMK7IC6WEAOTLYNLFJ6E4YNQBTBZWYQ===="
        },
        "labels": {
          "app": "istiod",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istiod",
          "battery/app": "istiod",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "istio.io/rev": "default"
        },
        "name": "tcp-stats-filter-1.15",
        "namespace": "battery-istio"
      },
      "spec": {
        "configPatches": [
          {
            "applyTo": "NETWORK_FILTER",
            "match": {
              "context": "SIDECAR_INBOUND",
              "listener": {
                "filterChain": {
                  "filter": {
                    "name": "envoy.filters.network.tcp_proxy"
                  }
                }
              },
              "proxy": {
                "proxyVersion": "^1\\.15.*"
              }
            },
            "patch": {
              "operation": "INSERT_BEFORE",
              "value": {
                "name": "istio.stats",
                "typed_config": {
                  "@type": "type.googleapis.com/udpa.type.v1.TypedStruct",
                  "type_url": "type.googleapis.com/envoy.extensions.filters.network.wasm.v3.Wasm",
                  "value": {
                    "config": {
                      "configuration": {
                        "@type": "type.googleapis.com/google.protobuf.StringValue",
                        "value": "{\n  \"debug\": \"false\",\n  \"stat_prefix\": \"istio\"\n}\n"
                      },
                      "root_id": "stats_inbound",
                      "vm_config": {
                        "code": {
                          "local": {
                            "inline_string": "envoy.wasm.stats"
                          }
                        },
                        "runtime": "envoy.wasm.runtime.null",
                        "vm_id": "tcp_stats_inbound"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "applyTo": "NETWORK_FILTER",
            "match": {
              "context": "SIDECAR_OUTBOUND",
              "listener": {
                "filterChain": {
                  "filter": {
                    "name": "envoy.filters.network.tcp_proxy"
                  }
                }
              },
              "proxy": {
                "proxyVersion": "^1\\.15.*"
              }
            },
            "patch": {
              "operation": "INSERT_BEFORE",
              "value": {
                "name": "istio.stats",
                "typed_config": {
                  "@type": "type.googleapis.com/udpa.type.v1.TypedStruct",
                  "type_url": "type.googleapis.com/envoy.extensions.filters.network.wasm.v3.Wasm",
                  "value": {
                    "config": {
                      "configuration": {
                        "@type": "type.googleapis.com/google.protobuf.StringValue",
                        "value": "{\n  \"debug\": \"false\",\n  \"stat_prefix\": \"istio\"\n}\n"
                      },
                      "root_id": "stats_outbound",
                      "vm_config": {
                        "code": {
                          "local": {
                            "inline_string": "envoy.wasm.stats"
                          }
                        },
                        "runtime": "envoy.wasm.runtime.null",
                        "vm_id": "tcp_stats_outbound"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "applyTo": "NETWORK_FILTER",
            "match": {
              "context": "GATEWAY",
              "listener": {
                "filterChain": {
                  "filter": {
                    "name": "envoy.filters.network.tcp_proxy"
                  }
                }
              },
              "proxy": {
                "proxyVersion": "^1\\.15.*"
              }
            },
            "patch": {
              "operation": "INSERT_BEFORE",
              "value": {
                "name": "istio.stats",
                "typed_config": {
                  "@type": "type.googleapis.com/udpa.type.v1.TypedStruct",
                  "type_url": "type.googleapis.com/envoy.extensions.filters.network.wasm.v3.Wasm",
                  "value": {
                    "config": {
                      "configuration": {
                        "@type": "type.googleapis.com/google.protobuf.StringValue",
                        "value": "{\n  \"debug\": \"false\",\n  \"stat_prefix\": \"istio\"\n}\n"
                      },
                      "root_id": "stats_outbound",
                      "vm_config": {
                        "code": {
                          "local": {
                            "inline_string": "envoy.wasm.stats"
                          }
                        },
                        "runtime": "envoy.wasm.runtime.null",
                        "vm_id": "tcp_stats_outbound"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "priority": -1
      }
    },
    "/postgres/crd/postgresqls_acid_zalan_do": {
      "apiVersion": "apiextensions.k8s.io/v1",
      "kind": "CustomResourceDefinition",
      "metadata": {
        "annotations": {
          "battery/hash": "NV7WE7EUEAD5PNTWS7QYM7TAHFERPMG55BVW4WX5LBAPUCJKBCQQ===="
        },
        "labels": {
          "app": "postgres-operator",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "postgres-operator",
          "battery/app": "postgres-operator",
          "battery/managed": "true",
          "battery/managed.direct": "true"
        },
        "name": "postgresqls.acid.zalan.do"
      },
      "spec": {
        "group": "acid.zalan.do",
        "names": {
          "categories": ["all"],
          "kind": "postgresql",
          "listKind": "postgresqlList",
          "plural": "postgresqls",
          "shortNames": ["pg"],
          "singular": "postgresql"
        },
        "scope": "Namespaced",
        "versions": [
          {
            "additionalPrinterColumns": [
              {
                "description": "Team responsible for Postgres cluster",
                "jsonPath": ".spec.teamId",
                "name": "Team",
                "type": "string"
              },
              {
                "description": "PostgreSQL version",
                "jsonPath": ".spec.postgresql.version",
                "name": "Version",
                "type": "string"
              },
              {
                "description": "Number of Pods per Postgres cluster",
                "jsonPath": ".spec.numberOfInstances",
                "name": "Pods",
                "type": "integer"
              },
              {
                "description": "Size of the bound volume",
                "jsonPath": ".spec.volume.size",
                "name": "Volume",
                "type": "string"
              },
              {
                "description": "Requested CPU for Postgres containers",
                "jsonPath": ".spec.resources.requests.cpu",
                "name": "CPU-Request",
                "type": "string"
              },
              {
                "description": "Requested memory for Postgres containers",
                "jsonPath": ".spec.resources.requests.memory",
                "name": "Memory-Request",
                "type": "string"
              },
              {
                "jsonPath": ".metadata.creationTimestamp",
                "name": "Age",
                "type": "date"
              },
              {
                "description": "Current sync status of postgresql resource",
                "jsonPath": ".status.PostgresClusterStatus",
                "name": "Status",
                "type": "string"
              }
            ],
            "name": "v1",
            "schema": {
              "openAPIV3Schema": {
                "properties": {
                  "apiVersion": {
                    "enum": ["acid.zalan.do/v1"],
                    "type": "string"
                  },
                  "kind": {
                    "enum": ["postgresql"],
                    "type": "string"
                  },
                  "spec": {
                    "properties": {
                      "teamId": {
                        "type": "string"
                      },
                      "spiloRunAsGroup": {
                        "type": "integer"
                      },
                      "additionalVolumes": {
                        "items": {
                          "properties": {
                            "mountPath": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "subPath": {
                              "type": "string"
                            },
                            "targetContainers": {
                              "items": {
                                "type": "string"
                              },
                              "nullable": true,
                              "type": "array"
                            },
                            "volumeSource": {
                              "type": "object",
                              "x-kubernetes-preserve-unknown-fields": true
                            }
                          },
                          "required": ["name", "mountPath", "volumeSource"],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "standby": {
                        "oneOf": [
                          {
                            "required": ["s3_wal_path"]
                          },
                          {
                            "required": ["gs_wal_path"]
                          },
                          {
                            "required": ["standby_host"]
                          }
                        ],
                        "properties": {
                          "gs_wal_path": {
                            "type": "string"
                          },
                          "s3_wal_path": {
                            "type": "string"
                          },
                          "standby_host": {
                            "type": "string"
                          },
                          "standby_port": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "patroni": {
                        "properties": {
                          "initdb": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "type": "object"
                          },
                          "loop_wait": {
                            "type": "integer"
                          },
                          "maximum_lag_on_failover": {
                            "type": "integer"
                          },
                          "pg_hba": {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "retry_timeout": {
                            "type": "integer"
                          },
                          "slots": {
                            "additionalProperties": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "type": "object"
                            },
                            "type": "object"
                          },
                          "synchronous_mode": {
                            "type": "boolean"
                          },
                          "synchronous_mode_strict": {
                            "type": "boolean"
                          },
                          "synchronous_node_count": {
                            "type": "integer"
                          },
                          "ttl": {
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "logicalBackupSchedule": {
                        "pattern": "^(\\d+|\\*)(/\\d+)?(\\s+(\\d+|\\*)(/\\d+)?){4}$",
                        "type": "string"
                      },
                      "env": {
                        "items": {
                          "type": "object",
                          "x-kubernetes-preserve-unknown-fields": true
                        },
                        "nullable": true,
                        "type": "array"
                      },
                      "enableShmVolume": {
                        "type": "boolean"
                      },
                      "initContainers": {
                        "items": {
                          "type": "object",
                          "x-kubernetes-preserve-unknown-fields": true
                        },
                        "nullable": true,
                        "type": "array"
                      },
                      "sidecars": {
                        "items": {
                          "type": "object",
                          "x-kubernetes-preserve-unknown-fields": true
                        },
                        "nullable": true,
                        "type": "array"
                      },
                      "users": {
                        "additionalProperties": {
                          "items": {
                            "enum": [
                              "bypassrls",
                              "BYPASSRLS",
                              "nobypassrls",
                              "NOBYPASSRLS",
                              "createdb",
                              "CREATEDB",
                              "nocreatedb",
                              "NOCREATEDB",
                              "createrole",
                              "CREATEROLE",
                              "nocreaterole",
                              "NOCREATEROLE",
                              "inherit",
                              "INHERIT",
                              "noinherit",
                              "NOINHERIT",
                              "login",
                              "LOGIN",
                              "nologin",
                              "NOLOGIN",
                              "replication",
                              "REPLICATION",
                              "noreplication",
                              "NOREPLICATION",
                              "superuser",
                              "SUPERUSER",
                              "nosuperuser",
                              "NOSUPERUSER"
                            ],
                            "type": "string"
                          },
                          "nullable": true,
                          "type": "array"
                        },
                        "type": "object"
                      },
                      "postgresql": {
                        "properties": {
                          "parameters": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "type": "object"
                          },
                          "version": {
                            "enum": [
                              "9.5",
                              "9.6",
                              "10",
                              "11",
                              "12",
                              "13",
                              "14"
                            ],
                            "type": "string"
                          }
                        },
                        "required": ["version"],
                        "type": "object"
                      },
                      "pod_priority_class_name": {
                        "description": "deprecated",
                        "type": "string"
                      },
                      "usersWithSecretRotation": {
                        "items": {
                          "type": "string"
                        },
                        "nullable": true,
                        "type": "array"
                      },
                      "serviceAnnotations": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "type": "object"
                      },
                      "enableReplicaLoadBalancer": {
                        "type": "boolean"
                      },
                      "maintenanceWindows": {
                        "items": {
                          "pattern": "^\\ *((Mon|Tue|Wed|Thu|Fri|Sat|Sun):(2[0-3]|[01]?\\d):([0-5]?\\d)|(2[0-3]|[01]?\\d):([0-5]?\\d))-((Mon|Tue|Wed|Thu|Fri|Sat|Sun):(2[0-3]|[01]?\\d):([0-5]?\\d)|(2[0-3]|[01]?\\d):([0-5]?\\d))\\ *$",
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "volume": {
                        "properties": {
                          "iops": {
                            "type": "integer"
                          },
                          "selector": {
                            "properties": {
                              "matchExpressions": {
                                "items": {
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "enum": [
                                        "DoesNotExists",
                                        "Exists",
                                        "In",
                                        "NotIn"
                                      ],
                                      "type": "string"
                                    },
                                    "values": {
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "required": ["key", "operator"],
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "matchLabels": {
                                "type": "object",
                                "x-kubernetes-preserve-unknown-fields": true
                              }
                            },
                            "type": "object"
                          },
                          "size": {
                            "pattern": "^(\\d+(e\\d+)?|\\d+(\\.\\d+)?(e\\d+)?[EPTGMK]i?)$",
                            "type": "string"
                          },
                          "storageClass": {
                            "type": "string"
                          },
                          "subPath": {
                            "type": "string"
                          },
                          "throughput": {
                            "type": "integer"
                          }
                        },
                        "required": ["size"],
                        "type": "object"
                      },
                      "enableLogicalBackup": {
                        "type": "boolean"
                      },
                      "init_containers": {
                        "description": "deprecated",
                        "items": {
                          "type": "object",
                          "x-kubernetes-preserve-unknown-fields": true
                        },
                        "nullable": true,
                        "type": "array"
                      },
                      "connectionPooler": {
                        "properties": {
                          "dockerImage": {
                            "type": "string"
                          },
                          "maxDBConnections": {
                            "type": "integer"
                          },
                          "mode": {
                            "enum": ["session", "transaction"],
                            "type": "string"
                          },
                          "numberOfInstances": {
                            "minimum": 1,
                            "type": "integer"
                          },
                          "resources": {
                            "properties": {
                              "limits": {
                                "properties": {
                                  "cpu": {
                                    "pattern": "^(\\d+m|\\d+(\\.\\d{1,3})?)$",
                                    "type": "string"
                                  },
                                  "memory": {
                                    "pattern": "^(\\d+(e\\d+)?|\\d+(\\.\\d+)?(e\\d+)?[EPTGMK]i?)$",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "requests": {
                                "properties": {
                                  "cpu": {
                                    "pattern": "^(\\d+m|\\d+(\\.\\d{1,3})?)$",
                                    "type": "string"
                                  },
                                  "memory": {
                                    "pattern": "^(\\d+(e\\d+)?|\\d+(\\.\\d+)?(e\\d+)?[EPTGMK]i?)$",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "schema": {
                            "type": "string"
                          },
                          "user": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "databases": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "type": "object"
                      },
                      "preparedDatabases": {
                        "additionalProperties": {
                          "properties": {
                            "defaultUsers": {
                              "type": "boolean"
                            },
                            "extensions": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "type": "object"
                            },
                            "schemas": {
                              "additionalProperties": {
                                "properties": {
                                  "defaultRoles": {
                                    "type": "boolean"
                                  },
                                  "defaultUsers": {
                                    "type": "boolean"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "object"
                            },
                            "secretNamespace": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "object"
                      },
                      "enableReplicaConnectionPooler": {
                        "type": "boolean"
                      },
                      "streams": {
                        "items": {
                          "properties": {
                            "applicationId": {
                              "type": "string"
                            },
                            "batchSize": {
                              "type": "integer"
                            },
                            "database": {
                              "type": "string"
                            },
                            "filter": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "type": "object"
                            },
                            "tables": {
                              "additionalProperties": {
                                "properties": {
                                  "eventType": {
                                    "type": "string"
                                  },
                                  "idColumn": {
                                    "type": "string"
                                  },
                                  "payloadColumn": {
                                    "type": "string"
                                  }
                                },
                                "required": ["eventType"],
                                "type": "object"
                              },
                              "type": "object"
                            }
                          },
                          "required": ["applicationId", "database", "tables"],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "schedulerName": {
                        "type": "string"
                      },
                      "spiloRunAsUser": {
                        "type": "integer"
                      },
                      "replicaLoadBalancer": {
                        "description": "deprecated",
                        "type": "boolean"
                      },
                      "spiloFSGroup": {
                        "type": "integer"
                      },
                      "podPriorityClassName": {
                        "type": "string"
                      },
                      "enableReplicaPoolerLoadBalancer": {
                        "type": "boolean"
                      },
                      "usersWithInPlaceSecretRotation": {
                        "items": {
                          "type": "string"
                        },
                        "nullable": true,
                        "type": "array"
                      },
                      "tolerations": {
                        "items": {
                          "properties": {
                            "effect": {
                              "enum": [
                                "NoExecute",
                                "NoSchedule",
                                "PreferNoSchedule"
                              ],
                              "type": "string"
                            },
                            "key": {
                              "type": "string"
                            },
                            "operator": {
                              "enum": ["Equal", "Exists"],
                              "type": "string"
                            },
                            "tolerationSeconds": {
                              "type": "integer"
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "enableMasterLoadBalancer": {
                        "type": "boolean"
                      },
                      "tls": {
                        "properties": {
                          "caFile": {
                            "type": "string"
                          },
                          "caSecretName": {
                            "type": "string"
                          },
                          "certificateFile": {
                            "type": "string"
                          },
                          "privateKeyFile": {
                            "type": "string"
                          },
                          "secretName": {
                            "type": "string"
                          }
                        },
                        "required": ["secretName"],
                        "type": "object"
                      },
                      "useLoadBalancer": {
                        "description": "deprecated",
                        "type": "boolean"
                      },
                      "enableMasterPoolerLoadBalancer": {
                        "type": "boolean"
                      },
                      "resources": {
                        "properties": {
                          "limits": {
                            "properties": {
                              "cpu": {
                                "pattern": "^(\\d+m|\\d+(\\.\\d{1,3})?)$",
                                "type": "string"
                              },
                              "memory": {
                                "pattern": "^(\\d+(e\\d+)?|\\d+(\\.\\d+)?(e\\d+)?[EPTGMK]i?)$",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "requests": {
                            "properties": {
                              "cpu": {
                                "pattern": "^(\\d+m|\\d+(\\.\\d{1,3})?)$",
                                "type": "string"
                              },
                              "memory": {
                                "pattern": "^(\\d+(e\\d+)?|\\d+(\\.\\d+)?(e\\d+)?[EPTGMK]i?)$",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "numberOfInstances": {
                        "minimum": 0,
                        "type": "integer"
                      },
                      "podAnnotations": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "type": "object"
                      },
                      "dockerImage": {
                        "type": "string"
                      },
                      "nodeAffinity": {
                        "properties": {
                          "preferredDuringSchedulingIgnoredDuringExecution": {
                            "items": {
                              "properties": {
                                "preference": {
                                  "properties": {
                                    "matchExpressions": {
                                      "items": {
                                        "properties": {
                                          "key": {
                                            "type": "string"
                                          },
                                          "operator": {
                                            "type": "string"
                                          },
                                          "values": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "required": ["key", "operator"],
                                        "type": "object"
                                      },
                                      "type": "array"
                                    },
                                    "matchFields": {
                                      "items": {
                                        "properties": {
                                          "key": {
                                            "type": "string"
                                          },
                                          "operator": {
                                            "type": "string"
                                          },
                                          "values": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "required": ["key", "operator"],
                                        "type": "object"
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                },
                                "weight": {
                                  "format": "int32",
                                  "type": "integer"
                                }
                              },
                              "required": ["preference", "weight"],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "requiredDuringSchedulingIgnoredDuringExecution": {
                            "properties": {
                              "nodeSelectorTerms": {
                                "items": {
                                  "properties": {
                                    "matchExpressions": {
                                      "items": {
                                        "properties": {
                                          "key": {
                                            "type": "string"
                                          },
                                          "operator": {
                                            "type": "string"
                                          },
                                          "values": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "required": ["key", "operator"],
                                        "type": "object"
                                      },
                                      "type": "array"
                                    },
                                    "matchFields": {
                                      "items": {
                                        "properties": {
                                          "key": {
                                            "type": "string"
                                          },
                                          "operator": {
                                            "type": "string"
                                          },
                                          "values": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "required": ["key", "operator"],
                                        "type": "object"
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              }
                            },
                            "required": ["nodeSelectorTerms"],
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "clone": {
                        "properties": {
                          "cluster": {
                            "type": "string"
                          },
                          "s3_access_key_id": {
                            "type": "string"
                          },
                          "s3_endpoint": {
                            "type": "string"
                          },
                          "s3_force_path_style": {
                            "type": "boolean"
                          },
                          "s3_secret_access_key": {
                            "type": "string"
                          },
                          "s3_wal_path": {
                            "type": "string"
                          },
                          "timestamp": {
                            "pattern": "^([0-9]+)-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])[Tt]([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(\\.[0-9]+)?(([+-]([01][0-9]|2[0-3]):[0-5][0-9]))$",
                            "type": "string"
                          },
                          "uid": {
                            "format": "uuid",
                            "type": "string"
                          }
                        },
                        "required": ["cluster"],
                        "type": "object"
                      },
                      "enableConnectionPooler": {
                        "type": "boolean"
                      },
                      "allowedSourceRanges": {
                        "items": {
                          "pattern": "^(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\/(\\d|[1-2]\\d|3[0-2])$",
                          "type": "string"
                        },
                        "nullable": true,
                        "type": "array"
                      }
                    },
                    "required": [
                      "numberOfInstances",
                      "teamId",
                      "postgresql",
                      "volume"
                    ],
                    "type": "object"
                  },
                  "status": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "type": "object"
                  }
                },
                "required": ["kind", "apiVersion", "spec"],
                "type": "object"
              }
            },
            "served": true,
            "storage": true,
            "subresources": {
              "status": {}
            }
          }
        ]
      }
    },
    "/istio/crd/telemetries_telemetry_istio_io": {
      "apiVersion": "apiextensions.k8s.io/v1",
      "kind": "CustomResourceDefinition",
      "metadata": {
        "annotations": {
          "battery/hash": "4LSE6DJU74WAY7TSNAZJ4KUSL53W6XZ6BFDQDCV2OGNNWW5JKZ2A===="
        },
        "labels": {
          "app": "istio-pilot",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istio-base",
          "battery/app": "istio-base",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "istio": "telemetry"
        },
        "name": "telemetries.telemetry.istio.io"
      },
      "spec": {
        "group": "telemetry.istio.io",
        "names": {
          "categories": ["istio-io", "telemetry-istio-io"],
          "kind": "Telemetry",
          "listKind": "TelemetryList",
          "plural": "telemetries",
          "shortNames": ["telemetry"],
          "singular": "telemetry"
        },
        "scope": "Namespaced",
        "versions": [
          {
            "additionalPrinterColumns": [
              {
                "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
                "jsonPath": ".metadata.creationTimestamp",
                "name": "Age",
                "type": "date"
              }
            ],
            "name": "v1alpha1",
            "schema": {
              "openAPIV3Schema": {
                "properties": {
                  "spec": {
                    "description": "Telemetry configuration for workloads. See more details at: https://istio.io/docs/reference/config/telemetry.html",
                    "properties": {
                      "accessLogging": {
                        "description": "Optional.",
                        "items": {
                          "properties": {
                            "disabled": {
                              "description": "Controls logging.",
                              "nullable": true,
                              "type": "boolean"
                            },
                            "filter": {
                              "description": "Optional.",
                              "properties": {
                                "expression": {
                                  "description": "CEL expression for selecting when requests/connections should be logged.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "match": {
                              "description": "Allows tailoring of logging behavior to specific conditions.",
                              "properties": {
                                "mode": {
                                  "enum": [
                                    "CLIENT_AND_SERVER",
                                    "CLIENT",
                                    "SERVER"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "providers": {
                              "description": "Optional.",
                              "items": {
                                "properties": {
                                  "name": {
                                    "description": "Required.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "metrics": {
                        "description": "Optional.",
                        "items": {
                          "properties": {
                            "overrides": {
                              "description": "Optional.",
                              "items": {
                                "properties": {
                                  "disabled": {
                                    "description": "Optional.",
                                    "nullable": true,
                                    "type": "boolean"
                                  },
                                  "match": {
                                    "description": "Match allows provides the scope of the override.",
                                    "oneOf": [
                                      {
                                        "not": {
                                          "anyOf": [
                                            {
                                              "required": ["metric"]
                                            },
                                            {
                                              "required": ["customMetric"]
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "required": ["metric"]
                                      },
                                      {
                                        "required": ["customMetric"]
                                      }
                                    ],
                                    "properties": {
                                      "customMetric": {
                                        "description": "Allows free-form specification of a metric.",
                                        "type": "string"
                                      },
                                      "metric": {
                                        "description": "One of the well-known Istio Standard Metrics.",
                                        "enum": [
                                          "ALL_METRICS",
                                          "REQUEST_COUNT",
                                          "REQUEST_DURATION",
                                          "REQUEST_SIZE",
                                          "RESPONSE_SIZE",
                                          "TCP_OPENED_CONNECTIONS",
                                          "TCP_CLOSED_CONNECTIONS",
                                          "TCP_SENT_BYTES",
                                          "TCP_RECEIVED_BYTES",
                                          "GRPC_REQUEST_MESSAGES",
                                          "GRPC_RESPONSE_MESSAGES"
                                        ],
                                        "type": "string"
                                      },
                                      "mode": {
                                        "enum": [
                                          "CLIENT_AND_SERVER",
                                          "CLIENT",
                                          "SERVER"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "tagOverrides": {
                                    "additionalProperties": {
                                      "properties": {
                                        "operation": {
                                          "description": "Operation controls whether or not to update/add a tag, or to remove it.",
                                          "enum": ["UPSERT", "REMOVE"],
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "Value is only considered if the operation is `UPSERT`.",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "description": "Optional.",
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "providers": {
                              "description": "Optional.",
                              "items": {
                                "properties": {
                                  "name": {
                                    "description": "Required.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "selector": {
                        "description": "Optional.",
                        "properties": {
                          "matchLabels": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "tracing": {
                        "description": "Optional.",
                        "items": {
                          "properties": {
                            "customTags": {
                              "additionalProperties": {
                                "oneOf": [
                                  {
                                    "not": {
                                      "anyOf": [
                                        {
                                          "required": ["literal"]
                                        },
                                        {
                                          "required": ["environment"]
                                        },
                                        {
                                          "required": ["header"]
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "required": ["literal"]
                                  },
                                  {
                                    "required": ["environment"]
                                  },
                                  {
                                    "required": ["header"]
                                  }
                                ],
                                "properties": {
                                  "environment": {
                                    "description": "Environment adds the value of an environment variable to each span.",
                                    "properties": {
                                      "defaultValue": {
                                        "description": "Optional.",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "Name of the environment variable from which to extract the tag value.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "header": {
                                    "properties": {
                                      "defaultValue": {
                                        "description": "Optional.",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "Name of the header from which to extract the tag value.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "literal": {
                                    "description": "Literal adds the same, hard-coded value to each span.",
                                    "properties": {
                                      "value": {
                                        "description": "The tag value to use.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "description": "Optional.",
                              "type": "object"
                            },
                            "disableSpanReporting": {
                              "description": "Controls span reporting.",
                              "nullable": true,
                              "type": "boolean"
                            },
                            "match": {
                              "description": "Allows tailoring of behavior to specific conditions.",
                              "properties": {
                                "mode": {
                                  "enum": [
                                    "CLIENT_AND_SERVER",
                                    "CLIENT",
                                    "SERVER"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "providers": {
                              "description": "Optional.",
                              "items": {
                                "properties": {
                                  "name": {
                                    "description": "Required.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "randomSamplingPercentage": {
                              "nullable": true,
                              "type": "number"
                            },
                            "useRequestIdForTraceSampling": {
                              "nullable": true,
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "status": {
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                  }
                },
                "type": "object"
              }
            },
            "served": true,
            "storage": true,
            "subresources": {
              "status": {}
            }
          }
        ]
      }
    },
    "/istio/istio_envoy_filter/stats_filter_1_13": {
      "apiVersion": "networking.istio.io/v1alpha3",
      "kind": "EnvoyFilter",
      "metadata": {
        "annotations": {
          "battery/hash": "7EXJSOSFZWDJD5GDBWNMO7TMI6XM7RXEG2COATCZQ5PJGPSRBISA===="
        },
        "labels": {
          "app": "istiod",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istiod",
          "battery/app": "istiod",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "istio.io/rev": "default"
        },
        "name": "stats-filter-1.13",
        "namespace": "battery-istio"
      },
      "spec": {
        "configPatches": [
          {
            "applyTo": "HTTP_FILTER",
            "match": {
              "context": "SIDECAR_OUTBOUND",
              "listener": {
                "filterChain": {
                  "filter": {
                    "name": "envoy.filters.network.http_connection_manager",
                    "subFilter": {
                      "name": "envoy.filters.http.router"
                    }
                  }
                }
              },
              "proxy": {
                "proxyVersion": "^1\\.13.*"
              }
            },
            "patch": {
              "operation": "INSERT_BEFORE",
              "value": {
                "name": "istio.stats",
                "typed_config": {
                  "@type": "type.googleapis.com/udpa.type.v1.TypedStruct",
                  "type_url": "type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm",
                  "value": {
                    "config": {
                      "configuration": {
                        "@type": "type.googleapis.com/google.protobuf.StringValue",
                        "value": "{\n  \"debug\": \"false\",\n  \"stat_prefix\": \"istio\"\n}\n"
                      },
                      "root_id": "stats_outbound",
                      "vm_config": {
                        "code": {
                          "local": {
                            "inline_string": "envoy.wasm.stats"
                          }
                        },
                        "runtime": "envoy.wasm.runtime.null",
                        "vm_id": "stats_outbound"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "applyTo": "HTTP_FILTER",
            "match": {
              "context": "SIDECAR_INBOUND",
              "listener": {
                "filterChain": {
                  "filter": {
                    "name": "envoy.filters.network.http_connection_manager",
                    "subFilter": {
                      "name": "envoy.filters.http.router"
                    }
                  }
                }
              },
              "proxy": {
                "proxyVersion": "^1\\.13.*"
              }
            },
            "patch": {
              "operation": "INSERT_BEFORE",
              "value": {
                "name": "istio.stats",
                "typed_config": {
                  "@type": "type.googleapis.com/udpa.type.v1.TypedStruct",
                  "type_url": "type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm",
                  "value": {
                    "config": {
                      "configuration": {
                        "@type": "type.googleapis.com/google.protobuf.StringValue",
                        "value": "{\n  \"debug\": \"false\",\n  \"stat_prefix\": \"istio\",\n  \"disable_host_header_fallback\": true\n}\n"
                      },
                      "root_id": "stats_inbound",
                      "vm_config": {
                        "code": {
                          "local": {
                            "inline_string": "envoy.wasm.stats"
                          }
                        },
                        "runtime": "envoy.wasm.runtime.null",
                        "vm_id": "stats_inbound"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "applyTo": "HTTP_FILTER",
            "match": {
              "context": "GATEWAY",
              "listener": {
                "filterChain": {
                  "filter": {
                    "name": "envoy.filters.network.http_connection_manager",
                    "subFilter": {
                      "name": "envoy.filters.http.router"
                    }
                  }
                }
              },
              "proxy": {
                "proxyVersion": "^1\\.13.*"
              }
            },
            "patch": {
              "operation": "INSERT_BEFORE",
              "value": {
                "name": "istio.stats",
                "typed_config": {
                  "@type": "type.googleapis.com/udpa.type.v1.TypedStruct",
                  "type_url": "type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm",
                  "value": {
                    "config": {
                      "configuration": {
                        "@type": "type.googleapis.com/google.protobuf.StringValue",
                        "value": "{\n  \"debug\": \"false\",\n  \"stat_prefix\": \"istio\",\n  \"disable_host_header_fallback\": true\n}\n"
                      },
                      "root_id": "stats_outbound",
                      "vm_config": {
                        "code": {
                          "local": {
                            "inline_string": "envoy.wasm.stats"
                          }
                        },
                        "runtime": "envoy.wasm.runtime.null",
                        "vm_id": "stats_outbound"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "priority": -1
      }
    },
    "/istio_gateway/role/istio_ingressgateway": {
      "apiVersion": "rbac.authorization.k8s.io/v1",
      "kind": "Role",
      "metadata": {
        "annotations": {
          "battery/hash": "74XORAOFXJAPW7X2BPJARCFHV7NEOO7TGANXCNNIFFRTAMPWOVLQ===="
        },
        "labels": {
          "app": "istio-ingressgateway",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istio-ingressgateway",
          "battery/app": "istio-ingressgateway",
          "battery/managed": "true",
          "battery/managed.direct": "true"
        },
        "name": "istio-ingressgateway",
        "namespace": "battery-istio"
      },
      "rules": [
        {
          "apiGroups": [""],
          "resources": ["secrets"],
          "verbs": ["get", "watch", "list"]
        }
      ]
    },
    "/istio/crd/authorizationpolicies_security_istio_io": {
      "apiVersion": "apiextensions.k8s.io/v1",
      "kind": "CustomResourceDefinition",
      "metadata": {
        "annotations": {
          "battery/hash": "EOZ7NHOPCUCPR5PHFRGP2VAEFUQYVTMGTTMGB4XDKNLQOZ2A2FMQ===="
        },
        "labels": {
          "app": "istio-pilot",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istio-base",
          "battery/app": "istio-base",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "istio": "security"
        },
        "name": "authorizationpolicies.security.istio.io"
      },
      "spec": {
        "group": "security.istio.io",
        "names": {
          "categories": ["istio-io", "security-istio-io"],
          "kind": "AuthorizationPolicy",
          "listKind": "AuthorizationPolicyList",
          "plural": "authorizationpolicies",
          "singular": "authorizationpolicy"
        },
        "scope": "Namespaced",
        "versions": [
          {
            "name": "v1beta1",
            "schema": {
              "openAPIV3Schema": {
                "properties": {
                  "spec": {
                    "description": "Configuration for access control on workloads. See more details at: https://istio.io/docs/reference/config/security/authorization-policy.html",
                    "oneOf": [
                      {
                        "not": {
                          "anyOf": [
                            {
                              "required": ["provider"]
                            }
                          ]
                        }
                      },
                      {
                        "required": ["provider"]
                      }
                    ],
                    "properties": {
                      "action": {
                        "description": "Optional.",
                        "enum": ["ALLOW", "DENY", "AUDIT", "CUSTOM"],
                        "type": "string"
                      },
                      "provider": {
                        "description": "Specifies detailed configuration of the CUSTOM action.",
                        "properties": {
                          "name": {
                            "description": "Specifies the name of the extension provider.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "rules": {
                        "description": "Optional.",
                        "items": {
                          "properties": {
                            "from": {
                              "description": "Optional.",
                              "items": {
                                "properties": {
                                  "source": {
                                    "description": "Source specifies the source of a request.",
                                    "properties": {
                                      "ipBlocks": {
                                        "description": "Optional.",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "namespaces": {
                                        "description": "Optional.",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "notIpBlocks": {
                                        "description": "Optional.",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "notNamespaces": {
                                        "description": "Optional.",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "notPrincipals": {
                                        "description": "Optional.",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "notRemoteIpBlocks": {
                                        "description": "Optional.",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "notRequestPrincipals": {
                                        "description": "Optional.",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "principals": {
                                        "description": "Optional.",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "remoteIpBlocks": {
                                        "description": "Optional.",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "requestPrincipals": {
                                        "description": "Optional.",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "to": {
                              "description": "Optional.",
                              "items": {
                                "properties": {
                                  "operation": {
                                    "description": "Operation specifies the operation of a request.",
                                    "properties": {
                                      "hosts": {
                                        "description": "Optional.",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "methods": {
                                        "description": "Optional.",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "notHosts": {
                                        "description": "Optional.",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "notMethods": {
                                        "description": "Optional.",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "notPaths": {
                                        "description": "Optional.",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "notPorts": {
                                        "description": "Optional.",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "paths": {
                                        "description": "Optional.",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "ports": {
                                        "description": "Optional.",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "when": {
                              "description": "Optional.",
                              "items": {
                                "properties": {
                                  "key": {
                                    "description": "The name of an Istio attribute.",
                                    "type": "string"
                                  },
                                  "notValues": {
                                    "description": "Optional.",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "values": {
                                    "description": "Optional.",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "selector": {
                        "description": "Optional.",
                        "properties": {
                          "matchLabels": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "status": {
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                  }
                },
                "type": "object"
              }
            },
            "served": true,
            "storage": true,
            "subresources": {
              "status": {}
            }
          }
        ]
      }
    },
    "/istio/cluster_role/istiod_gateway_controller_battery_istio": {
      "apiVersion": "rbac.authorization.k8s.io/v1",
      "kind": "ClusterRole",
      "metadata": {
        "annotations": {
          "battery/hash": "ODJKIU6YCSJIZUTXA3SUFN6IURHA2RHCL3M4L6LAQEB5GMIAT7IA===="
        },
        "labels": {
          "app": "istiod",
          "app.kubernetes.io/component": "istiod",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istiod",
          "battery/app": "istiod",
          "battery/component": "istiod",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "component": "istiod"
        },
        "name": "istiod-gateway-controller-battery-istio"
      },
      "rules": [
        {
          "apiGroups": ["apps"],
          "resources": ["deployments"],
          "verbs": [
            "get",
            "watch",
            "list",
            "update",
            "patch",
            "create",
            "delete"
          ]
        },
        {
          "apiGroups": [""],
          "resources": ["services"],
          "verbs": [
            "get",
            "watch",
            "list",
            "update",
            "patch",
            "create",
            "delete"
          ]
        }
      ]
    },
    "/battery_core/namespace/battery_ml": {
      "apiVersion": "v1",
      "kind": "Namespace",
      "metadata": {
        "annotations": {
          "battery/hash": "5ORYF2O66Y5MPBPLEX7XO6ERZLRDMYH7BUNLS3WZQWLYQX7B5JKA===="
        },
        "labels": {
          "app": "battery-core",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "battery-core",
          "battery/app": "battery-core",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "istio-injection": "enabled"
        },
        "name": "battery-ml"
      }
    },
    "/battery_core/namespace/battery_core": {
      "apiVersion": "v1",
      "kind": "Namespace",
      "metadata": {
        "annotations": {
          "battery/hash": "R2EF5OJ3AQDOFV46OLSMCGN3S5NXVS7YSPLM5NXCIWKCJMZG5SLA===="
        },
        "labels": {
          "app": "battery-core",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "battery-core",
          "battery/app": "battery-core",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "istio-injection": "enabled"
        },
        "name": "battery-core"
      }
    },
    "/postgres/service_account/battery_postgres_pod/0": {
      "apiVersion": "v1",
      "kind": "ServiceAccount",
      "metadata": {
        "annotations": {
          "battery/hash": "QBVLD6BVNJ7N42DU4WO23AWP66PZ3PQGFJLL77V2UQF4JNTEYKOA===="
        },
        "labels": {
          "app": "postgres-operator",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "postgres-operator",
          "battery/app": "postgres-operator",
          "battery/managed": "true",
          "battery/managed.direct": "true"
        },
        "name": "battery-postgres-pod",
        "namespace": "battery-base"
      }
    },
    "/istio/crd/workloadentries_networking_istio_io": {
      "apiVersion": "apiextensions.k8s.io/v1",
      "kind": "CustomResourceDefinition",
      "metadata": {
        "annotations": {
          "battery/hash": "3JVHFNGUT3DD6KQG3HECVK7G7VDV65MT4IYVROIXZ2G2OVUCVFBA===="
        },
        "labels": {
          "app": "istio-pilot",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istio-base",
          "battery/app": "istio-base",
          "battery/managed": "true",
          "battery/managed.direct": "true"
        },
        "name": "workloadentries.networking.istio.io"
      },
      "spec": {
        "group": "networking.istio.io",
        "names": {
          "categories": ["istio-io", "networking-istio-io"],
          "kind": "WorkloadEntry",
          "listKind": "WorkloadEntryList",
          "plural": "workloadentries",
          "shortNames": ["we"],
          "singular": "workloadentry"
        },
        "scope": "Namespaced",
        "versions": [
          {
            "additionalPrinterColumns": [
              {
                "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
                "jsonPath": ".metadata.creationTimestamp",
                "name": "Age",
                "type": "date"
              },
              {
                "description": "Address associated with the network endpoint.",
                "jsonPath": ".spec.address",
                "name": "Address",
                "type": "string"
              }
            ],
            "name": "v1alpha3",
            "schema": {
              "openAPIV3Schema": {
                "properties": {
                  "spec": {
                    "description": "Configuration affecting VMs onboarded into the mesh. See more details at: https://istio.io/docs/reference/config/networking/workload-entry.html",
                    "properties": {
                      "address": {
                        "type": "string"
                      },
                      "labels": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "One or more labels associated with the endpoint.",
                        "type": "object"
                      },
                      "locality": {
                        "description": "The locality associated with the endpoint.",
                        "type": "string"
                      },
                      "network": {
                        "type": "string"
                      },
                      "ports": {
                        "additionalProperties": {
                          "type": "integer"
                        },
                        "description": "Set of ports associated with the endpoint.",
                        "type": "object"
                      },
                      "serviceAccount": {
                        "type": "string"
                      },
                      "weight": {
                        "description": "The load balancing weight associated with the endpoint.",
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "status": {
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                  }
                },
                "type": "object"
              }
            },
            "served": true,
            "storage": true,
            "subresources": {
              "status": {}
            }
          },
          {
            "additionalPrinterColumns": [
              {
                "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
                "jsonPath": ".metadata.creationTimestamp",
                "name": "Age",
                "type": "date"
              },
              {
                "description": "Address associated with the network endpoint.",
                "jsonPath": ".spec.address",
                "name": "Address",
                "type": "string"
              }
            ],
            "name": "v1beta1",
            "schema": {
              "openAPIV3Schema": {
                "properties": {
                  "spec": {
                    "description": "Configuration affecting VMs onboarded into the mesh. See more details at: https://istio.io/docs/reference/config/networking/workload-entry.html",
                    "properties": {
                      "address": {
                        "type": "string"
                      },
                      "labels": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "One or more labels associated with the endpoint.",
                        "type": "object"
                      },
                      "locality": {
                        "description": "The locality associated with the endpoint.",
                        "type": "string"
                      },
                      "network": {
                        "type": "string"
                      },
                      "ports": {
                        "additionalProperties": {
                          "type": "integer"
                        },
                        "description": "Set of ports associated with the endpoint.",
                        "type": "object"
                      },
                      "serviceAccount": {
                        "type": "string"
                      },
                      "weight": {
                        "description": "The load balancing weight associated with the endpoint.",
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "status": {
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                  }
                },
                "type": "object"
              }
            },
            "served": true,
            "storage": false,
            "subresources": {
              "status": {}
            }
          }
        ]
      }
    },
    "/postgres/service_account/battery_postgres_pod/1": {
      "apiVersion": "v1",
      "kind": "ServiceAccount",
      "metadata": {
        "annotations": {
          "battery/hash": "OABOMWCKHERXDJX3K2TNEREDABMFW4VFP45L7CIDLY2HNEPNY73A===="
        },
        "labels": {
          "app": "postgres-operator",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "postgres-operator",
          "battery/app": "postgres-operator",
          "battery/managed": "true",
          "battery/managed.direct": "true"
        },
        "name": "battery-postgres-pod",
        "namespace": "battery-data"
      }
    },
    "/battery_core/namespace/battery_base": {
      "apiVersion": "v1",
      "kind": "Namespace",
      "metadata": {
        "annotations": {
          "battery/hash": "MZSAVCFYGWGVPGAZ5QYDSKGVLZOK2KALJOB7VWLHSJBU7WKJTOWQ===="
        },
        "labels": {
          "app": "battery-core",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "battery-core",
          "battery/app": "battery-core",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "istio-injection": "false"
        },
        "name": "battery-base"
      }
    },
    "/istio/service/istiod": {
      "apiVersion": "v1",
      "kind": "Service",
      "metadata": {
        "annotations": {
          "battery/hash": "CJXOXHYPW3W2T4MRONJIPRZCWQ6QPQW5LZVCBLO2HVZFUSZOSJ6A===="
        },
        "labels": {
          "app": "istiod",
          "app.kubernetes.io/component": "istiod",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istiod",
          "battery/app": "istiod",
          "battery/component": "istiod",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "component": "istiod",
          "istio": "pilot",
          "istio.io/rev": "default"
        },
        "name": "istiod",
        "namespace": "battery-istio"
      },
      "spec": {
        "ports": [
          {
            "name": "grpc-xds",
            "port": 15010,
            "protocol": "TCP"
          },
          {
            "name": "https-dns",
            "port": 15012,
            "protocol": "TCP"
          },
          {
            "name": "https-webhook",
            "port": 443,
            "protocol": "TCP",
            "targetPort": 15017
          },
          {
            "name": "http-monitoring",
            "port": 15014,
            "protocol": "TCP"
          }
        ],
        "selector": {
          "app": "istiod",
          "istio": "pilot"
        }
      }
    },
    "/istio/cluster_role_binding/istiod_battery_istio": {
      "apiVersion": "rbac.authorization.k8s.io/v1",
      "kind": "ClusterRoleBinding",
      "metadata": {
        "annotations": {
          "battery/hash": "PR56BMCQVNG4BJR2TKJTQJ7AYI7MFPY3OIHNSFQ7HCK7IG6N7ZDA===="
        },
        "labels": {
          "app": "istio-base",
          "app.kubernetes.io/component": "istiod",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istio-base",
          "battery/app": "istio-base",
          "battery/component": "istiod",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "component": "istiod"
        },
        "name": "istiod-battery-istio"
      },
      "roleRef": {
        "apiGroup": "rbac.authorization.k8s.io",
        "kind": "ClusterRole",
        "name": "istiod-battery-istio"
      },
      "subjects": [
        {
          "kind": "ServiceAccount",
          "name": "istiod-service-account",
          "namespace": "battery-istio"
        }
      ]
    },
    "/istio/crd/sidecars_networking_istio_io": {
      "apiVersion": "apiextensions.k8s.io/v1",
      "kind": "CustomResourceDefinition",
      "metadata": {
        "annotations": {
          "battery/hash": "TEYTKIFMS22NQKVAUGP5BJJH3GTAPNULRGVE5UVFFIQGGUCPYHGA===="
        },
        "labels": {
          "app": "istio-pilot",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istio-base",
          "battery/app": "istio-base",
          "battery/managed": "true",
          "battery/managed.direct": "true"
        },
        "name": "sidecars.networking.istio.io"
      },
      "spec": {
        "group": "networking.istio.io",
        "names": {
          "categories": ["istio-io", "networking-istio-io"],
          "kind": "Sidecar",
          "listKind": "SidecarList",
          "plural": "sidecars",
          "singular": "sidecar"
        },
        "scope": "Namespaced",
        "versions": [
          {
            "name": "v1alpha3",
            "schema": {
              "openAPIV3Schema": {
                "properties": {
                  "spec": {
                    "description": "Configuration affecting network reachability of a sidecar. See more details at: https://istio.io/docs/reference/config/networking/sidecar.html",
                    "properties": {
                      "egress": {
                        "items": {
                          "properties": {
                            "bind": {
                              "type": "string"
                            },
                            "captureMode": {
                              "enum": ["DEFAULT", "IPTABLES", "NONE"],
                              "type": "string"
                            },
                            "hosts": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "port": {
                              "description": "The port associated with the listener.",
                              "properties": {
                                "name": {
                                  "description": "Label assigned to the port.",
                                  "type": "string"
                                },
                                "number": {
                                  "description": "A valid non-negative integer port number.",
                                  "type": "integer"
                                },
                                "protocol": {
                                  "description": "The protocol exposed on the port.",
                                  "type": "string"
                                },
                                "targetPort": {
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "ingress": {
                        "items": {
                          "properties": {
                            "bind": {
                              "description": "The IP(IPv4 or IPv6) to which the listener should be bound.",
                              "type": "string"
                            },
                            "captureMode": {
                              "enum": ["DEFAULT", "IPTABLES", "NONE"],
                              "type": "string"
                            },
                            "defaultEndpoint": {
                              "type": "string"
                            },
                            "port": {
                              "description": "The port associated with the listener.",
                              "properties": {
                                "name": {
                                  "description": "Label assigned to the port.",
                                  "type": "string"
                                },
                                "number": {
                                  "description": "A valid non-negative integer port number.",
                                  "type": "integer"
                                },
                                "protocol": {
                                  "description": "The protocol exposed on the port.",
                                  "type": "string"
                                },
                                "targetPort": {
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "tls": {
                              "properties": {
                                "caCertificates": {
                                  "description": "REQUIRED if mode is `MUTUAL`.",
                                  "type": "string"
                                },
                                "cipherSuites": {
                                  "description": "Optional: If specified, only support the specified cipher list.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "credentialName": {
                                  "type": "string"
                                },
                                "httpsRedirect": {
                                  "type": "boolean"
                                },
                                "maxProtocolVersion": {
                                  "description": "Optional: Maximum TLS protocol version.",
                                  "enum": [
                                    "TLS_AUTO",
                                    "TLSV1_0",
                                    "TLSV1_1",
                                    "TLSV1_2",
                                    "TLSV1_3"
                                  ],
                                  "type": "string"
                                },
                                "minProtocolVersion": {
                                  "description": "Optional: Minimum TLS protocol version.",
                                  "enum": [
                                    "TLS_AUTO",
                                    "TLSV1_0",
                                    "TLSV1_1",
                                    "TLSV1_2",
                                    "TLSV1_3"
                                  ],
                                  "type": "string"
                                },
                                "mode": {
                                  "enum": [
                                    "PASSTHROUGH",
                                    "SIMPLE",
                                    "MUTUAL",
                                    "AUTO_PASSTHROUGH",
                                    "ISTIO_MUTUAL"
                                  ],
                                  "type": "string"
                                },
                                "privateKey": {
                                  "description": "REQUIRED if mode is `SIMPLE` or `MUTUAL`.",
                                  "type": "string"
                                },
                                "serverCertificate": {
                                  "description": "REQUIRED if mode is `SIMPLE` or `MUTUAL`.",
                                  "type": "string"
                                },
                                "subjectAltNames": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "verifyCertificateHash": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "verifyCertificateSpki": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "outboundTrafficPolicy": {
                        "description": "Configuration for the outbound traffic policy.",
                        "properties": {
                          "egressProxy": {
                            "properties": {
                              "host": {
                                "description": "The name of a service from the service registry.",
                                "type": "string"
                              },
                              "port": {
                                "description": "Specifies the port on the host that is being addressed.",
                                "properties": {
                                  "number": {
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "subset": {
                                "description": "The name of a subset within the service.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "mode": {
                            "enum": ["REGISTRY_ONLY", "ALLOW_ANY"],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "workloadSelector": {
                        "properties": {
                          "labels": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "status": {
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                  }
                },
                "type": "object"
              }
            },
            "served": true,
            "storage": true,
            "subresources": {
              "status": {}
            }
          },
          {
            "name": "v1beta1",
            "schema": {
              "openAPIV3Schema": {
                "properties": {
                  "spec": {
                    "description": "Configuration affecting network reachability of a sidecar. See more details at: https://istio.io/docs/reference/config/networking/sidecar.html",
                    "properties": {
                      "egress": {
                        "items": {
                          "properties": {
                            "bind": {
                              "type": "string"
                            },
                            "captureMode": {
                              "enum": ["DEFAULT", "IPTABLES", "NONE"],
                              "type": "string"
                            },
                            "hosts": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "port": {
                              "description": "The port associated with the listener.",
                              "properties": {
                                "name": {
                                  "description": "Label assigned to the port.",
                                  "type": "string"
                                },
                                "number": {
                                  "description": "A valid non-negative integer port number.",
                                  "type": "integer"
                                },
                                "protocol": {
                                  "description": "The protocol exposed on the port.",
                                  "type": "string"
                                },
                                "targetPort": {
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "ingress": {
                        "items": {
                          "properties": {
                            "bind": {
                              "description": "The IP(IPv4 or IPv6) to which the listener should be bound.",
                              "type": "string"
                            },
                            "captureMode": {
                              "enum": ["DEFAULT", "IPTABLES", "NONE"],
                              "type": "string"
                            },
                            "defaultEndpoint": {
                              "type": "string"
                            },
                            "port": {
                              "description": "The port associated with the listener.",
                              "properties": {
                                "name": {
                                  "description": "Label assigned to the port.",
                                  "type": "string"
                                },
                                "number": {
                                  "description": "A valid non-negative integer port number.",
                                  "type": "integer"
                                },
                                "protocol": {
                                  "description": "The protocol exposed on the port.",
                                  "type": "string"
                                },
                                "targetPort": {
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "tls": {
                              "properties": {
                                "caCertificates": {
                                  "description": "REQUIRED if mode is `MUTUAL`.",
                                  "type": "string"
                                },
                                "cipherSuites": {
                                  "description": "Optional: If specified, only support the specified cipher list.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "credentialName": {
                                  "type": "string"
                                },
                                "httpsRedirect": {
                                  "type": "boolean"
                                },
                                "maxProtocolVersion": {
                                  "description": "Optional: Maximum TLS protocol version.",
                                  "enum": [
                                    "TLS_AUTO",
                                    "TLSV1_0",
                                    "TLSV1_1",
                                    "TLSV1_2",
                                    "TLSV1_3"
                                  ],
                                  "type": "string"
                                },
                                "minProtocolVersion": {
                                  "description": "Optional: Minimum TLS protocol version.",
                                  "enum": [
                                    "TLS_AUTO",
                                    "TLSV1_0",
                                    "TLSV1_1",
                                    "TLSV1_2",
                                    "TLSV1_3"
                                  ],
                                  "type": "string"
                                },
                                "mode": {
                                  "enum": [
                                    "PASSTHROUGH",
                                    "SIMPLE",
                                    "MUTUAL",
                                    "AUTO_PASSTHROUGH",
                                    "ISTIO_MUTUAL"
                                  ],
                                  "type": "string"
                                },
                                "privateKey": {
                                  "description": "REQUIRED if mode is `SIMPLE` or `MUTUAL`.",
                                  "type": "string"
                                },
                                "serverCertificate": {
                                  "description": "REQUIRED if mode is `SIMPLE` or `MUTUAL`.",
                                  "type": "string"
                                },
                                "subjectAltNames": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "verifyCertificateHash": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "verifyCertificateSpki": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "outboundTrafficPolicy": {
                        "description": "Configuration for the outbound traffic policy.",
                        "properties": {
                          "egressProxy": {
                            "properties": {
                              "host": {
                                "description": "The name of a service from the service registry.",
                                "type": "string"
                              },
                              "port": {
                                "description": "Specifies the port on the host that is being addressed.",
                                "properties": {
                                  "number": {
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "subset": {
                                "description": "The name of a subset within the service.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "mode": {
                            "enum": ["REGISTRY_ONLY", "ALLOW_ANY"],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "workloadSelector": {
                        "properties": {
                          "labels": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "status": {
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                  }
                },
                "type": "object"
              }
            },
            "served": true,
            "storage": false,
            "subresources": {
              "status": {}
            }
          }
        ]
      }
    },
    "/istio/cluster_role_binding/istiod_gateway_controller_battery_istio": {
      "apiVersion": "rbac.authorization.k8s.io/v1",
      "kind": "ClusterRoleBinding",
      "metadata": {
        "annotations": {
          "battery/hash": "JLNWOH7Z7D7B2GYQQSVYCVE7KKI6KLMWN4ZOS22GC56ZSTOO4BAA===="
        },
        "labels": {
          "app": "istiod",
          "app.kubernetes.io/component": "istiod",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istiod",
          "battery/app": "istiod",
          "battery/component": "istiod",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "component": "istiod"
        },
        "name": "istiod-gateway-controller-battery-istio"
      },
      "roleRef": {
        "apiGroup": "rbac.authorization.k8s.io",
        "kind": "ClusterRole",
        "name": "istiod-gateway-controller-battery-istio"
      },
      "subjects": [
        {
          "kind": "ServiceAccount",
          "name": "istiod",
          "namespace": "battery-istio"
        }
      ]
    },
    "/istio/service_account/istiod": {
      "apiVersion": "v1",
      "kind": "ServiceAccount",
      "metadata": {
        "annotations": {
          "battery/hash": "7IEU5NCK4GZOFABR3MFIHH4Y7BBNKEMHKP6NFNQBVKHMVX63KOUA===="
        },
        "labels": {
          "app": "istiod",
          "app.kubernetes.io/component": "istiod",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istiod",
          "battery/app": "istiod",
          "battery/component": "istiod",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "component": "istiod"
        },
        "name": "istiod",
        "namespace": "battery-istio"
      }
    },
    "/istio/role_binding/istiod": {
      "apiVersion": "rbac.authorization.k8s.io/v1",
      "kind": "RoleBinding",
      "metadata": {
        "annotations": {
          "battery/hash": "OJRJTHOIAJR7NFPIZFAIHJ4V4NJ2IXKUW3LLP7FBG4O5MKQSC3LA===="
        },
        "labels": {
          "app": "istiod",
          "app.kubernetes.io/component": "istiod",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istiod",
          "battery/app": "istiod",
          "battery/component": "istiod",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "component": "istiod"
        },
        "name": "istiod",
        "namespace": "battery-istio"
      },
      "roleRef": {
        "apiGroup": "rbac.authorization.k8s.io",
        "kind": "Role",
        "name": "istiod"
      },
      "subjects": [
        {
          "kind": "ServiceAccount",
          "name": "istiod",
          "namespace": "battery-istio"
        }
      ]
    },
    "/istio/crd/peerauthentications_security_istio_io": {
      "apiVersion": "apiextensions.k8s.io/v1",
      "kind": "CustomResourceDefinition",
      "metadata": {
        "annotations": {
          "battery/hash": "OE4SVUZWLJS52MUEVYJKAAW3BYCVCNP3ZQST7MWIB5N2YOSSRVJQ===="
        },
        "labels": {
          "app": "istio-pilot",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istio-base",
          "battery/app": "istio-base",
          "battery/managed": "true",
          "battery/managed.direct": "true"
        },
        "name": "peerauthentications.security.istio.io"
      },
      "spec": {
        "group": "security.istio.io",
        "names": {
          "categories": ["istio-io", "security-istio-io"],
          "kind": "PeerAuthentication",
          "listKind": "PeerAuthenticationList",
          "plural": "peerauthentications",
          "shortNames": ["pa"],
          "singular": "peerauthentication"
        },
        "scope": "Namespaced",
        "versions": [
          {
            "additionalPrinterColumns": [
              {
                "description": "Defines the mTLS mode used for peer authentication.",
                "jsonPath": ".spec.mtls.mode",
                "name": "Mode",
                "type": "string"
              },
              {
                "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
                "jsonPath": ".metadata.creationTimestamp",
                "name": "Age",
                "type": "date"
              }
            ],
            "name": "v1beta1",
            "schema": {
              "openAPIV3Schema": {
                "properties": {
                  "spec": {
                    "description": "PeerAuthentication defines how traffic will be tunneled (or not) to the sidecar.",
                    "properties": {
                      "mtls": {
                        "description": "Mutual TLS settings for workload.",
                        "properties": {
                          "mode": {
                            "description": "Defines the mTLS mode used for peer authentication.",
                            "enum": [
                              "UNSET",
                              "DISABLE",
                              "PERMISSIVE",
                              "STRICT"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "portLevelMtls": {
                        "additionalProperties": {
                          "properties": {
                            "mode": {
                              "description": "Defines the mTLS mode used for peer authentication.",
                              "enum": [
                                "UNSET",
                                "DISABLE",
                                "PERMISSIVE",
                                "STRICT"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "description": "Port specific mutual TLS settings.",
                        "type": "object"
                      },
                      "selector": {
                        "description": "The selector determines the workloads to apply the ChannelAuthentication on.",
                        "properties": {
                          "matchLabels": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "status": {
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                  }
                },
                "type": "object"
              }
            },
            "served": true,
            "storage": true,
            "subresources": {
              "status": {}
            }
          }
        ]
      }
    },
    "/istio/istio_envoy_filter/tcp_stats_filter_1_13": {
      "apiVersion": "networking.istio.io/v1alpha3",
      "kind": "EnvoyFilter",
      "metadata": {
        "annotations": {
          "battery/hash": "PNWKSGI6ZB2B73QVQHRIX3KVUKZY4T54VPUVPWGHLNUZTYNLZKAA===="
        },
        "labels": {
          "app": "istiod",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istiod",
          "battery/app": "istiod",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "istio.io/rev": "default"
        },
        "name": "tcp-stats-filter-1.13",
        "namespace": "battery-istio"
      },
      "spec": {
        "configPatches": [
          {
            "applyTo": "NETWORK_FILTER",
            "match": {
              "context": "SIDECAR_INBOUND",
              "listener": {
                "filterChain": {
                  "filter": {
                    "name": "envoy.filters.network.tcp_proxy"
                  }
                }
              },
              "proxy": {
                "proxyVersion": "^1\\.13.*"
              }
            },
            "patch": {
              "operation": "INSERT_BEFORE",
              "value": {
                "name": "istio.stats",
                "typed_config": {
                  "@type": "type.googleapis.com/udpa.type.v1.TypedStruct",
                  "type_url": "type.googleapis.com/envoy.extensions.filters.network.wasm.v3.Wasm",
                  "value": {
                    "config": {
                      "configuration": {
                        "@type": "type.googleapis.com/google.protobuf.StringValue",
                        "value": "{\n  \"debug\": \"false\",\n  \"stat_prefix\": \"istio\"\n}\n"
                      },
                      "root_id": "stats_inbound",
                      "vm_config": {
                        "code": {
                          "local": {
                            "inline_string": "envoy.wasm.stats"
                          }
                        },
                        "runtime": "envoy.wasm.runtime.null",
                        "vm_id": "tcp_stats_inbound"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "applyTo": "NETWORK_FILTER",
            "match": {
              "context": "SIDECAR_OUTBOUND",
              "listener": {
                "filterChain": {
                  "filter": {
                    "name": "envoy.filters.network.tcp_proxy"
                  }
                }
              },
              "proxy": {
                "proxyVersion": "^1\\.13.*"
              }
            },
            "patch": {
              "operation": "INSERT_BEFORE",
              "value": {
                "name": "istio.stats",
                "typed_config": {
                  "@type": "type.googleapis.com/udpa.type.v1.TypedStruct",
                  "type_url": "type.googleapis.com/envoy.extensions.filters.network.wasm.v3.Wasm",
                  "value": {
                    "config": {
                      "configuration": {
                        "@type": "type.googleapis.com/google.protobuf.StringValue",
                        "value": "{\n  \"debug\": \"false\",\n  \"stat_prefix\": \"istio\"\n}\n"
                      },
                      "root_id": "stats_outbound",
                      "vm_config": {
                        "code": {
                          "local": {
                            "inline_string": "envoy.wasm.stats"
                          }
                        },
                        "runtime": "envoy.wasm.runtime.null",
                        "vm_id": "tcp_stats_outbound"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "applyTo": "NETWORK_FILTER",
            "match": {
              "context": "GATEWAY",
              "listener": {
                "filterChain": {
                  "filter": {
                    "name": "envoy.filters.network.tcp_proxy"
                  }
                }
              },
              "proxy": {
                "proxyVersion": "^1\\.13.*"
              }
            },
            "patch": {
              "operation": "INSERT_BEFORE",
              "value": {
                "name": "istio.stats",
                "typed_config": {
                  "@type": "type.googleapis.com/udpa.type.v1.TypedStruct",
                  "type_url": "type.googleapis.com/envoy.extensions.filters.network.wasm.v3.Wasm",
                  "value": {
                    "config": {
                      "configuration": {
                        "@type": "type.googleapis.com/google.protobuf.StringValue",
                        "value": "{\n  \"debug\": \"false\",\n  \"stat_prefix\": \"istio\"\n}\n"
                      },
                      "root_id": "stats_outbound",
                      "vm_config": {
                        "code": {
                          "local": {
                            "inline_string": "envoy.wasm.stats"
                          }
                        },
                        "runtime": "envoy.wasm.runtime.null",
                        "vm_id": "tcp_stats_outbound"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "priority": -1
      }
    },
    "/istio/crd/virtualservices_networking_istio_io": {
      "apiVersion": "apiextensions.k8s.io/v1",
      "kind": "CustomResourceDefinition",
      "metadata": {
        "annotations": {
          "battery/hash": "W7CUHCUQVVP6CE4BQKR6FSVRWSRGTUFONMO2XHT7YGRWC6M2NVKQ===="
        },
        "labels": {
          "app": "istio-pilot",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istio-base",
          "battery/app": "istio-base",
          "battery/managed": "true",
          "battery/managed.direct": "true"
        },
        "name": "virtualservices.networking.istio.io"
      },
      "spec": {
        "group": "networking.istio.io",
        "names": {
          "categories": ["istio-io", "networking-istio-io"],
          "kind": "VirtualService",
          "listKind": "VirtualServiceList",
          "plural": "virtualservices",
          "shortNames": ["vs"],
          "singular": "virtualservice"
        },
        "scope": "Namespaced",
        "versions": [
          {
            "additionalPrinterColumns": [
              {
                "description": "The names of gateways and sidecars that should apply these routes",
                "jsonPath": ".spec.gateways",
                "name": "Gateways",
                "type": "string"
              },
              {
                "description": "The destination hosts to which traffic is being sent",
                "jsonPath": ".spec.hosts",
                "name": "Hosts",
                "type": "string"
              },
              {
                "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
                "jsonPath": ".metadata.creationTimestamp",
                "name": "Age",
                "type": "date"
              }
            ],
            "name": "v1alpha3",
            "schema": {
              "openAPIV3Schema": {
                "properties": {
                  "spec": {
                    "description": "Configuration affecting label/content routing, sni routing, etc. See more details at: https://istio.io/docs/reference/config/networking/virtual-service.html",
                    "properties": {
                      "exportTo": {
                        "description": "A list of namespaces to which this virtual service is exported.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "gateways": {
                        "description": "The names of gateways and sidecars that should apply these routes.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "hosts": {
                        "description": "The destination hosts to which traffic is being sent.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "http": {
                        "description": "An ordered list of route rules for HTTP traffic.",
                        "items": {
                          "properties": {
                            "corsPolicy": {
                              "description": "Cross-Origin Resource Sharing policy (CORS).",
                              "properties": {
                                "allowCredentials": {
                                  "nullable": true,
                                  "type": "boolean"
                                },
                                "allowHeaders": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "allowMethods": {
                                  "description": "List of HTTP methods allowed to access the resource.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "allowOrigin": {
                                  "description": "The list of origins that are allowed to perform CORS requests.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "allowOrigins": {
                                  "description": "String patterns that match allowed origins.",
                                  "items": {
                                    "oneOf": [
                                      {
                                        "not": {
                                          "anyOf": [
                                            {
                                              "required": ["exact"]
                                            },
                                            {
                                              "required": ["prefix"]
                                            },
                                            {
                                              "required": ["regex"]
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "required": ["exact"]
                                      },
                                      {
                                        "required": ["prefix"]
                                      },
                                      {
                                        "required": ["regex"]
                                      }
                                    ],
                                    "properties": {
                                      "exact": {
                                        "type": "string"
                                      },
                                      "prefix": {
                                        "type": "string"
                                      },
                                      "regex": {
                                        "description": "RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "exposeHeaders": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "maxAge": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "delegate": {
                              "properties": {
                                "name": {
                                  "description": "Name specifies the name of the delegate VirtualService.",
                                  "type": "string"
                                },
                                "namespace": {
                                  "description": "Namespace specifies the namespace where the delegate VirtualService resides.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "directResponse": {
                              "description": "A HTTP rule can either return a direct_response, redirect or forward (default) traffic.",
                              "properties": {
                                "body": {
                                  "description": "Specifies the content of the response body.",
                                  "oneOf": [
                                    {
                                      "not": {
                                        "anyOf": [
                                          {
                                            "required": ["string"]
                                          },
                                          {
                                            "required": ["bytes"]
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "required": ["string"]
                                    },
                                    {
                                      "required": ["bytes"]
                                    }
                                  ],
                                  "properties": {
                                    "bytes": {
                                      "description": "response body as base64 encoded bytes.",
                                      "format": "binary",
                                      "type": "string"
                                    },
                                    "string": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "status": {
                                  "description": "Specifies the HTTP response status to be returned.",
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "fault": {
                              "description": "Fault injection policy to apply on HTTP traffic at the client side.",
                              "properties": {
                                "abort": {
                                  "oneOf": [
                                    {
                                      "not": {
                                        "anyOf": [
                                          {
                                            "required": ["httpStatus"]
                                          },
                                          {
                                            "required": ["grpcStatus"]
                                          },
                                          {
                                            "required": ["http2Error"]
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "required": ["httpStatus"]
                                    },
                                    {
                                      "required": ["grpcStatus"]
                                    },
                                    {
                                      "required": ["http2Error"]
                                    }
                                  ],
                                  "properties": {
                                    "grpcStatus": {
                                      "description": "GRPC status code to use to abort the request.",
                                      "type": "string"
                                    },
                                    "http2Error": {
                                      "type": "string"
                                    },
                                    "httpStatus": {
                                      "description": "HTTP status code to use to abort the Http request.",
                                      "format": "int32",
                                      "type": "integer"
                                    },
                                    "percentage": {
                                      "description": "Percentage of requests to be aborted with the error code provided.",
                                      "properties": {
                                        "value": {
                                          "format": "double",
                                          "type": "number"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                },
                                "delay": {
                                  "oneOf": [
                                    {
                                      "not": {
                                        "anyOf": [
                                          {
                                            "required": ["fixedDelay"]
                                          },
                                          {
                                            "required": ["exponentialDelay"]
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "required": ["fixedDelay"]
                                    },
                                    {
                                      "required": ["exponentialDelay"]
                                    }
                                  ],
                                  "properties": {
                                    "exponentialDelay": {
                                      "type": "string"
                                    },
                                    "fixedDelay": {
                                      "description": "Add a fixed delay before forwarding the request.",
                                      "type": "string"
                                    },
                                    "percent": {
                                      "description": "Percentage of requests on which the delay will be injected (0-100).",
                                      "format": "int32",
                                      "type": "integer"
                                    },
                                    "percentage": {
                                      "description": "Percentage of requests on which the delay will be injected.",
                                      "properties": {
                                        "value": {
                                          "format": "double",
                                          "type": "number"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "headers": {
                              "properties": {
                                "request": {
                                  "properties": {
                                    "add": {
                                      "additionalProperties": {
                                        "type": "string"
                                      },
                                      "type": "object"
                                    },
                                    "remove": {
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array"
                                    },
                                    "set": {
                                      "additionalProperties": {
                                        "type": "string"
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                },
                                "response": {
                                  "properties": {
                                    "add": {
                                      "additionalProperties": {
                                        "type": "string"
                                      },
                                      "type": "object"
                                    },
                                    "remove": {
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array"
                                    },
                                    "set": {
                                      "additionalProperties": {
                                        "type": "string"
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "match": {
                              "items": {
                                "properties": {
                                  "authority": {
                                    "oneOf": [
                                      {
                                        "not": {
                                          "anyOf": [
                                            {
                                              "required": ["exact"]
                                            },
                                            {
                                              "required": ["prefix"]
                                            },
                                            {
                                              "required": ["regex"]
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "required": ["exact"]
                                      },
                                      {
                                        "required": ["prefix"]
                                      },
                                      {
                                        "required": ["regex"]
                                      }
                                    ],
                                    "properties": {
                                      "exact": {
                                        "type": "string"
                                      },
                                      "prefix": {
                                        "type": "string"
                                      },
                                      "regex": {
                                        "description": "RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "gateways": {
                                    "description": "Names of gateways where the rule should be applied.",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "headers": {
                                    "additionalProperties": {
                                      "oneOf": [
                                        {
                                          "not": {
                                            "anyOf": [
                                              {
                                                "required": ["exact"]
                                              },
                                              {
                                                "required": ["prefix"]
                                              },
                                              {
                                                "required": ["regex"]
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "required": ["exact"]
                                        },
                                        {
                                          "required": ["prefix"]
                                        },
                                        {
                                          "required": ["regex"]
                                        }
                                      ],
                                      "properties": {
                                        "exact": {
                                          "type": "string"
                                        },
                                        "prefix": {
                                          "type": "string"
                                        },
                                        "regex": {
                                          "description": "RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "object"
                                  },
                                  "ignoreUriCase": {
                                    "description": "Flag to specify whether the URI matching should be case-insensitive.",
                                    "type": "boolean"
                                  },
                                  "method": {
                                    "oneOf": [
                                      {
                                        "not": {
                                          "anyOf": [
                                            {
                                              "required": ["exact"]
                                            },
                                            {
                                              "required": ["prefix"]
                                            },
                                            {
                                              "required": ["regex"]
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "required": ["exact"]
                                      },
                                      {
                                        "required": ["prefix"]
                                      },
                                      {
                                        "required": ["regex"]
                                      }
                                    ],
                                    "properties": {
                                      "exact": {
                                        "type": "string"
                                      },
                                      "prefix": {
                                        "type": "string"
                                      },
                                      "regex": {
                                        "description": "RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "name": {
                                    "description": "The name assigned to a match.",
                                    "type": "string"
                                  },
                                  "port": {
                                    "description": "Specifies the ports on the host that is being addressed.",
                                    "type": "integer"
                                  },
                                  "queryParams": {
                                    "additionalProperties": {
                                      "oneOf": [
                                        {
                                          "not": {
                                            "anyOf": [
                                              {
                                                "required": ["exact"]
                                              },
                                              {
                                                "required": ["prefix"]
                                              },
                                              {
                                                "required": ["regex"]
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "required": ["exact"]
                                        },
                                        {
                                          "required": ["prefix"]
                                        },
                                        {
                                          "required": ["regex"]
                                        }
                                      ],
                                      "properties": {
                                        "exact": {
                                          "type": "string"
                                        },
                                        "prefix": {
                                          "type": "string"
                                        },
                                        "regex": {
                                          "description": "RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "description": "Query parameters for matching.",
                                    "type": "object"
                                  },
                                  "scheme": {
                                    "oneOf": [
                                      {
                                        "not": {
                                          "anyOf": [
                                            {
                                              "required": ["exact"]
                                            },
                                            {
                                              "required": ["prefix"]
                                            },
                                            {
                                              "required": ["regex"]
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "required": ["exact"]
                                      },
                                      {
                                        "required": ["prefix"]
                                      },
                                      {
                                        "required": ["regex"]
                                      }
                                    ],
                                    "properties": {
                                      "exact": {
                                        "type": "string"
                                      },
                                      "prefix": {
                                        "type": "string"
                                      },
                                      "regex": {
                                        "description": "RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "sourceLabels": {
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "type": "object"
                                  },
                                  "sourceNamespace": {
                                    "description": "Source namespace constraining the applicability of a rule to workloads in that namespace.",
                                    "type": "string"
                                  },
                                  "statPrefix": {
                                    "description": "The human readable prefix to use when emitting statistics for this route.",
                                    "type": "string"
                                  },
                                  "uri": {
                                    "oneOf": [
                                      {
                                        "not": {
                                          "anyOf": [
                                            {
                                              "required": ["exact"]
                                            },
                                            {
                                              "required": ["prefix"]
                                            },
                                            {
                                              "required": ["regex"]
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "required": ["exact"]
                                      },
                                      {
                                        "required": ["prefix"]
                                      },
                                      {
                                        "required": ["regex"]
                                      }
                                    ],
                                    "properties": {
                                      "exact": {
                                        "type": "string"
                                      },
                                      "prefix": {
                                        "type": "string"
                                      },
                                      "regex": {
                                        "description": "RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "withoutHeaders": {
                                    "additionalProperties": {
                                      "oneOf": [
                                        {
                                          "not": {
                                            "anyOf": [
                                              {
                                                "required": ["exact"]
                                              },
                                              {
                                                "required": ["prefix"]
                                              },
                                              {
                                                "required": ["regex"]
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "required": ["exact"]
                                        },
                                        {
                                          "required": ["prefix"]
                                        },
                                        {
                                          "required": ["regex"]
                                        }
                                      ],
                                      "properties": {
                                        "exact": {
                                          "type": "string"
                                        },
                                        "prefix": {
                                          "type": "string"
                                        },
                                        "regex": {
                                          "description": "RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "description": "withoutHeader has the same syntax with the header, but has opposite meaning.",
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "mirror": {
                              "properties": {
                                "host": {
                                  "description": "The name of a service from the service registry.",
                                  "type": "string"
                                },
                                "port": {
                                  "description": "Specifies the port on the host that is being addressed.",
                                  "properties": {
                                    "number": {
                                      "type": "integer"
                                    }
                                  },
                                  "type": "object"
                                },
                                "subset": {
                                  "description": "The name of a subset within the service.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "mirrorPercent": {
                              "description": "Percentage of the traffic to be mirrored by the `mirror` field.",
                              "nullable": true,
                              "type": "integer"
                            },
                            "mirrorPercentage": {
                              "description": "Percentage of the traffic to be mirrored by the `mirror` field.",
                              "properties": {
                                "value": {
                                  "format": "double",
                                  "type": "number"
                                }
                              },
                              "type": "object"
                            },
                            "mirror_percent": {
                              "description": "Percentage of the traffic to be mirrored by the `mirror` field.",
                              "nullable": true,
                              "type": "integer"
                            },
                            "name": {
                              "description": "The name assigned to the route for debugging purposes.",
                              "type": "string"
                            },
                            "redirect": {
                              "description": "A HTTP rule can either return a direct_response, redirect or forward (default) traffic.",
                              "oneOf": [
                                {
                                  "not": {
                                    "anyOf": [
                                      {
                                        "required": ["port"]
                                      },
                                      {
                                        "required": ["derivePort"]
                                      }
                                    ]
                                  }
                                },
                                {
                                  "required": ["port"]
                                },
                                {
                                  "required": ["derivePort"]
                                }
                              ],
                              "properties": {
                                "authority": {
                                  "type": "string"
                                },
                                "derivePort": {
                                  "enum": [
                                    "FROM_PROTOCOL_DEFAULT",
                                    "FROM_REQUEST_PORT"
                                  ],
                                  "type": "string"
                                },
                                "port": {
                                  "description": "On a redirect, overwrite the port portion of the URL with this value.",
                                  "type": "integer"
                                },
                                "redirectCode": {
                                  "type": "integer"
                                },
                                "scheme": {
                                  "description": "On a redirect, overwrite the scheme portion of the URL with this value.",
                                  "type": "string"
                                },
                                "uri": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "retries": {
                              "description": "Retry policy for HTTP requests.",
                              "properties": {
                                "attempts": {
                                  "description": "Number of retries to be allowed for a given request.",
                                  "format": "int32",
                                  "type": "integer"
                                },
                                "perTryTimeout": {
                                  "description": "Timeout per attempt for a given request, including the initial call and any retries.",
                                  "type": "string"
                                },
                                "retryOn": {
                                  "description": "Specifies the conditions under which retry takes place.",
                                  "type": "string"
                                },
                                "retryRemoteLocalities": {
                                  "description": "Flag to specify whether the retries should retry to other localities.",
                                  "nullable": true,
                                  "type": "boolean"
                                }
                              },
                              "type": "object"
                            },
                            "rewrite": {
                              "description": "Rewrite HTTP URIs and Authority headers.",
                              "properties": {
                                "authority": {
                                  "description": "rewrite the Authority/Host header with this value.",
                                  "type": "string"
                                },
                                "uri": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "route": {
                              "description": "A HTTP rule can either return a direct_response, redirect or forward (default) traffic.",
                              "items": {
                                "properties": {
                                  "destination": {
                                    "properties": {
                                      "host": {
                                        "description": "The name of a service from the service registry.",
                                        "type": "string"
                                      },
                                      "port": {
                                        "description": "Specifies the port on the host that is being addressed.",
                                        "properties": {
                                          "number": {
                                            "type": "integer"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "subset": {
                                        "description": "The name of a subset within the service.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "headers": {
                                    "properties": {
                                      "request": {
                                        "properties": {
                                          "add": {
                                            "additionalProperties": {
                                              "type": "string"
                                            },
                                            "type": "object"
                                          },
                                          "remove": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          },
                                          "set": {
                                            "additionalProperties": {
                                              "type": "string"
                                            },
                                            "type": "object"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "response": {
                                        "properties": {
                                          "add": {
                                            "additionalProperties": {
                                              "type": "string"
                                            },
                                            "type": "object"
                                          },
                                          "remove": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          },
                                          "set": {
                                            "additionalProperties": {
                                              "type": "string"
                                            },
                                            "type": "object"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "weight": {
                                    "description": "Weight specifies the relative proportion of traffic to be forwarded to the destination.",
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "timeout": {
                              "description": "Timeout for HTTP requests, default is disabled.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "tcp": {
                        "description": "An ordered list of route rules for opaque TCP traffic.",
                        "items": {
                          "properties": {
                            "match": {
                              "items": {
                                "properties": {
                                  "destinationSubnets": {
                                    "description": "IPv4 or IPv6 ip addresses of destination with optional subnet.",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "gateways": {
                                    "description": "Names of gateways where the rule should be applied.",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "port": {
                                    "description": "Specifies the port on the host that is being addressed.",
                                    "type": "integer"
                                  },
                                  "sourceLabels": {
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "type": "object"
                                  },
                                  "sourceNamespace": {
                                    "description": "Source namespace constraining the applicability of a rule to workloads in that namespace.",
                                    "type": "string"
                                  },
                                  "sourceSubnet": {
                                    "description": "IPv4 or IPv6 ip address of source with optional subnet.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "route": {
                              "description": "The destination to which the connection should be forwarded to.",
                              "items": {
                                "properties": {
                                  "destination": {
                                    "properties": {
                                      "host": {
                                        "description": "The name of a service from the service registry.",
                                        "type": "string"
                                      },
                                      "port": {
                                        "description": "Specifies the port on the host that is being addressed.",
                                        "properties": {
                                          "number": {
                                            "type": "integer"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "subset": {
                                        "description": "The name of a subset within the service.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "weight": {
                                    "description": "Weight specifies the relative proportion of traffic to be forwarded to the destination.",
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "tls": {
                        "items": {
                          "properties": {
                            "match": {
                              "items": {
                                "properties": {
                                  "destinationSubnets": {
                                    "description": "IPv4 or IPv6 ip addresses of destination with optional subnet.",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "gateways": {
                                    "description": "Names of gateways where the rule should be applied.",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "port": {
                                    "description": "Specifies the port on the host that is being addressed.",
                                    "type": "integer"
                                  },
                                  "sniHosts": {
                                    "description": "SNI (server name indicator) to match on.",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "sourceLabels": {
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "type": "object"
                                  },
                                  "sourceNamespace": {
                                    "description": "Source namespace constraining the applicability of a rule to workloads in that namespace.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "route": {
                              "description": "The destination to which the connection should be forwarded to.",
                              "items": {
                                "properties": {
                                  "destination": {
                                    "properties": {
                                      "host": {
                                        "description": "The name of a service from the service registry.",
                                        "type": "string"
                                      },
                                      "port": {
                                        "description": "Specifies the port on the host that is being addressed.",
                                        "properties": {
                                          "number": {
                                            "type": "integer"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "subset": {
                                        "description": "The name of a subset within the service.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "weight": {
                                    "description": "Weight specifies the relative proportion of traffic to be forwarded to the destination.",
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "status": {
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                  }
                },
                "type": "object"
              }
            },
            "served": true,
            "storage": true,
            "subresources": {
              "status": {}
            }
          },
          {
            "additionalPrinterColumns": [
              {
                "description": "The names of gateways and sidecars that should apply these routes",
                "jsonPath": ".spec.gateways",
                "name": "Gateways",
                "type": "string"
              },
              {
                "description": "The destination hosts to which traffic is being sent",
                "jsonPath": ".spec.hosts",
                "name": "Hosts",
                "type": "string"
              },
              {
                "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
                "jsonPath": ".metadata.creationTimestamp",
                "name": "Age",
                "type": "date"
              }
            ],
            "name": "v1beta1",
            "schema": {
              "openAPIV3Schema": {
                "properties": {
                  "spec": {
                    "description": "Configuration affecting label/content routing, sni routing, etc. See more details at: https://istio.io/docs/reference/config/networking/virtual-service.html",
                    "properties": {
                      "exportTo": {
                        "description": "A list of namespaces to which this virtual service is exported.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "gateways": {
                        "description": "The names of gateways and sidecars that should apply these routes.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "hosts": {
                        "description": "The destination hosts to which traffic is being sent.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "http": {
                        "description": "An ordered list of route rules for HTTP traffic.",
                        "items": {
                          "properties": {
                            "corsPolicy": {
                              "description": "Cross-Origin Resource Sharing policy (CORS).",
                              "properties": {
                                "allowCredentials": {
                                  "nullable": true,
                                  "type": "boolean"
                                },
                                "allowHeaders": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "allowMethods": {
                                  "description": "List of HTTP methods allowed to access the resource.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "allowOrigin": {
                                  "description": "The list of origins that are allowed to perform CORS requests.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "allowOrigins": {
                                  "description": "String patterns that match allowed origins.",
                                  "items": {
                                    "oneOf": [
                                      {
                                        "not": {
                                          "anyOf": [
                                            {
                                              "required": ["exact"]
                                            },
                                            {
                                              "required": ["prefix"]
                                            },
                                            {
                                              "required": ["regex"]
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "required": ["exact"]
                                      },
                                      {
                                        "required": ["prefix"]
                                      },
                                      {
                                        "required": ["regex"]
                                      }
                                    ],
                                    "properties": {
                                      "exact": {
                                        "type": "string"
                                      },
                                      "prefix": {
                                        "type": "string"
                                      },
                                      "regex": {
                                        "description": "RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "exposeHeaders": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "maxAge": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "delegate": {
                              "properties": {
                                "name": {
                                  "description": "Name specifies the name of the delegate VirtualService.",
                                  "type": "string"
                                },
                                "namespace": {
                                  "description": "Namespace specifies the namespace where the delegate VirtualService resides.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "directResponse": {
                              "description": "A HTTP rule can either return a direct_response, redirect or forward (default) traffic.",
                              "properties": {
                                "body": {
                                  "description": "Specifies the content of the response body.",
                                  "oneOf": [
                                    {
                                      "not": {
                                        "anyOf": [
                                          {
                                            "required": ["string"]
                                          },
                                          {
                                            "required": ["bytes"]
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "required": ["string"]
                                    },
                                    {
                                      "required": ["bytes"]
                                    }
                                  ],
                                  "properties": {
                                    "bytes": {
                                      "description": "response body as base64 encoded bytes.",
                                      "format": "binary",
                                      "type": "string"
                                    },
                                    "string": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "status": {
                                  "description": "Specifies the HTTP response status to be returned.",
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "fault": {
                              "description": "Fault injection policy to apply on HTTP traffic at the client side.",
                              "properties": {
                                "abort": {
                                  "oneOf": [
                                    {
                                      "not": {
                                        "anyOf": [
                                          {
                                            "required": ["httpStatus"]
                                          },
                                          {
                                            "required": ["grpcStatus"]
                                          },
                                          {
                                            "required": ["http2Error"]
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "required": ["httpStatus"]
                                    },
                                    {
                                      "required": ["grpcStatus"]
                                    },
                                    {
                                      "required": ["http2Error"]
                                    }
                                  ],
                                  "properties": {
                                    "grpcStatus": {
                                      "description": "GRPC status code to use to abort the request.",
                                      "type": "string"
                                    },
                                    "http2Error": {
                                      "type": "string"
                                    },
                                    "httpStatus": {
                                      "description": "HTTP status code to use to abort the Http request.",
                                      "format": "int32",
                                      "type": "integer"
                                    },
                                    "percentage": {
                                      "description": "Percentage of requests to be aborted with the error code provided.",
                                      "properties": {
                                        "value": {
                                          "format": "double",
                                          "type": "number"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                },
                                "delay": {
                                  "oneOf": [
                                    {
                                      "not": {
                                        "anyOf": [
                                          {
                                            "required": ["fixedDelay"]
                                          },
                                          {
                                            "required": ["exponentialDelay"]
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "required": ["fixedDelay"]
                                    },
                                    {
                                      "required": ["exponentialDelay"]
                                    }
                                  ],
                                  "properties": {
                                    "exponentialDelay": {
                                      "type": "string"
                                    },
                                    "fixedDelay": {
                                      "description": "Add a fixed delay before forwarding the request.",
                                      "type": "string"
                                    },
                                    "percent": {
                                      "description": "Percentage of requests on which the delay will be injected (0-100).",
                                      "format": "int32",
                                      "type": "integer"
                                    },
                                    "percentage": {
                                      "description": "Percentage of requests on which the delay will be injected.",
                                      "properties": {
                                        "value": {
                                          "format": "double",
                                          "type": "number"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "headers": {
                              "properties": {
                                "request": {
                                  "properties": {
                                    "add": {
                                      "additionalProperties": {
                                        "type": "string"
                                      },
                                      "type": "object"
                                    },
                                    "remove": {
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array"
                                    },
                                    "set": {
                                      "additionalProperties": {
                                        "type": "string"
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                },
                                "response": {
                                  "properties": {
                                    "add": {
                                      "additionalProperties": {
                                        "type": "string"
                                      },
                                      "type": "object"
                                    },
                                    "remove": {
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array"
                                    },
                                    "set": {
                                      "additionalProperties": {
                                        "type": "string"
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "match": {
                              "items": {
                                "properties": {
                                  "authority": {
                                    "oneOf": [
                                      {
                                        "not": {
                                          "anyOf": [
                                            {
                                              "required": ["exact"]
                                            },
                                            {
                                              "required": ["prefix"]
                                            },
                                            {
                                              "required": ["regex"]
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "required": ["exact"]
                                      },
                                      {
                                        "required": ["prefix"]
                                      },
                                      {
                                        "required": ["regex"]
                                      }
                                    ],
                                    "properties": {
                                      "exact": {
                                        "type": "string"
                                      },
                                      "prefix": {
                                        "type": "string"
                                      },
                                      "regex": {
                                        "description": "RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "gateways": {
                                    "description": "Names of gateways where the rule should be applied.",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "headers": {
                                    "additionalProperties": {
                                      "oneOf": [
                                        {
                                          "not": {
                                            "anyOf": [
                                              {
                                                "required": ["exact"]
                                              },
                                              {
                                                "required": ["prefix"]
                                              },
                                              {
                                                "required": ["regex"]
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "required": ["exact"]
                                        },
                                        {
                                          "required": ["prefix"]
                                        },
                                        {
                                          "required": ["regex"]
                                        }
                                      ],
                                      "properties": {
                                        "exact": {
                                          "type": "string"
                                        },
                                        "prefix": {
                                          "type": "string"
                                        },
                                        "regex": {
                                          "description": "RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "object"
                                  },
                                  "ignoreUriCase": {
                                    "description": "Flag to specify whether the URI matching should be case-insensitive.",
                                    "type": "boolean"
                                  },
                                  "method": {
                                    "oneOf": [
                                      {
                                        "not": {
                                          "anyOf": [
                                            {
                                              "required": ["exact"]
                                            },
                                            {
                                              "required": ["prefix"]
                                            },
                                            {
                                              "required": ["regex"]
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "required": ["exact"]
                                      },
                                      {
                                        "required": ["prefix"]
                                      },
                                      {
                                        "required": ["regex"]
                                      }
                                    ],
                                    "properties": {
                                      "exact": {
                                        "type": "string"
                                      },
                                      "prefix": {
                                        "type": "string"
                                      },
                                      "regex": {
                                        "description": "RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "name": {
                                    "description": "The name assigned to a match.",
                                    "type": "string"
                                  },
                                  "port": {
                                    "description": "Specifies the ports on the host that is being addressed.",
                                    "type": "integer"
                                  },
                                  "queryParams": {
                                    "additionalProperties": {
                                      "oneOf": [
                                        {
                                          "not": {
                                            "anyOf": [
                                              {
                                                "required": ["exact"]
                                              },
                                              {
                                                "required": ["prefix"]
                                              },
                                              {
                                                "required": ["regex"]
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "required": ["exact"]
                                        },
                                        {
                                          "required": ["prefix"]
                                        },
                                        {
                                          "required": ["regex"]
                                        }
                                      ],
                                      "properties": {
                                        "exact": {
                                          "type": "string"
                                        },
                                        "prefix": {
                                          "type": "string"
                                        },
                                        "regex": {
                                          "description": "RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "description": "Query parameters for matching.",
                                    "type": "object"
                                  },
                                  "scheme": {
                                    "oneOf": [
                                      {
                                        "not": {
                                          "anyOf": [
                                            {
                                              "required": ["exact"]
                                            },
                                            {
                                              "required": ["prefix"]
                                            },
                                            {
                                              "required": ["regex"]
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "required": ["exact"]
                                      },
                                      {
                                        "required": ["prefix"]
                                      },
                                      {
                                        "required": ["regex"]
                                      }
                                    ],
                                    "properties": {
                                      "exact": {
                                        "type": "string"
                                      },
                                      "prefix": {
                                        "type": "string"
                                      },
                                      "regex": {
                                        "description": "RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "sourceLabels": {
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "type": "object"
                                  },
                                  "sourceNamespace": {
                                    "description": "Source namespace constraining the applicability of a rule to workloads in that namespace.",
                                    "type": "string"
                                  },
                                  "statPrefix": {
                                    "description": "The human readable prefix to use when emitting statistics for this route.",
                                    "type": "string"
                                  },
                                  "uri": {
                                    "oneOf": [
                                      {
                                        "not": {
                                          "anyOf": [
                                            {
                                              "required": ["exact"]
                                            },
                                            {
                                              "required": ["prefix"]
                                            },
                                            {
                                              "required": ["regex"]
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "required": ["exact"]
                                      },
                                      {
                                        "required": ["prefix"]
                                      },
                                      {
                                        "required": ["regex"]
                                      }
                                    ],
                                    "properties": {
                                      "exact": {
                                        "type": "string"
                                      },
                                      "prefix": {
                                        "type": "string"
                                      },
                                      "regex": {
                                        "description": "RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "withoutHeaders": {
                                    "additionalProperties": {
                                      "oneOf": [
                                        {
                                          "not": {
                                            "anyOf": [
                                              {
                                                "required": ["exact"]
                                              },
                                              {
                                                "required": ["prefix"]
                                              },
                                              {
                                                "required": ["regex"]
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "required": ["exact"]
                                        },
                                        {
                                          "required": ["prefix"]
                                        },
                                        {
                                          "required": ["regex"]
                                        }
                                      ],
                                      "properties": {
                                        "exact": {
                                          "type": "string"
                                        },
                                        "prefix": {
                                          "type": "string"
                                        },
                                        "regex": {
                                          "description": "RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "description": "withoutHeader has the same syntax with the header, but has opposite meaning.",
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "mirror": {
                              "properties": {
                                "host": {
                                  "description": "The name of a service from the service registry.",
                                  "type": "string"
                                },
                                "port": {
                                  "description": "Specifies the port on the host that is being addressed.",
                                  "properties": {
                                    "number": {
                                      "type": "integer"
                                    }
                                  },
                                  "type": "object"
                                },
                                "subset": {
                                  "description": "The name of a subset within the service.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "mirrorPercent": {
                              "description": "Percentage of the traffic to be mirrored by the `mirror` field.",
                              "nullable": true,
                              "type": "integer"
                            },
                            "mirrorPercentage": {
                              "description": "Percentage of the traffic to be mirrored by the `mirror` field.",
                              "properties": {
                                "value": {
                                  "format": "double",
                                  "type": "number"
                                }
                              },
                              "type": "object"
                            },
                            "mirror_percent": {
                              "description": "Percentage of the traffic to be mirrored by the `mirror` field.",
                              "nullable": true,
                              "type": "integer"
                            },
                            "name": {
                              "description": "The name assigned to the route for debugging purposes.",
                              "type": "string"
                            },
                            "redirect": {
                              "description": "A HTTP rule can either return a direct_response, redirect or forward (default) traffic.",
                              "oneOf": [
                                {
                                  "not": {
                                    "anyOf": [
                                      {
                                        "required": ["port"]
                                      },
                                      {
                                        "required": ["derivePort"]
                                      }
                                    ]
                                  }
                                },
                                {
                                  "required": ["port"]
                                },
                                {
                                  "required": ["derivePort"]
                                }
                              ],
                              "properties": {
                                "authority": {
                                  "type": "string"
                                },
                                "derivePort": {
                                  "enum": [
                                    "FROM_PROTOCOL_DEFAULT",
                                    "FROM_REQUEST_PORT"
                                  ],
                                  "type": "string"
                                },
                                "port": {
                                  "description": "On a redirect, overwrite the port portion of the URL with this value.",
                                  "type": "integer"
                                },
                                "redirectCode": {
                                  "type": "integer"
                                },
                                "scheme": {
                                  "description": "On a redirect, overwrite the scheme portion of the URL with this value.",
                                  "type": "string"
                                },
                                "uri": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "retries": {
                              "description": "Retry policy for HTTP requests.",
                              "properties": {
                                "attempts": {
                                  "description": "Number of retries to be allowed for a given request.",
                                  "format": "int32",
                                  "type": "integer"
                                },
                                "perTryTimeout": {
                                  "description": "Timeout per attempt for a given request, including the initial call and any retries.",
                                  "type": "string"
                                },
                                "retryOn": {
                                  "description": "Specifies the conditions under which retry takes place.",
                                  "type": "string"
                                },
                                "retryRemoteLocalities": {
                                  "description": "Flag to specify whether the retries should retry to other localities.",
                                  "nullable": true,
                                  "type": "boolean"
                                }
                              },
                              "type": "object"
                            },
                            "rewrite": {
                              "description": "Rewrite HTTP URIs and Authority headers.",
                              "properties": {
                                "authority": {
                                  "description": "rewrite the Authority/Host header with this value.",
                                  "type": "string"
                                },
                                "uri": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "route": {
                              "description": "A HTTP rule can either return a direct_response, redirect or forward (default) traffic.",
                              "items": {
                                "properties": {
                                  "destination": {
                                    "properties": {
                                      "host": {
                                        "description": "The name of a service from the service registry.",
                                        "type": "string"
                                      },
                                      "port": {
                                        "description": "Specifies the port on the host that is being addressed.",
                                        "properties": {
                                          "number": {
                                            "type": "integer"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "subset": {
                                        "description": "The name of a subset within the service.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "headers": {
                                    "properties": {
                                      "request": {
                                        "properties": {
                                          "add": {
                                            "additionalProperties": {
                                              "type": "string"
                                            },
                                            "type": "object"
                                          },
                                          "remove": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          },
                                          "set": {
                                            "additionalProperties": {
                                              "type": "string"
                                            },
                                            "type": "object"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "response": {
                                        "properties": {
                                          "add": {
                                            "additionalProperties": {
                                              "type": "string"
                                            },
                                            "type": "object"
                                          },
                                          "remove": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          },
                                          "set": {
                                            "additionalProperties": {
                                              "type": "string"
                                            },
                                            "type": "object"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "weight": {
                                    "description": "Weight specifies the relative proportion of traffic to be forwarded to the destination.",
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "timeout": {
                              "description": "Timeout for HTTP requests, default is disabled.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "tcp": {
                        "description": "An ordered list of route rules for opaque TCP traffic.",
                        "items": {
                          "properties": {
                            "match": {
                              "items": {
                                "properties": {
                                  "destinationSubnets": {
                                    "description": "IPv4 or IPv6 ip addresses of destination with optional subnet.",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "gateways": {
                                    "description": "Names of gateways where the rule should be applied.",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "port": {
                                    "description": "Specifies the port on the host that is being addressed.",
                                    "type": "integer"
                                  },
                                  "sourceLabels": {
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "type": "object"
                                  },
                                  "sourceNamespace": {
                                    "description": "Source namespace constraining the applicability of a rule to workloads in that namespace.",
                                    "type": "string"
                                  },
                                  "sourceSubnet": {
                                    "description": "IPv4 or IPv6 ip address of source with optional subnet.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "route": {
                              "description": "The destination to which the connection should be forwarded to.",
                              "items": {
                                "properties": {
                                  "destination": {
                                    "properties": {
                                      "host": {
                                        "description": "The name of a service from the service registry.",
                                        "type": "string"
                                      },
                                      "port": {
                                        "description": "Specifies the port on the host that is being addressed.",
                                        "properties": {
                                          "number": {
                                            "type": "integer"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "subset": {
                                        "description": "The name of a subset within the service.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "weight": {
                                    "description": "Weight specifies the relative proportion of traffic to be forwarded to the destination.",
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "tls": {
                        "items": {
                          "properties": {
                            "match": {
                              "items": {
                                "properties": {
                                  "destinationSubnets": {
                                    "description": "IPv4 or IPv6 ip addresses of destination with optional subnet.",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "gateways": {
                                    "description": "Names of gateways where the rule should be applied.",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "port": {
                                    "description": "Specifies the port on the host that is being addressed.",
                                    "type": "integer"
                                  },
                                  "sniHosts": {
                                    "description": "SNI (server name indicator) to match on.",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "sourceLabels": {
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "type": "object"
                                  },
                                  "sourceNamespace": {
                                    "description": "Source namespace constraining the applicability of a rule to workloads in that namespace.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "route": {
                              "description": "The destination to which the connection should be forwarded to.",
                              "items": {
                                "properties": {
                                  "destination": {
                                    "properties": {
                                      "host": {
                                        "description": "The name of a service from the service registry.",
                                        "type": "string"
                                      },
                                      "port": {
                                        "description": "Specifies the port on the host that is being addressed.",
                                        "properties": {
                                          "number": {
                                            "type": "integer"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "subset": {
                                        "description": "The name of a subset within the service.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "weight": {
                                    "description": "Weight specifies the relative proportion of traffic to be forwarded to the destination.",
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "status": {
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                  }
                },
                "type": "object"
              }
            },
            "served": true,
            "storage": false,
            "subresources": {
              "status": {}
            }
          }
        ]
      }
    },
    "/postgres/cluster_role_binding/battery_postgres_pod": {
      "apiVersion": "rbac.authorization.k8s.io/v1",
      "kind": "ClusterRoleBinding",
      "metadata": {
        "annotations": {
          "battery/hash": "7URXHCCMO3Y4AOGKV5ZQSTTLZABGGAV5A7KEVBVTCV5H5MOEEQYA===="
        },
        "labels": {
          "app": "postgres-operator",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "postgres-operator",
          "battery/app": "postgres-operator",
          "battery/managed": "true",
          "battery/managed.direct": "true"
        },
        "name": "battery-postgres-pod"
      },
      "roleRef": {
        "apiGroup": "rbac.authorization.k8s.io",
        "kind": "ClusterRole",
        "name": "battery-postgres-pod"
      },
      "subjects": [
        {
          "kind": "ServiceAccount",
          "name": "battery-postgres-pod",
          "namespace": "battery-base"
        },
        {
          "kind": "ServiceAccount",
          "name": "battery-postgres-pod",
          "namespace": "battery-data"
        }
      ]
    },
    "/istio/crd/workloadgroups_networking_istio_io": {
      "apiVersion": "apiextensions.k8s.io/v1",
      "kind": "CustomResourceDefinition",
      "metadata": {
        "annotations": {
          "battery/hash": "SSLSSGB2W2DJQ7ZJ56K63DEVDT3YCBOJSUUKKZO2PRCN22YCYVPA===="
        },
        "labels": {
          "app": "istio-pilot",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istio-base",
          "battery/app": "istio-base",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "chart": "istio"
        },
        "name": "workloadgroups.networking.istio.io"
      },
      "spec": {
        "group": "networking.istio.io",
        "names": {
          "categories": ["istio-io", "networking-istio-io"],
          "kind": "WorkloadGroup",
          "listKind": "WorkloadGroupList",
          "plural": "workloadgroups",
          "shortNames": ["wg"],
          "singular": "workloadgroup"
        },
        "scope": "Namespaced",
        "versions": [
          {
            "additionalPrinterColumns": [
              {
                "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
                "jsonPath": ".metadata.creationTimestamp",
                "name": "Age",
                "type": "date"
              }
            ],
            "name": "v1alpha3",
            "schema": {
              "openAPIV3Schema": {
                "properties": {
                  "spec": {
                    "description": "Describes a collection of workload instances. See more details at: https://istio.io/docs/reference/config/networking/workload-group.html",
                    "properties": {
                      "metadata": {
                        "description": "Metadata that will be used for all corresponding `WorkloadEntries`.",
                        "properties": {
                          "annotations": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "type": "object"
                          },
                          "labels": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "probe": {
                        "description": "`ReadinessProbe` describes the configuration the user must provide for healthchecking on their workload.",
                        "oneOf": [
                          {
                            "not": {
                              "anyOf": [
                                {
                                  "required": ["httpGet"]
                                },
                                {
                                  "required": ["tcpSocket"]
                                },
                                {
                                  "required": ["exec"]
                                }
                              ]
                            }
                          },
                          {
                            "required": ["httpGet"]
                          },
                          {
                            "required": ["tcpSocket"]
                          },
                          {
                            "required": ["exec"]
                          }
                        ],
                        "properties": {
                          "exec": {
                            "description": "Health is determined by how the command that is executed exited.",
                            "properties": {
                              "command": {
                                "description": "Command to run.",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          },
                          "failureThreshold": {
                            "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "httpGet": {
                            "properties": {
                              "host": {
                                "description": "Host name to connect to, defaults to the pod IP.",
                                "type": "string"
                              },
                              "httpHeaders": {
                                "description": "Headers the proxy will pass on to make the request.",
                                "items": {
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "path": {
                                "description": "Path to access on the HTTP server.",
                                "type": "string"
                              },
                              "port": {
                                "description": "Port on which the endpoint lives.",
                                "type": "integer"
                              },
                              "scheme": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "initialDelaySeconds": {
                            "description": "Number of seconds after the container has started before readiness probes are initiated.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "periodSeconds": {
                            "description": "How often (in seconds) to perform the probe.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "successThreshold": {
                            "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "tcpSocket": {
                            "description": "Health is determined by if the proxy is able to connect.",
                            "properties": {
                              "host": {
                                "type": "string"
                              },
                              "port": {
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "timeoutSeconds": {
                            "description": "Number of seconds after which the probe times out.",
                            "format": "int32",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "template": {
                        "description": "Template to be used for the generation of `WorkloadEntry` resources that belong to this `WorkloadGroup`.",
                        "properties": {
                          "address": {
                            "type": "string"
                          },
                          "labels": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "One or more labels associated with the endpoint.",
                            "type": "object"
                          },
                          "locality": {
                            "description": "The locality associated with the endpoint.",
                            "type": "string"
                          },
                          "network": {
                            "type": "string"
                          },
                          "ports": {
                            "additionalProperties": {
                              "type": "integer"
                            },
                            "description": "Set of ports associated with the endpoint.",
                            "type": "object"
                          },
                          "serviceAccount": {
                            "type": "string"
                          },
                          "weight": {
                            "description": "The load balancing weight associated with the endpoint.",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "status": {
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                  }
                },
                "type": "object"
              }
            },
            "served": true,
            "storage": true,
            "subresources": {
              "status": {}
            }
          },
          {
            "additionalPrinterColumns": [
              {
                "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
                "jsonPath": ".metadata.creationTimestamp",
                "name": "Age",
                "type": "date"
              }
            ],
            "name": "v1beta1",
            "schema": {
              "openAPIV3Schema": {
                "properties": {
                  "spec": {
                    "properties": {
                      "metadata": {
                        "description": "Metadata that will be used for all corresponding `WorkloadEntries`.",
                        "properties": {
                          "annotations": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "type": "object"
                          },
                          "labels": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "probe": {
                        "description": "`ReadinessProbe` describes the configuration the user must provide for healthchecking on their workload.",
                        "oneOf": [
                          {
                            "not": {
                              "anyOf": [
                                {
                                  "required": ["httpGet"]
                                },
                                {
                                  "required": ["tcpSocket"]
                                },
                                {
                                  "required": ["exec"]
                                }
                              ]
                            }
                          },
                          {
                            "required": ["httpGet"]
                          },
                          {
                            "required": ["tcpSocket"]
                          },
                          {
                            "required": ["exec"]
                          }
                        ],
                        "properties": {
                          "exec": {
                            "description": "Health is determined by how the command that is executed exited.",
                            "properties": {
                              "command": {
                                "description": "Command to run.",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          },
                          "failureThreshold": {
                            "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "httpGet": {
                            "properties": {
                              "host": {
                                "description": "Host name to connect to, defaults to the pod IP.",
                                "type": "string"
                              },
                              "httpHeaders": {
                                "description": "Headers the proxy will pass on to make the request.",
                                "items": {
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "path": {
                                "description": "Path to access on the HTTP server.",
                                "type": "string"
                              },
                              "port": {
                                "description": "Port on which the endpoint lives.",
                                "type": "integer"
                              },
                              "scheme": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "initialDelaySeconds": {
                            "description": "Number of seconds after the container has started before readiness probes are initiated.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "periodSeconds": {
                            "description": "How often (in seconds) to perform the probe.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "successThreshold": {
                            "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "tcpSocket": {
                            "description": "Health is determined by if the proxy is able to connect.",
                            "properties": {
                              "host": {
                                "type": "string"
                              },
                              "port": {
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "timeoutSeconds": {
                            "description": "Number of seconds after which the probe times out.",
                            "format": "int32",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "template": {
                        "description": "Template to be used for the generation of `WorkloadEntry` resources that belong to this `WorkloadGroup`.",
                        "properties": {
                          "address": {
                            "type": "string"
                          },
                          "labels": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "One or more labels associated with the endpoint.",
                            "type": "object"
                          },
                          "locality": {
                            "description": "The locality associated with the endpoint.",
                            "type": "string"
                          },
                          "network": {
                            "type": "string"
                          },
                          "ports": {
                            "additionalProperties": {
                              "type": "integer"
                            },
                            "description": "Set of ports associated with the endpoint.",
                            "type": "object"
                          },
                          "serviceAccount": {
                            "type": "string"
                          },
                          "weight": {
                            "description": "The load balancing weight associated with the endpoint.",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "status": {
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                  }
                },
                "type": "object"
              }
            },
            "served": true,
            "storage": false,
            "subresources": {
              "status": {}
            }
          }
        ]
      }
    },
    "/istio/cluster_role/istiod_battery_istio": {
      "apiVersion": "rbac.authorization.k8s.io/v1",
      "kind": "ClusterRole",
      "metadata": {
        "annotations": {
          "battery/hash": "SXSC4DEEK6KJVTEFUNJR3Y5AKYLQA5ZGLLNXCVODGSNK33635ESA===="
        },
        "labels": {
          "app": "istio-base",
          "app.kubernetes.io/component": "istiod",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "istio-base",
          "battery/app": "istio-base",
          "battery/component": "istiod",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "component": "istiod"
        },
        "name": "istiod-battery-istio"
      },
      "rules": [
        {
          "apiGroups": ["admissionregistration.k8s.io"],
          "resources": ["mutatingwebhookconfigurations"],
          "verbs": ["get", "list", "watch", "update", "patch"]
        },
        {
          "apiGroups": ["admissionregistration.k8s.io"],
          "resources": ["validatingwebhookconfigurations"],
          "verbs": ["get", "list", "watch", "update"]
        },
        {
          "apiGroups": [
            "config.istio.io",
            "security.istio.io",
            "networking.istio.io",
            "authentication.istio.io",
            "rbac.istio.io",
            "telemetry.istio.io"
          ],
          "resources": ["*"],
          "verbs": ["get", "watch", "list"]
        },
        {
          "apiGroups": ["networking.istio.io"],
          "resources": ["workloadentries"],
          "verbs": [
            "get",
            "watch",
            "list",
            "update",
            "patch",
            "create",
            "delete"
          ]
        },
        {
          "apiGroups": ["networking.istio.io"],
          "resources": ["workloadentries/status"],
          "verbs": [
            "get",
            "watch",
            "list",
            "update",
            "patch",
            "create",
            "delete"
          ]
        },
        {
          "apiGroups": ["apiextensions.k8s.io"],
          "resources": ["customresourcedefinitions"],
          "verbs": ["get", "list", "watch"]
        },
        {
          "apiGroups": [""],
          "resources": ["pods", "nodes", "services", "namespaces", "endpoints"],
          "verbs": ["get", "list", "watch"]
        },
        {
          "apiGroups": ["discovery.k8s.io"],
          "resources": ["endpointslices"],
          "verbs": ["get", "list", "watch"]
        },
        {
          "apiGroups": ["networking.k8s.io"],
          "resources": ["ingresses", "ingressclasses"],
          "verbs": ["get", "list", "watch"]
        },
        {
          "apiGroups": ["networking.k8s.io"],
          "resources": ["ingresses/status"],
          "verbs": ["*"]
        },
        {
          "apiGroups": [""],
          "resources": ["configmaps"],
          "verbs": ["create", "get", "list", "watch", "update"]
        },
        {
          "apiGroups": ["certificates.k8s.io"],
          "resources": [
            "certificatesigningrequests",
            "certificatesigningrequests/approval",
            "certificatesigningrequests/status"
          ],
          "verbs": ["update", "create", "get", "delete", "watch"]
        },
        {
          "apiGroups": ["certificates.k8s.io"],
          "resourceNames": ["kubernetes.io/legacy-unknown"],
          "resources": ["signers"],
          "verbs": ["approve"]
        },
        {
          "apiGroups": ["authentication.k8s.io"],
          "resources": ["tokenreviews"],
          "verbs": ["create"]
        },
        {
          "apiGroups": ["authorization.k8s.io"],
          "resources": ["subjectaccessreviews"],
          "verbs": ["create"]
        },
        {
          "apiGroups": ["networking.x-k8s.io", "gateway.networking.k8s.io"],
          "resources": ["*"],
          "verbs": ["get", "watch", "list"]
        },
        {
          "apiGroups": ["networking.x-k8s.io", "gateway.networking.k8s.io"],
          "resources": ["*"],
          "verbs": ["update"]
        },
        {
          "apiGroups": ["gateway.networking.k8s.io"],
          "resources": ["gatewayclasses"],
          "verbs": ["create", "update", "patch", "delete"]
        },
        {
          "apiGroups": [""],
          "resources": ["secrets"],
          "verbs": ["get", "watch", "list"]
        },
        {
          "apiGroups": ["multicluster.x-k8s.io"],
          "resources": ["serviceexports"],
          "verbs": ["get", "watch", "list", "create", "delete"]
        },
        {
          "apiGroups": ["multicluster.x-k8s.io"],
          "resources": ["serviceimports"],
          "verbs": ["get", "watch", "list"]
        }
      ]
    }
  },
  "kube_cluster": {
    "provider": "kind"
  },
  "target_summary": {
    "batteries": [
      {
        "config": {
          "base_namespace": "battery-base",
          "core_namespace": "battery-core",
          "data_namespace": "battery-data",
          "ml_namespace": "battery-ml"
        },
        "group": "magic",
        "id": null,
        "inserted_at": null,
        "type": "battery_core",
        "updated_at": null
      },
      {
        "config": {
          "bouncer_image": "registry.opensource.zalan.do/acid/pgbouncer:master-27",
          "infra_users": [
            {
              "generated_key": "not-real",
              "roles": ["createdb", "superuser", "login"],
              "username": "batterydbuser"
            }
          ],
          "json_logging_enabled": true,
          "logical_backup_image": "registry.opensource.zalan.do/acid/logical-backup:v1.9.0-8-g645fcc01",
          "operator_image": "registry.opensource.zalan.do/acid/postgres-operator:v1.9.0-8-g645fcc01",
          "spilo_image": "registry.opensource.zalan.do/acid/spilo-15:2.1-p9"
        },
        "group": "data",
        "id": null,
        "inserted_at": null,
        "type": "postgres",
        "updated_at": null
      },
      {
        "config": {
          "namespace": "battery-istio",
          "pilot_image": "istio/pilot:1.17.1-distroless"
        },
        "group": "net_sec",
        "id": null,
        "inserted_at": null,
        "type": "istio",
        "updated_at": null
      },
      {
        "config": {},
        "group": "net_sec",
        "id": null,
        "inserted_at": null,
        "type": "istio_gateway",
        "updated_at": null
      }
    ],
    "ceph_clusters": [],
    "ceph_filesystems": [],
    "ip_address_pools": [],
    "knative_services": [],
    "kube_state": {},
    "notebooks": [],
    "postgres_clusters": [
      {
        "credential_copies": [],
        "databases": [
          {
            "name": "control",
            "owner": "controlserver"
          }
        ],
        "id": null,
        "inserted_at": null,
        "name": "control",
        "num_instances": 1,
        "postgres_version": "14",
        "storage_size": "500M",
        "team_name": "pg",
        "type": "internal",
        "updated_at": null,
        "users": [
          {
            "roles": ["createdb", "login"],
            "username": "controlserver"
          }
        ]
      }
    ],
    "redis_clusters": []
  }
}
