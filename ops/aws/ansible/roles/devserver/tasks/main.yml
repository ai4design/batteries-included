---
- name: Checks for Docker signing key
  stat:
    path: /usr/share/keyrings/docker-archive-keyring.gpg
  register: docker_signing_key_installed
  ignore_errors: true

- name: Add Docker signing key
  ansible.builtin.shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
  when: docker_signing_key_installed.stat.exists == False
  
- name: Add specified repository into sources list
  ansible.builtin.apt_repository:
    repo: deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu jammy stable
    state: present

- name: Install Docker packages
  apt:
    pkg:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    state: latest
    update_cache: yes

- name: Install basic packages
  apt:
    state: present
    pkg:
      - build-essential
      - curl
      - git

- name: direnv
  get_url:
    url: "https://github.com/direnv/direnv/releases/download/v2.32.2/direnv.linux-amd64"
    dest: /usr/local/bin/direnv
    mode: a+x

- name: Get nix version
  shell: |
    . /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
    nix --version
  ignore_errors: true
  changed_when: false
  register: nix_version_output
- name: Set nix version name
  set_fact:
    nix_version_on_system: "{{ (nix_version_output.stdout_lines[0] | split(' '))[2] }}"
  when: nix_version_output.rc == 0

- name: Download and run installer
  when: (not nix_version_on_system is defined)
  block:
    - name: Download installer
      get_url:
        url: "https://install.determinate.systems/nix/nix-installer-x86_64-linux"
        dest: /tmp
    - name: Changing perm of "/foo/bar.sh", adding "+x"
      file: dest=/tmp/nix-installer-x86_64-linux mode=a+x
    - name: Run the installer
      become: true
      ansible.builtin.shell:
        cmd: ./nix-installer-x86_64-linux install linux --no-confirm
        chdir: /tmp
