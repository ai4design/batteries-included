defmodule ServerWeb.PageLive do
  @moduledoc """
  Autogenerated.
  """
  use ServerWeb, :live_view
  alias Server.Configs.RunningSet

  @impl true
  @spec mount(any, any, Phoenix.LiveView.Socket.t()) :: {:ok, Phoenix.LiveView.Socket.t()}
  def mount(_params, _session, socket) do
    {:ok, socket |> assign(:running_set, RunningSet.get!())}
  end

  @impl true
  def handle_event("start_service", %{"service" => service_name}, socket) do
    with {:ok, new_config} <-
           RunningSet.set_running(socket.assigns.running_set, service_name, true) do
      {:noreply, assign(socket, :running_set, new_config)}
    end
  end

  @impl true
  def handle_event("stop_service", %{"service" => service_name}, socket) do
    with {:ok, new_config} <-
           RunningSet.set_running(socket.assigns.running_set, service_name, false) do
      {:noreply, assign(socket, :running_set, new_config)}
    end
  end
end
